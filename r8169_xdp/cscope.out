cscope 15 $HOME/r8169_xdp -q 0000002585 0000560567
	@8139cp.c

49 
	#¥_fmt
(
fmt
Ë
KBUILD_MODNAME
 ": " 
	)
fmt

51 
	#DRV_NAME
 "8139˝"

	)

52 
	#DRV_VERSION
 "1.3"

	)

53 
	#DRV_RELDATE
 "M¨ 22, 2004"

	)

56 
	~<löux/moduÀ.h
>

57 
	~<löux/moduÀ∑øm.h
>

58 
	~<löux/kî√l.h
>

59 
	~<löux/compûî.h
>

60 
	~<löux/√tdevi˚.h
>

61 
	~<löux/ëhîdevi˚.h
>

62 
	~<löux/öô.h
>

63 
	~<löux/öãºu±.h
>

64 
	~<löux/pci.h
>

65 
	~<löux/dma-m≠pög.h
>

66 
	~<löux/dñay.h
>

67 
	~<löux/ëhtoﬁ.h
>

68 
	~<löux/gÂ.h
>

69 
	~<löux/mii.h
>

70 
	~<löux/if_vœn.h
>

71 
	~<löux/¸c32.h
>

72 
	~<löux/ö.h
>

73 
	~<löux/ù.h
>

74 
	~<löux/t˝.h
>

75 
	~<löux/udp.h
>

76 
	~<löux/ˇche.h
>

77 
	~<asm/io.h
>

78 
	~<asm/úq.h
>

79 
	~<asm/uac˚ss.h
>

82 
	gvîsi⁄
[] =

83 
DRV_NAME
 ": 10/100 PCI Ethî√àdrivî v" 
DRV_VERSION
 " (" 
DRV_RELDATE
 ")\n";

85 
MODULE_AUTHOR
("Jeff Garzik <jgarzik@pobox.com>");

86 
MODULE_DESCRIPTION
("RealTek RTL-8139C+ series 10/100 PCI Ethernet driver");

87 
MODULE_VERSION
(
DRV_VERSION
);

88 
MODULE_LICENSE
("GPL");

90 
	gdebug
 = -1;

91 
moduÀ_∑øm
(
debug
, , 0);

92 
MODULE_PARM_DESC
 (
debug
, "8139cp: bitmapped messageÉnableÇumber");

96 
	gmu…iˇ°_fûãr_limô
 = 32;

97 
moduÀ_∑øm
(
mu…iˇ°_fûãr_limô
, , 0);

98 
MODULE_PARM_DESC
 (
mu…iˇ°_fûãr_limô
, "8139cp: maximumÇumber of filtered multicastáddresses");

100 
	#CP_DEF_MSG_ENABLE
 (
NETIF_MSG_DRV
 | \

101 
NETIF_MSG_PROBE
 | \

102 
NETIF_MSG_LINK
)

	)

103 
	#CP_NUM_STATS
 14

	)

104 
	#CP_STATS_SIZE
 64

	)

105 
	#CP_REGS_SIZE
 (0xf‡+ 1)

	)

106 
	#CP_REGS_VER
 1

	)

107 
	#CP_RX_RING_SIZE
 64

	)

108 
	#CP_TX_RING_SIZE
 64

	)

109 
	#CP_RING_BYTES
 \

110 (((
˝_desc
Ë* 
CP_RX_RING_SIZE
) + \

111 ((
˝_desc
Ë* 
CP_TX_RING_SIZE
) + \

112 
CP_STATS_SIZE
)

	)

113 
	#NEXT_TX
(
N
Ë(((NË+ 1Ë& (
CP_TX_RING_SIZE
 - 1))

	)

114 
	#NEXT_RX
(
N
Ë(((NË+ 1Ë& (
CP_RX_RING_SIZE
 - 1))

	)

115 
	#TX_BUFFS_AVAIL
(
CP
) \

116 (((
CP
)->
tx_èû
 <(CP)->
tx_hód
) ? \

117 (
CP
)->
tx_èû
 + (
CP_TX_RING_SIZE
 - 1Ë- (CP)->
tx_hód
 : \

118 (
CP
)->
tx_èû
 - (CP)->
tx_hód
 - 1)

	)

120 
	#PKT_BUF_SZ
 1536

	)

121 
	#CP_INTERNAL_PHY
 32

	)

124 
	#RX_FIFO_THRESH
 5

	)

125 
	#RX_DMA_BURST
 4

	)

126 
	#TX_DMA_BURST
 6

	)

127 
	#TX_EARLY_THRESH
 256

	)

130 
	#TX_TIMEOUT
 (6*
HZ
)

	)

133 
	#CP_MIN_MTU
 60

	)

134 
	#CP_MAX_MTU
 4096

	)

138 
	mMAC0
 = 0x00,

139 
	mMAR0
 = 0x08,

140 
	mSètsAddr
 = 0x10,

141 
	mTxRögAddr
 = 0x20,

142 
	mHiTxRögAddr
 = 0x28,

143 
	mCmd
 = 0x37,

144 
	mI¡rMask
 = 0x3C,

145 
	mI¡rSètus
 = 0x3E,

146 
	mTxC⁄fig
 = 0x40,

147 
	mChùVîsi⁄
 = 0x43,

148 
	mRxC⁄fig
 = 0x44,

149 
	mRxMis£d
 = 0x4C,

150 
	mCfg9346
 = 0x50,

151 
	mC⁄fig1
 = 0x52,

152 
	mC⁄fig3
 = 0x59,

153 
	mC⁄fig4
 = 0x5A,

154 
	mMu…iI¡r
 = 0x5C,

155 
	mBasicModeCål
 = 0x62,

156 
	mBasicModeSètus
 = 0x64,

157 
	mNWayAdvît
 = 0x66,

158 
	mNWayLPAR
 = 0x68,

159 
	mNWayEx∑nsi⁄
 = 0x6A,

160 
	mTxDmaOkLowDesc
 = 0x82,

161 
	mC⁄fig5
 = 0xD8,

162 
	mTxPﬁl
 = 0xD9,

163 
	mRxMaxSize
 = 0xDA,

164 
	mCpCmd
 = 0xE0,

165 
	mI¡rMôig©e
 = 0xE2,

166 
	mRxRögAddr
 = 0xE4,

167 
	mTxThªsh
 = 0xEC,

168 
	mOldRxBufAddr
 = 0x30,

169 
	mOldTSD0
 = 0x10,

172 
	mDescOwn
 = (1 << 31),

173 
	mRögEnd
 = (1 << 30),

174 
	mFú°Føg
 = (1 << 29),

175 
	mLa°Føg
 = (1 << 28),

176 
	mL¨geSíd
 = (1 << 27),

177 
	mMSSShi·
 = 16,

178 
	mMSSMask
 = 0x7ff,

179 
	mTxEº‹
 = (1 << 23),

180 
	mRxEº‹
 = (1 << 20),

181 
	mIPCS
 = (1 << 18),

182 
	mUDPCS
 = (1 << 17),

183 
	mTCPCS
 = (1 << 16),

184 
	mTxVœnTag
 = (1 << 17),

185 
	mRxVœnTagged
 = (1 << 16),

186 
	mIPFaû
 = (1 << 15),

187 
	mUDPFaû
 = (1 << 14),

188 
	mTCPFaû
 = (1 << 13),

189 
	mN‹mÆTxPﬁl
 = (1 << 6),

190 
	mPID1
 = (1 << 17),

191 
	mPID0
 = (1 << 16),

192 
	mRxPrŸoTCP
 = 1,

193 
	mRxPrŸoUDP
 = 2,

194 
	mRxPrŸoIP
 = 3,

195 
	mTxFIFOUndî
 = (1 << 25),

196 
	mTxOWC
 = (1 << 22),

197 
	mTxLökFaû
 = (1 << 21),

198 
	mTxMaxCﬁ
 = (1 << 20),

199 
	mTxCﬁC¡Shi·
 = 16,

200 
	mTxCﬁC¡Mask
 = 0x01 | 0x02 | 0x04 | 0x08,

201 
	mRxEºFøme
 = (1 << 27),

202 
	mRxMˇ°
 = (1 << 26),

203 
	mRxEºCRC
 = (1 << 18),

204 
	mRxEºRu¡
 = (1 << 19),

205 
	mRxEºL⁄g
 = (1 << 21),

206 
	mRxEºFIFO
 = (1 << 22),

209 
	mDumpSèts
 = (1 << 3),

212 
	mRxCfgFIFOShi·
 = 13,

213 
	mRxCfgDMAShi·
 = 8,

214 
	mAc˚±Eº
 = 0x20,

215 
	mAc˚±Ru¡
 = 0x10,

216 
	mAc˚±Brﬂdˇ°
 = 0x08,

217 
	mAc˚±Mu…iˇ°
 = 0x04,

218 
	mAc˚±MyPhys
 = 0x02,

219 
	mAc˚±AŒPhys
 = 0x01,

222 
	mPciEº
 = (1 << 15),

223 
	mTimîI¡r
 = (1 << 14),

224 
	mLíChg
 = (1 << 13),

225 
	mSWI¡
 = (1 << 8),

226 
	mTxEm±y
 = (1 << 7),

227 
	mRxFIFOOvr
 = (1 << 6),

228 
	mLökChg
 = (1 << 5),

229 
	mRxEm±y
 = (1 << 4),

230 
	mTxEº
 = (1 << 3),

231 
	mTxOK
 = (1 << 2),

232 
	mRxEº
 = (1 << 1),

233 
	mRxOK
 = (1 << 0),

234 
	mI¡rResvd
 = (1 << 10),

237 
	mI¡rAŒ
 = 
PciEº
 | 
TimîI¡r
 | 
LíChg
 | 
SWI¡
 | 
TxEm±y
 |

238 
RxFIFOOvr
 | 
LökChg
 | 
RxEm±y
 | 
TxEº
 | 
TxOK
 |

239 
RxEº
 | 
RxOK
 | 
I¡rResvd
,

242 
	mCmdRe£t
 = (1 << 4),

243 
	mRxOn
 = (1 << 3),

244 
	mTxOn
 = (1 << 2),

247 
	mRxVœnOn
 = (1 << 6),

248 
	mRxChkSum
 = (1 << 5),

249 
	mPCIDAC
 = (1 << 4),

250 
	mPCIMulRW
 = (1 << 3),

251 
	mCpRxOn
 = (1 << 1),

252 
	mCpTxOn
 = (1 << 0),

255 
	mCfg9346_Lock
 = 0x00,

256 
	mCfg9346_U∆ock
 = 0xC0,

259 
	mIFG
 = (1 << 25) | (1 << 24),

260 
	mTxDMAShi·
 = 8,

263 
	mTxThªshMask
 = 0x3f,

264 
	mTxThªshMax
 = 2048,

267 
	mDrivîLﬂded
 = (1 << 5),

268 
	mLWACT
 = (1 << 4),

269 
	mPME«bÀ
 = (1 << 0),

272 
	mPARME«bÀ
 = (1 << 6),

273 
	mMagicPackë
 = (1 << 5),

274 
	mLökUp
 = (1 << 4),

277 
	mLWPTN
 = (1 << 1),

278 
	mLWPME
 = (1 << 4),

281 
	mBWF
 = (1 << 6),

282 
	mMWF
 = (1 << 5),

283 
	mUWF
 = (1 << 4),

284 
	mLANWake
 = (1 << 1),

285 
	mPMESètus
 = (1 << 0),

287 
	m˝_n‹x_öå_mask
 = 
PciEº
 | 
LökChg
 | 
TxOK
 | 
TxEº
 | 
TxEm±y
,

288 
	m˝_rx_öå_mask
 = 
RxOK
 | 
RxEº
 | 
RxEm±y
 | 
RxFIFOOvr
,

289 
	m˝_öå_mask
 = 
˝_rx_öå_mask
 | 
˝_n‹x_öå_mask
,

292 c⁄° 
	g˝_rx_c⁄fig
 =

293 (
RX_FIFO_THRESH
 << 
RxCfgFIFOShi·
) |

294 (
RX_DMA_BURST
 << 
RxCfgDMAShi·
);

296 
	s˝_desc
 {

297 
__À32
 
	m›ts1
;

298 
__À32
 
	m›ts2
;

299 
__À64
 
	maddr
;

302 
	s˝_dma_°©s
 {

303 
__À64
 
	mtx_ok
;

304 
__À64
 
	mrx_ok
;

305 
__À64
 
	mtx_îr
;

306 
__À32
 
	mrx_îr
;

307 
__À16
 
	mrx_fifo
;

308 
__À16
 
	m‰ame_Æign
;

309 
__À32
 
	mtx_ok_1cﬁ
;

310 
__À32
 
	mtx_ok_mcﬁ
;

311 
__À64
 
	mrx_ok_phys
;

312 
__À64
 
	mrx_ok_bˇ°
;

313 
__À32
 
	mrx_ok_mˇ°
;

314 
__À16
 
	mtx_ab‹t
;

315 
__À16
 
	mtx_undîrun
;

316 } 
	g__∑cked
;

318 
	s˝_exåa_°©s
 {

319 
	mrx_‰ags
;

322 
	s˝_¥iv©e
 {

323 
__iomem
 *
	mªgs
;

324 
√t_devi˚
 *
	mdev
;

325 
•ölock_t
 
	mlock
;

326 
u32
 
	mmsg_íabÀ
;

328 
«pi_°ru˘
 
	m«pi
;

330 
pci_dev
 *
	mpdev
;

331 
u32
 
	mrx_c⁄fig
;

332 
u16
 
	m˝cmd
;

334 
˝_exåa_°©s
 
	m˝_°©s
;

336 
rx_hód
 
	m____ˇchñöe_Æig√d
;

337 
	mrx_èû
;

338 
˝_desc
 *
	mrx_rög
;

339 
sk_buff
 *
	mrx_skb
[
CP_RX_RING_SIZE
];

341 
tx_hód
 
	m____ˇchñöe_Æig√d
;

342 
	mtx_èû
;

343 
˝_desc
 *
	mtx_rög
;

344 
sk_buff
 *
	mtx_skb
[
CP_TX_RING_SIZE
];

345 
u32
 
	mtx_›ts
[
CP_TX_RING_SIZE
];

347 
	mrx_buf_sz
;

348 
	mwﬁ_íabÀd
 : 1;

350 
dma_addr_t
 
	mrög_dma
;

352 
mii_if_öfo
 
	mmii_if
;

355 
	#˝r8
(
ªg
Ë
	`ªadb
(
˝
->
ªgs
 + (ªg))

	)

356 
	#˝r16
(
ªg
Ë
	`ªadw
(
˝
->
ªgs
 + (ªg))

	)

357 
	#˝r32
(
ªg
Ë
	`ªadl
(
˝
->
ªgs
 + (ªg))

	)

358 
	#˝w8
(
ªg
,
vÆ
Ë
	`wrôeb
((vÆ), 
˝
->
ªgs
 + (ªg))

	)

359 
	#˝w16
(
ªg
,
vÆ
Ë
	`wrôew
((vÆ), 
˝
->
ªgs
 + (ªg))

	)

360 
	#˝w32
(
ªg
,
vÆ
Ë
	`wrôñ
((vÆ), 
˝
->
ªgs
 + (ªg))

	)

361 
	#˝w8_f
(
ªg
,
vÆ
) do { \

362 
	`wrôeb
((
vÆ
), 
˝
->
ªgs
 + (
ªg
)); \

363 
	`ªadb
(
˝
->
ªgs
 + (
ªg
)); \

364 } 0)

	)

365 
	#˝w16_f
(
ªg
,
vÆ
) do { \

366 
	`wrôew
((
vÆ
), 
˝
->
ªgs
 + (
ªg
)); \

367 
	`ªadw
(
˝
->
ªgs
 + (
ªg
)); \

368 } 0)

	)

369 
	#˝w32_f
(
ªg
,
vÆ
) do { \

370 
	`wrôñ
((
vÆ
), 
˝
->
ªgs
 + (
ªg
)); \

371 
	`ªadl
(
˝
->
ªgs
 + (
ªg
)); \

372 } 0)

	)

375 
__˝_£t_rx_mode
 (
√t_devi˚
 *
dev
);

376 
˝_tx
 (
˝_¥iv©e
 *
˝
);

377 
˝_˛ón_rögs
 (
˝_¥iv©e
 *
˝
);

378 #ifde‡
CONFIG_NET_POLL_CONTROLLER


379 
˝_pﬁl_c⁄åﬁÀr
(
√t_devi˚
 *
dev
);

381 
˝_gë_ì¥om_Àn
(
√t_devi˚
 *
dev
);

382 
˝_gë_ì¥om
(
√t_devi˚
 *
dev
,

383 
ëhtoﬁ_ì¥om
 *
ì¥om
, 
u8
 *
d©a
);

384 
˝_£t_ì¥om
(
√t_devi˚
 *
dev
,

385 
ëhtoﬁ_ì¥om
 *
ì¥om
, 
u8
 *
d©a
);

388 c⁄° 
	m°r
[
ETH_GSTRING_LEN
];

389 } 
	gëhtoﬁ_°©s_keys
[] = {

407 
ölöe
 
	$˝_£t_rxbufsize
 (
˝_¥iv©e
 *
˝
)

409 
mtu
 = 
˝
->
dev
->mtu;

411 i‡(
mtu
 > 
ETH_DATA_LEN
)

413 
˝
->
rx_buf_sz
 = 
mtu
 + 
ETH_HLEN
 + 8;

415 
˝
->
rx_buf_sz
 = 
PKT_BUF_SZ
;

416 
	}
}

418 
ölöe
 
	$˝_rx_skb
 (
˝_¥iv©e
 *
˝
, 
sk_buff
 *
skb
,

419 
˝_desc
 *
desc
)

421 
u32
 
›ts2
 = 
	`À32_to_˝u
(
desc
->opts2);

423 
skb
->
¥Ÿocﬁ
 = 
	`ëh_ty≥_å™s
 (skb, 
˝
->
dev
);

425 
˝
->
dev
->
°©s
.
rx_∑ckës
++;

426 
˝
->
dev
->
°©s
.
rx_byãs
 +
skb
->
Àn
;

428 i‡(
›ts2
 & 
RxVœnTagged
)

429 
	`__vœn_hwac˚l_put_èg
(
skb
, 
	`ht⁄s
(
ETH_P_8021Q
), 
	`swab16
(
›ts2
 & 0xffff));

431 
	`«pi_gro_ª˚ive
(&
˝
->
«pi
, 
skb
);

432 
	}
}

434 
	$˝_rx_îr_ac˘
 (
˝_¥iv©e
 *
˝
, 
rx_èû
,

435 
u32
 
°©us
, u32 
Àn
)

437 
	`√tif_dbg
(
˝
, 
rx_îr
, cp->
dev
, "rxÉrr, slot %d status 0x%xÜen %d\n",

438 
rx_èû
, 
°©us
, 
Àn
);

439 
˝
->
dev
->
°©s
.
rx_îr‹s
++;

440 i‡(
°©us
 & 
RxEºFøme
)

441 
˝
->
dev
->
°©s
.
rx_‰ame_îr‹s
++;

442 i‡(
°©us
 & 
RxEºCRC
)

443 
˝
->
dev
->
°©s
.
rx_¸c_îr‹s
++;

444 i‡((
°©us
 & 
RxEºRu¡
Ë|| (°©u†& 
RxEºL⁄g
))

445 
˝
->
dev
->
°©s
.
rx_Àngth_îr‹s
++;

446 i‡((
°©us
 & (
Fú°Føg
 | 
La°Føg
)) != (FirstFrag | LastFrag))

447 
˝
->
dev
->
°©s
.
rx_Àngth_îr‹s
++;

448 i‡(
°©us
 & 
RxEºFIFO
)

449 
˝
->
dev
->
°©s
.
rx_fifo_îr‹s
++;

450 
	}
}

452 
ölöe
 
	$˝_rx_csum_ok
 (
u32
 
°©us
)

454 
¥Ÿocﬁ
 = (
°©us
 >> 16) & 0x3;

456 i‡(((
¥Ÿocﬁ
 =
RxPrŸoTCP
Ë&& !(
°©us
 & 
TCPFaû
)) ||

457 ((
¥Ÿocﬁ
 =
RxPrŸoUDP
Ë&& !(
°©us
 & 
UDPFaû
)))

461 
	}
}

463 
	$˝_rx_pﬁl
(
«pi_°ru˘
 *
«pi
, 
budgë
)

465 
˝_¥iv©e
 *
˝
 = 
	`c⁄èöî_of
(
«pi
, cp_private,Çapi);

466 
√t_devi˚
 *
dev
 = 
˝
->dev;

467 
rx_èû
 = 
˝
->rx_tail;

468 
rx
;

470 
rx
 = 0;

471 
rx_°©us_lo›
:

472 
	`˝w16
(
I¡rSètus
, 
˝_rx_öå_mask
);

474 
rx
 < 
budgë
) {

475 
u32
 
°©us
, 
Àn
;

476 
dma_addr_t
 
m≠pög
, 
√w_m≠pög
;

477 
sk_buff
 *
skb
, *
√w_skb
;

478 
˝_desc
 *
desc
;

479 c⁄° 
buÊí
 = 
˝
->
rx_buf_sz
;

481 
skb
 = 
˝
->
rx_skb
[
rx_èû
];

482 
	`BUG_ON
(!
skb
);

484 
desc
 = &
˝
->
rx_rög
[
rx_èû
];

485 
°©us
 = 
	`À32_to_˝u
(
desc
->
›ts1
);

486 i‡(
°©us
 & 
DescOwn
)

489 
Àn
 = (
°©us
 & 0x1fff) - 4;

490 
m≠pög
 = 
	`À64_to_˝u
(
desc
->
addr
);

492 i‡((
°©us
 & (
Fú°Føg
 | 
La°Føg
)) != (FirstFrag | LastFrag)) {

498 
	`˝_rx_îr_ac˘
(
˝
, 
rx_èû
, 
°©us
, 
Àn
);

499 
dev
->
°©s
.
rx_dr›≥d
++;

500 
˝
->
˝_°©s
.
rx_‰ags
++;

501 
rx_√xt
;

504 i‡(
°©us
 & (
RxEº‹
 | 
RxEºFIFO
)) {

505 
	`˝_rx_îr_ac˘
(
˝
, 
rx_èû
, 
°©us
, 
Àn
);

506 
rx_√xt
;

509 
	`√tif_dbg
(
˝
, 
rx_°©us
, 
dev
, "rx slot %d status 0x%xÜen %d\n",

510 
rx_èû
, 
°©us
, 
Àn
);

512 
√w_skb
 = 
	`«pi_Æloc_skb
(
«pi
, 
buÊí
);

513 i‡(!
√w_skb
) {

514 
dev
->
°©s
.
rx_dr›≥d
++;

515 
rx_√xt
;

518 
√w_m≠pög
 = 
	`dma_m≠_sögÀ
(&
˝
->
pdev
->
dev
, 
√w_skb
->
d©a
, 
buÊí
,

519 
PCI_DMA_FROMDEVICE
);

520 i‡(
	`dma_m≠pög_îr‹
(&
˝
->
pdev
->
dev
, 
√w_m≠pög
)) {

521 
dev
->
°©s
.
rx_dr›≥d
++;

522 
	`k‰ì_skb
(
√w_skb
);

523 
rx_√xt
;

526 
	`dma_unm≠_sögÀ
(&
˝
->
pdev
->
dev
, 
m≠pög
,

527 
buÊí
, 
PCI_DMA_FROMDEVICE
);

530 i‡(
	`˝_rx_csum_ok
(
°©us
))

531 
skb
->
ù_summed
 = 
CHECKSUM_UNNECESSARY
;

533 
	`skb_checksum_n⁄e_as£π
(
skb
);

535 
	`skb_put
(
skb
, 
Àn
);

537 
˝
->
rx_skb
[
rx_èû
] = 
√w_skb
;

539 
	`˝_rx_skb
(
˝
, 
skb
, 
desc
);

540 
rx
++;

541 
m≠pög
 = 
√w_m≠pög
;

543 
rx_√xt
:

544 
˝
->
rx_rög
[
rx_èû
].
›ts2
 = 0;

545 
˝
->
rx_rög
[
rx_èû
].
addr
 = 
	`˝u_to_À64
(
m≠pög
);

546 i‡(
rx_èû
 =(
CP_RX_RING_SIZE
 - 1))

547 
desc
->
›ts1
 = 
	`˝u_to_À32
(
DescOwn
 | 
RögEnd
 |

548 
˝
->
rx_buf_sz
);

550 
desc
->
›ts1
 = 
	`˝u_to_À32
(
DescOwn
 | 
˝
->
rx_buf_sz
);

551 
rx_èû
 = 
	`NEXT_RX
(rx_tail);

554 
˝
->
rx_èû
 =Ñx_tail;

559 i‡(
rx
 < 
budgë
) {

560 
Êags
;

562 i‡(
	`˝r16
(
I¡rSètus
Ë& 
˝_rx_öå_mask
)

563 
rx_°©us_lo›
;

565 
	`«pi_gro_Êush
(
«pi
, 
Ál£
);

566 
	`•ö_lock_úqßve
(&
˝
->
lock
, 
Êags
);

567 
	`__«pi_com∂ëe
(
«pi
);

568 
	`˝w16_f
(
I¡rMask
, 
˝_öå_mask
);

569 
	`•ö_u∆ock_úqª°‹e
(&
˝
->
lock
, 
Êags
);

572  
rx
;

573 
	}
}

575 
úqªtu∫_t
 
	$˝_öãºu±
 (
úq
, *
dev_ö°™˚
)

577 
√t_devi˚
 *
dev
 = 
dev_ö°™˚
;

578 
˝_¥iv©e
 *
˝
;

579 
h™dÀd
 = 0;

580 
u16
 
°©us
;

582 i‡(
	`u∆ikñy
(
dev
 =
NULL
))

583  
IRQ_NONE
;

584 
˝
 = 
	`√tdev_¥iv
(
dev
);

586 
	`•ö_lock
(&
˝
->
lock
);

588 
°©us
 = 
	`˝r16
(
I¡rSètus
);

589 i‡(!
°©us
 || (status == 0xFFFF))

590 
out_u∆ock
;

592 
h™dÀd
 = 1;

594 
	`√tif_dbg
(
˝
, 
öå
, 
dev
, "intr, status %04x cmd %02x cpcmd %04x\n",

595 
°©us
, 
	`˝r8
(
Cmd
), 
	`˝r16
(
CpCmd
));

597 
	`˝w16
(
I¡rSètus
, 
°©us
 & ~
˝_rx_öå_mask
);

600 i‡(
	`u∆ikñy
(!
	`√tif_ru¬ög
(
dev
))) {

601 
	`˝w16
(
I¡rMask
, 0);

602 
out_u∆ock
;

605 i‡(
°©us
 & (
RxOK
 | 
RxEº
 | 
RxEm±y
 | 
RxFIFOOvr
))

606 i‡(
	`«pi_scheduÀ_¥ï
(&
˝
->
«pi
)) {

607 
	`˝w16_f
(
I¡rMask
, 
˝_n‹x_öå_mask
);

608 
	`__«pi_scheduÀ
(&
˝
->
«pi
);

611 i‡(
°©us
 & (
TxOK
 | 
TxEº
 | 
TxEm±y
 | 
SWI¡
))

612 
	`˝_tx
(
˝
);

613 i‡(
°©us
 & 
LökChg
)

614 
	`mii_check_medü
(&
˝
->
mii_if
, 
	`√tif_msg_lök
(˝), 
Ál£
);

617 i‡(
°©us
 & 
PciEº
) {

618 
u16
 
pci_°©us
;

620 
	`pci_ªad_c⁄fig_w‹d
(
˝
->
pdev
, 
PCI_STATUS
, &
pci_°©us
);

621 
	`pci_wrôe_c⁄fig_w‹d
(
˝
->
pdev
, 
PCI_STATUS
, 
pci_°©us
);

622 
	`√tdev_îr
(
dev
, "PCI busÉrror, status=%04x, PCI status=%04x\n",

623 
°©us
, 
pci_°©us
);

628 
out_u∆ock
:

629 
	`•ö_u∆ock
(&
˝
->
lock
);

631  
	`IRQ_RETVAL
(
h™dÀd
);

632 
	}
}

634 #ifde‡
CONFIG_NET_POLL_CONTROLLER


639 
	$˝_pﬁl_c⁄åﬁÀr
(
√t_devi˚
 *
dev
)

641 
˝_¥iv©e
 *
˝
 = 
	`√tdev_¥iv
(
dev
);

642 c⁄° 
úq
 = 
˝
->
pdev
->irq;

644 
	`dißbÀ_úq
(
úq
);

645 
	`˝_öãºu±
(
úq
, 
dev
);

646 
	`íabÀ_úq
(
úq
);

647 
	}
}

650 
	$˝_tx
 (
˝_¥iv©e
 *
˝
)

652 
tx_hód
 = 
˝
->tx_head;

653 
tx_èû
 = 
˝
->tx_tail;

654 
byãs_com∂
 = 0, 
pkts_com∂
 = 0;

656 
tx_èû
 !
tx_hód
) {

657 
˝_desc
 *
txd
 = 
˝
->
tx_rög
 + 
tx_èû
;

658 
sk_buff
 *
skb
;

659 
u32
 
°©us
;

661 
	`rmb
();

662 
°©us
 = 
	`À32_to_˝u
(
txd
->
›ts1
);

663 i‡(
°©us
 & 
DescOwn
)

666 
skb
 = 
˝
->
tx_skb
[
tx_èû
];

667 
	`BUG_ON
(!
skb
);

669 
	`dma_unm≠_sögÀ
(&
˝
->
pdev
->
dev
, 
	`À64_to_˝u
(
txd
->
addr
),

670 
˝
->
tx_›ts
[
tx_èû
] & 0xffff,

671 
PCI_DMA_TODEVICE
);

673 i‡(
°©us
 & 
La°Føg
) {

674 i‡(
°©us
 & (
TxEº‹
 | 
TxFIFOUndî
)) {

675 
	`√tif_dbg
(
˝
, 
tx_îr
, cp->
dev
,

676 "txÉº, sètu†0x%x\n", 
°©us
);

677 
˝
->
dev
->
°©s
.
tx_îr‹s
++;

678 i‡(
°©us
 & 
TxOWC
)

679 
˝
->
dev
->
°©s
.
tx_wödow_îr‹s
++;

680 i‡(
°©us
 & 
TxMaxCﬁ
)

681 
˝
->
dev
->
°©s
.
tx_ab‹ãd_îr‹s
++;

682 i‡(
°©us
 & 
TxLökFaû
)

683 
˝
->
dev
->
°©s
.
tx_ˇºõr_îr‹s
++;

684 i‡(
°©us
 & 
TxFIFOUndî
)

685 
˝
->
dev
->
°©s
.
tx_fifo_îr‹s
++;

687 
˝
->
dev
->
°©s
.
cﬁlisi⁄s
 +=

688 ((
°©us
 >> 
TxCﬁC¡Shi·
Ë& 
TxCﬁC¡Mask
);

689 
˝
->
dev
->
°©s
.
tx_∑ckës
++;

690 
˝
->
dev
->
°©s
.
tx_byãs
 +
skb
->
Àn
;

691 
	`√tif_dbg
(
˝
, 
tx_d⁄e
, cp->
dev
,

692 "tx d⁄e, slŸ %d\n", 
tx_èû
);

694 
byãs_com∂
 +
skb
->
Àn
;

695 
pkts_com∂
++;

696 
	`dev_k‰ì_skb_úq
(
skb
);

699 
˝
->
tx_skb
[
tx_èû
] = 
NULL
;

701 
tx_èû
 = 
	`NEXT_TX
(tx_tail);

704 
˝
->
tx_èû
 =Åx_tail;

706 
	`√tdev_com∂ëed_queue
(
˝
->
dev
, 
pkts_com∂
, 
byãs_com∂
);

707 i‡(
	`TX_BUFFS_AVAIL
(
˝
Ë> (
MAX_SKB_FRAGS
 + 1))

708 
	`√tif_wake_queue
(
˝
->
dev
);

709 
	}
}

711 
ölöe
 
u32
 
	$˝_tx_vœn_èg
(
sk_buff
 *
skb
)

713  
	`skb_vœn_èg_¥e£¡
(
skb
) ?

714 
TxVœnTag
 | 
	`swab16
(
	`skb_vœn_èg_gë
(
skb
)) : 0x00;

715 
	}
}

717 
	$unwöd_tx_‰ag_m≠pög
(
˝_¥iv©e
 *
˝
, 
sk_buff
 *
skb
,

718 
fú°
, 
íåy_œ°
)

720 
‰ag
, 
ödex
;

721 
˝_desc
 *
txd
;

722 
skb_‰ag_t
 *
this_‰ag
;

723 
‰ag
 = 0; føg+
fú°
 < 
íåy_œ°
; frag++) {

724 
ödex
 = 
fú°
+
‰ag
;

725 
˝
->
tx_skb
[
ödex
] = 
NULL
;

726 
txd
 = &
˝
->
tx_rög
[
ödex
];

727 
this_‰ag
 = &
	`skb_shöfo
(
skb
)->
‰ags
[
‰ag
];

728 
	`dma_unm≠_sögÀ
(&
˝
->
pdev
->
dev
, 
	`À64_to_˝u
(
txd
->
addr
),

729 
	`skb_‰ag_size
(
this_‰ag
), 
PCI_DMA_TODEVICE
);

731 
	}
}

733 
√tdev_tx_t
 
	$˝_°¨t_xmô
 (
sk_buff
 *
skb
,

734 
√t_devi˚
 *
dev
)

736 
˝_¥iv©e
 *
˝
 = 
	`√tdev_¥iv
(
dev
);

737 
íåy
;

738 
u32
 
e‹
, 
›ts1
;

739 
öå_Êags
;

740 
__À32
 
›ts2
;

741 
mss
 = 0;

743 
	`•ö_lock_úqßve
(&
˝
->
lock
, 
öå_Êags
);

746 i‡(
	`TX_BUFFS_AVAIL
(
˝
Ë<(
	`skb_shöfo
(
skb
)->
ƒ_‰ags
 + 1)) {

747 
	`√tif_°›_queue
(
dev
);

748 
	`•ö_u∆ock_úqª°‹e
(&
˝
->
lock
, 
öå_Êags
);

749 
	`√tdev_îr
(
dev
, "BUG! Tx Ring full when queueáwake!\n");

750  
NETDEV_TX_BUSY
;

753 
íåy
 = 
˝
->
tx_hód
;

754 
e‹
 = (
íåy
 =(
CP_TX_RING_SIZE
 - 1)Ë? 
RögEnd
 : 0;

755 
mss
 = 
	`skb_shöfo
(
skb
)->
gso_size
;

757 i‡(
mss
 > 
MSSMask
) {

758 
	`WARN_ONCE
(1, "Net bug: GSO size %dÅooÜarge for 8139CP\n",

759 
mss
);

760 
out_dma_îr‹
;

763 
›ts2
 = 
	`˝u_to_À32
(
	`˝_tx_vœn_èg
(
skb
));

764 
›ts1
 = 
DescOwn
;

765 i‡(
mss
)

766 
›ts1
 |
L¨geSíd
 | (
mss
 << 
MSSShi·
);

767 i‡(
skb
->
ù_summed
 =
CHECKSUM_PARTIAL
) {

768 c⁄° 
ùhdr
 *
ù
 = 
	`ù_hdr
(
skb
);

769 i‡(
ù
->
¥Ÿocﬁ
 =
IPPROTO_TCP
)

770 
›ts1
 |
IPCS
 | 
TCPCS
;

771 i‡(
ù
->
¥Ÿocﬁ
 =
IPPROTO_UDP
)

772 
›ts1
 |
IPCS
 | 
UDPCS
;

774 
	`WARN_ONCE
(1,

776 
out_dma_îr‹
;

780 i‡(
	`skb_shöfo
(
skb
)->
ƒ_‰ags
 == 0) {

781 
˝_desc
 *
txd
 = &
˝
->
tx_rög
[
íåy
];

782 
u32
 
Àn
;

783 
dma_addr_t
 
m≠pög
;

785 
Àn
 = 
skb
->len;

786 
m≠pög
 = 
	`dma_m≠_sögÀ
(&
˝
->
pdev
->
dev
, 
skb
->
d©a
, 
Àn
, 
PCI_DMA_TODEVICE
);

787 i‡(
	`dma_m≠pög_îr‹
(&
˝
->
pdev
->
dev
, 
m≠pög
))

788 
out_dma_îr‹
;

790 
txd
->
›ts2
 = opts2;

791 
txd
->
addr
 = 
	`˝u_to_À64
(
m≠pög
);

792 
	`wmb
();

794 
›ts1
 |
e‹
 | 
Àn
 | 
Fú°Føg
 | 
La°Føg
;

796 
txd
->
›ts1
 = 
	`˝u_to_À32
(opts1);

797 
	`wmb
();

799 
˝
->
tx_skb
[
íåy
] = 
skb
;

800 
˝
->
tx_›ts
[
íåy
] = 
›ts1
;

801 
	`√tif_dbg
(
˝
, 
tx_queued
, cp->
dev
, "tx queued, slot %d, skblen %d\n",

802 
íåy
, 
skb
->
Àn
);

804 
˝_desc
 *
txd
;

805 
u32
 
fú°_Àn
, 
fú°_e‹
, 
˘æ
;

806 
dma_addr_t
 
fú°_m≠pög
;

807 
‰ag
, 
fú°_íåy
 = 
íåy
;

812 
fú°_e‹
 = 
e‹
;

813 
fú°_Àn
 = 
	`skb_hódÀn
(
skb
);

814 
fú°_m≠pög
 = 
	`dma_m≠_sögÀ
(&
˝
->
pdev
->
dev
, 
skb
->
d©a
,

815 
fú°_Àn
, 
PCI_DMA_TODEVICE
);

816 i‡(
	`dma_m≠pög_îr‹
(&
˝
->
pdev
->
dev
, 
fú°_m≠pög
))

817 
out_dma_îr‹
;

819 
˝
->
tx_skb
[
íåy
] = 
skb
;

821 
‰ag
 = 0; føg < 
	`skb_shöfo
(
skb
)->
ƒ_‰ags
; frag++) {

822 c⁄° 
skb_‰ag_t
 *
this_‰ag
 = &
	`skb_shöfo
(
skb
)->
‰ags
[
‰ag
];

823 
u32
 
Àn
;

824 
dma_addr_t
 
m≠pög
;

826 
íåy
 = 
	`NEXT_TX
(entry);

828 
Àn
 = 
	`skb_‰ag_size
(
this_‰ag
);

829 
m≠pög
 = 
	`dma_m≠_sögÀ
(&
˝
->
pdev
->
dev
,

830 
	`skb_‰ag_addªss
(
this_‰ag
),

831 
Àn
, 
PCI_DMA_TODEVICE
);

832 i‡(
	`dma_m≠pög_îr‹
(&
˝
->
pdev
->
dev
, 
m≠pög
)) {

833 
	`unwöd_tx_‰ag_m≠pög
(
˝
, 
skb
, 
fú°_íåy
, 
íåy
);

834 
out_dma_îr‹
;

837 
e‹
 = (
íåy
 =(
CP_TX_RING_SIZE
 - 1)Ë? 
RögEnd
 : 0;

839 
˘æ
 = 
›ts1
 | 
e‹
 | 
Àn
;

841 i‡(
‰ag
 =
	`skb_shöfo
(
skb
)->
ƒ_‰ags
 - 1)

842 
˘æ
 |
La°Føg
;

844 
txd
 = &
˝
->
tx_rög
[
íåy
];

845 
txd
->
›ts2
 = opts2;

846 
txd
->
addr
 = 
	`˝u_to_À64
(
m≠pög
);

847 
	`wmb
();

849 
txd
->
›ts1
 = 
	`˝u_to_À32
(
˘æ
);

850 
	`wmb
();

852 
˝
->
tx_›ts
[
íåy
] = 
˘æ
;

853 
˝
->
tx_skb
[
íåy
] = 
skb
;

856 
txd
 = &
˝
->
tx_rög
[
fú°_íåy
];

857 
txd
->
›ts2
 = opts2;

858 
txd
->
addr
 = 
	`˝u_to_À64
(
fú°_m≠pög
);

859 
	`wmb
();

861 
˘æ
 = 
›ts1
 | 
fú°_e‹
 | 
fú°_Àn
 | 
Fú°Føg
;

862 
txd
->
›ts1
 = 
	`˝u_to_À32
(
˘æ
);

863 
	`wmb
();

865 
˝
->
tx_›ts
[
fú°_íåy
] = 
˘æ
;

866 
	`√tif_dbg
(
˝
, 
tx_queued
, cp->
dev
, "tx queued, slots %d-%d, skblen %d\n",

867 
fú°_íåy
, 
íåy
, 
skb
->
Àn
);

869 
˝
->
tx_hód
 = 
	`NEXT_TX
(
íåy
);

871 
	`√tdev_£¡_queue
(
dev
, 
skb
->
Àn
);

872 i‡(
	`TX_BUFFS_AVAIL
(
˝
Ë<(
MAX_SKB_FRAGS
 + 1))

873 
	`√tif_°›_queue
(
dev
);

875 
out_u∆ock
:

876 
	`•ö_u∆ock_úqª°‹e
(&
˝
->
lock
, 
öå_Êags
);

878 
	`˝w8
(
TxPﬁl
, 
N‹mÆTxPﬁl
);

880  
NETDEV_TX_OK
;

881 
out_dma_îr‹
:

882 
	`dev_k‰ì_skb_™y
(
skb
);

883 
˝
->
dev
->
°©s
.
tx_dr›≥d
++;

884 
out_u∆ock
;

885 
	}
}

890 
	$__˝_£t_rx_mode
 (
√t_devi˚
 *
dev
)

892 
˝_¥iv©e
 *
˝
 = 
	`√tdev_¥iv
(
dev
);

893 
u32
 
mc_fûãr
[2];

894 
rx_mode
;

897 i‡(
dev
->
Êags
 & 
IFF_PROMISC
) {

899 
rx_mode
 =

900 
Ac˚±Brﬂdˇ°
 | 
Ac˚±Mu…iˇ°
 | 
Ac˚±MyPhys
 |

901 
Ac˚±AŒPhys
;

902 
mc_fûãr
[1] = mc_filter[0] = 0xffffffff;

903 } i‡((
	`√tdev_mc_cou¡
(
dev
Ë> 
mu…iˇ°_fûãr_limô
) ||

904 (
dev
->
Êags
 & 
IFF_ALLMULTI
)) {

906 
rx_mode
 = 
Ac˚±Brﬂdˇ°
 | 
Ac˚±Mu…iˇ°
 | 
Ac˚±MyPhys
;

907 
mc_fûãr
[1] = mc_filter[0] = 0xffffffff;

909 
√tdev_hw_addr
 *
ha
;

910 
rx_mode
 = 
Ac˚±Brﬂdˇ°
 | 
Ac˚±MyPhys
;

911 
mc_fûãr
[1] = mc_filter[0] = 0;

912 
	`√tdev_f‹_óch_mc_addr
(
ha
, 
dev
) {

913 
bô_ƒ
 = 
	`ëhî_¸c
(
ETH_ALEN
, 
ha
->
addr
) >> 26;

915 
mc_fûãr
[
bô_ƒ
 >> 5] |= 1 << (bit_nr & 31);

916 
rx_mode
 |
Ac˚±Mu…iˇ°
;

921 
˝
->
rx_c⁄fig
 = 
˝_rx_c⁄fig
 | 
rx_mode
;

922 
	`˝w32_f
(
RxC⁄fig
, 
˝
->
rx_c⁄fig
);

924 
	`˝w32_f
 (
MAR0
 + 0, 
mc_fûãr
[0]);

925 
	`˝w32_f
 (
MAR0
 + 4, 
mc_fûãr
[1]);

926 
	}
}

928 
	$˝_£t_rx_mode
 (
√t_devi˚
 *
dev
)

930 
Êags
;

931 
˝_¥iv©e
 *
˝
 = 
	`√tdev_¥iv
(
dev
);

933 
	`•ö_lock_úqßve
 (&
˝
->
lock
, 
Êags
);

934 
	`__˝_£t_rx_mode
(
dev
);

935 
	`•ö_u∆ock_úqª°‹e
 (&
˝
->
lock
, 
Êags
);

936 
	}
}

938 
	$__˝_gë_°©s
(
˝_¥iv©e
 *
˝
)

941 
˝
->
dev
->
°©s
.
rx_mis£d_îr‹s
 +(
	`˝r32
 (
RxMis£d
) & 0xffffff);

942 
	`˝w32
 (
RxMis£d
, 0);

943 
	}
}

945 
√t_devi˚_°©s
 *
	$˝_gë_°©s
(
√t_devi˚
 *
dev
)

947 
˝_¥iv©e
 *
˝
 = 
	`√tdev_¥iv
(
dev
);

948 
Êags
;

951 
	`•ö_lock_úqßve
(&
˝
->
lock
, 
Êags
);

952 i‡(
	`√tif_ru¬ög
(
dev
Ë&& 
	`√tif_devi˚_¥e£¡
(dev))

953 
	`__˝_gë_°©s
(
˝
);

954 
	`•ö_u∆ock_úqª°‹e
(&
˝
->
lock
, 
Êags
);

956  &
dev
->
°©s
;

957 
	}
}

959 
	$˝_°›_hw
 (
˝_¥iv©e
 *
˝
)

961 
	`˝w16
(
I¡rSètus
, ~(
	`˝r16
(IntrStatus)));

962 
	`˝w16_f
(
I¡rMask
, 0);

963 
	`˝w8
(
Cmd
, 0);

964 
	`˝w16_f
(
CpCmd
, 0);

965 
	`˝w16_f
(
I¡rSètus
, ~(
	`˝r16
(IntrStatus)));

967 
˝
->
rx_èû
 = 0;

968 
˝
->
tx_hód
 = cp->
tx_èû
 = 0;

970 
	`√tdev_ª£t_queue
(
˝
->
dev
);

971 
	}
}

973 
	$˝_ª£t_hw
 (
˝_¥iv©e
 *
˝
)

975 
w‹k
 = 1000;

977 
	`˝w8
(
Cmd
, 
CmdRe£t
);

979 
w‹k
--) {

980 i‡(!(
	`˝r8
(
Cmd
Ë& 
CmdRe£t
))

983 
	`scheduÀ_timeout_unöãºu±ibÀ
(10);

986 
	`√tdev_îr
(
˝
->
dev
, "hardwareÑesetÅimeout\n");

987 
	}
}

989 
ölöe
 
	$˝_°¨t_hw
 (
˝_¥iv©e
 *
˝
)

991 
dma_addr_t
 
rög_dma
;

993 
	`˝w16
(
CpCmd
, 
˝
->
˝cmd
);

1003 
	`˝w32_f
(
HiTxRögAddr
, 0);

1004 
	`˝w32_f
(
HiTxRögAddr
 + 4, 0);

1006 
rög_dma
 = 
˝
->ring_dma;

1007 
	`˝w32_f
(
RxRögAddr
, 
rög_dma
 & 0xffffffff);

1008 
	`˝w32_f
(
RxRögAddr
 + 4, (
rög_dma
 >> 16) >> 16);

1010 
rög_dma
 +(
˝_desc
Ë* 
CP_RX_RING_SIZE
;

1011 
	`˝w32_f
(
TxRögAddr
, 
rög_dma
 & 0xffffffff);

1012 
	`˝w32_f
(
TxRögAddr
 + 4, (
rög_dma
 >> 16) >> 16);

1020 
	`˝w8
(
Cmd
, 
RxOn
 | 
TxOn
);

1022 
	`√tdev_ª£t_queue
(
˝
->
dev
);

1023 
	}
}

1025 
	$˝_íabÀ_úq
(
˝_¥iv©e
 *
˝
)

1027 
	`˝w16_f
(
I¡rMask
, 
˝_öå_mask
);

1028 
	}
}

1030 
	$˝_öô_hw
 (
˝_¥iv©e
 *
˝
)

1032 
√t_devi˚
 *
dev
 = 
˝
->dev;

1034 
	`˝_ª£t_hw
(
˝
);

1036 
	`˝w8_f
 (
Cfg9346
, 
Cfg9346_U∆ock
);

1039 
	`˝w32_f
 (
MAC0
 + 0, 
	`À32_to_˝u
 (*(
__À32
 *Ë(
dev
->
dev_addr
 + 0)));

1040 
	`˝w32_f
 (
MAC0
 + 4, 
	`À32_to_˝u
 (*(
__À32
 *Ë(
dev
->
dev_addr
 + 4)));

1042 
	`˝_°¨t_hw
(
˝
);

1043 
	`˝w8
(
TxThªsh
, 0x06);

1045 
	`__˝_£t_rx_mode
(
dev
);

1046 
	`˝w32_f
 (
TxC⁄fig
, 
IFG
 | (
TX_DMA_BURST
 << 
TxDMAShi·
));

1048 
	`˝w8
(
C⁄fig1
, 
	`˝r8
(C⁄fig1Ë| 
DrivîLﬂded
 | 
PME«bÀ
);

1050 
	`˝w8
(
C⁄fig3
, 
PARME«bÀ
);

1051 
˝
->
wﬁ_íabÀd
 = 0;

1053 
	`˝w8
(
C⁄fig5
, 
	`˝r8
(C⁄fig5Ë& 
PMESètus
);

1055 
	`˝w16
(
Mu…iI¡r
, 0);

1057 
	`˝w8_f
(
Cfg9346
, 
Cfg9346_Lock
);

1058 
	}
}

1060 
	$˝_ªfûl_rx
(
˝_¥iv©e
 *
˝
)

1062 
√t_devi˚
 *
dev
 = 
˝
->dev;

1063 
i
;

1065 
i
 = 0; i < 
CP_RX_RING_SIZE
; i++) {

1066 
sk_buff
 *
skb
;

1067 
dma_addr_t
 
m≠pög
;

1069 
skb
 = 
	`√tdev_Æloc_skb_ù_Æign
(
dev
, 
˝
->
rx_buf_sz
);

1070 i‡(!
skb
)

1071 
îr_out
;

1073 
m≠pög
 = 
	`dma_m≠_sögÀ
(&
˝
->
pdev
->
dev
, 
skb
->
d©a
,

1074 
˝
->
rx_buf_sz
, 
PCI_DMA_FROMDEVICE
);

1075 i‡(
	`dma_m≠pög_îr‹
(&
˝
->
pdev
->
dev
, 
m≠pög
)) {

1076 
	`k‰ì_skb
(
skb
);

1077 
îr_out
;

1079 
˝
->
rx_skb
[
i
] = 
skb
;

1081 
˝
->
rx_rög
[
i
].
›ts2
 = 0;

1082 
˝
->
rx_rög
[
i
].
addr
 = 
	`˝u_to_À64
(
m≠pög
);

1083 i‡(
i
 =(
CP_RX_RING_SIZE
 - 1))

1084 
˝
->
rx_rög
[
i
].
›ts1
 =

1085 
	`˝u_to_À32
(
DescOwn
 | 
RögEnd
 | 
˝
->
rx_buf_sz
);

1087 
˝
->
rx_rög
[
i
].
›ts1
 =

1088 
	`˝u_to_À32
(
DescOwn
 | 
˝
->
rx_buf_sz
);

1093 
îr_out
:

1094 
	`˝_˛ón_rögs
(
˝
);

1095  -
ENOMEM
;

1096 
	}
}

1098 
	$˝_öô_rögs_ödex
 (
˝_¥iv©e
 *
˝
)

1100 
˝
->
rx_èû
 = 0;

1101 
˝
->
tx_hód
 = cp->
tx_èû
 = 0;

1102 
	}
}

1104 
	$˝_öô_rögs
 (
˝_¥iv©e
 *
˝
)

1106 
	`mem£t
(
˝
->
tx_rög
, 0, (
˝_desc
Ë* 
CP_TX_RING_SIZE
);

1107 
˝
->
tx_rög
[
CP_TX_RING_SIZE
 - 1].
›ts1
 = 
	`˝u_to_À32
(
RögEnd
);

1108 
	`mem£t
(
˝
->
tx_›ts
, 0, (cp->tx_opts));

1110 
	`˝_öô_rögs_ödex
(
˝
);

1112  
	`˝_ªfûl_rx
 (
˝
);

1113 
	}
}

1115 
	$˝_Æloc_rögs
 (
˝_¥iv©e
 *
˝
)

1117 
devi˚
 *
d
 = &
˝
->
pdev
->
dev
;

1118 *
mem
;

1119 
rc
;

1121 
mem
 = 
	`dma_Æloc_cohîít
(
d
, 
CP_RING_BYTES
, &
˝
->
rög_dma
, 
GFP_KERNEL
);

1122 i‡(!
mem
)

1123  -
ENOMEM
;

1125 
˝
->
rx_rög
 = 
mem
;

1126 
˝
->
tx_rög
 = &˝->
rx_rög
[
CP_RX_RING_SIZE
];

1128 
rc
 = 
	`˝_öô_rögs
(
˝
);

1129 i‡(
rc
 < 0)

1130 
	`dma_‰ì_cohîít
(
d
, 
CP_RING_BYTES
, 
˝
->
rx_rög
, cp->
rög_dma
);

1132  
rc
;

1133 
	}
}

1135 
	$˝_˛ón_rögs
 (
˝_¥iv©e
 *
˝
)

1137 
˝_desc
 *
desc
;

1138 
i
;

1140 
i
 = 0; i < 
CP_RX_RING_SIZE
; i++) {

1141 i‡(
˝
->
rx_skb
[
i
]) {

1142 
desc
 = 
˝
->
rx_rög
 + 
i
;

1143 
	`dma_unm≠_sögÀ
(&
˝
->
pdev
->
dev
,
	`À64_to_˝u
(
desc
->
addr
),

1144 
˝
->
rx_buf_sz
, 
PCI_DMA_FROMDEVICE
);

1145 
	`dev_k‰ì_skb_™y
(
˝
->
rx_skb
[
i
]);

1149 
i
 = 0; i < 
CP_TX_RING_SIZE
; i++) {

1150 i‡(
˝
->
tx_skb
[
i
]) {

1151 
sk_buff
 *
skb
 = 
˝
->
tx_skb
[
i
];

1153 
desc
 = 
˝
->
tx_rög
 + 
i
;

1154 
	`dma_unm≠_sögÀ
(&
˝
->
pdev
->
dev
,
	`À64_to_˝u
(
desc
->
addr
),

1155 
	`À32_to_˝u
(
desc
->
›ts1
) & 0xffff,

1156 
PCI_DMA_TODEVICE
);

1157 i‡(
	`À32_to_˝u
(
desc
->
›ts1
Ë& 
La°Føg
)

1158 
	`dev_k‰ì_skb_™y
(
skb
);

1159 
˝
->
dev
->
°©s
.
tx_dr›≥d
++;

1162 
	`√tdev_ª£t_queue
(
˝
->
dev
);

1164 
	`mem£t
(
˝
->
rx_rög
, 0, (
˝_desc
Ë* 
CP_RX_RING_SIZE
);

1165 
	`mem£t
(
˝
->
tx_rög
, 0, (
˝_desc
Ë* 
CP_TX_RING_SIZE
);

1166 
	`mem£t
(
˝
->
tx_›ts
, 0, (cp->tx_opts));

1168 
	`mem£t
(
˝
->
rx_skb
, 0, (
sk_buff
 *Ë* 
CP_RX_RING_SIZE
);

1169 
	`mem£t
(
˝
->
tx_skb
, 0, (
sk_buff
 *Ë* 
CP_TX_RING_SIZE
);

1170 
	}
}

1172 
	$˝_‰ì_rögs
 (
˝_¥iv©e
 *
˝
)

1174 
	`˝_˛ón_rögs
(
˝
);

1175 
	`dma_‰ì_cohîít
(&
˝
->
pdev
->
dev
, 
CP_RING_BYTES
, cp->
rx_rög
,

1176 
˝
->
rög_dma
);

1177 
˝
->
rx_rög
 = 
NULL
;

1178 
˝
->
tx_rög
 = 
NULL
;

1179 
	}
}

1181 
	$˝_›í
 (
√t_devi˚
 *
dev
)

1183 
˝_¥iv©e
 *
˝
 = 
	`√tdev_¥iv
(
dev
);

1184 c⁄° 
úq
 = 
˝
->
pdev
->irq;

1185 
rc
;

1187 
	`√tif_dbg
(
˝
, 
ifup
, 
dev
, "enabling interface\n");

1189 
rc
 = 
	`˝_Æloc_rögs
(
˝
);

1190 i‡(
rc
)

1191  
rc
;

1193 
	`«pi_íabÀ
(&
˝
->
«pi
);

1195 
	`˝_öô_hw
(
˝
);

1197 
rc
 = 
	`ªque°_úq
(
úq
, 
˝_öãºu±
, 
IRQF_SHARED
, 
dev
->
«me
, dev);

1198 i‡(
rc
)

1199 
îr_out_hw
;

1201 
	`˝_íabÀ_úq
(
˝
);

1203 
	`√tif_ˇºõr_off
(
dev
);

1204 
	`mii_check_medü
(&
˝
->
mii_if
, 
	`√tif_msg_lök
(˝), 
åue
);

1205 
	`√tif_°¨t_queue
(
dev
);

1209 
îr_out_hw
:

1210 
	`«pi_dißbÀ
(&
˝
->
«pi
);

1211 
	`˝_°›_hw
(
˝
);

1212 
	`˝_‰ì_rögs
(
˝
);

1213  
rc
;

1214 
	}
}

1216 
	$˝_˛o£
 (
√t_devi˚
 *
dev
)

1218 
˝_¥iv©e
 *
˝
 = 
	`√tdev_¥iv
(
dev
);

1219 
Êags
;

1221 
	`«pi_dißbÀ
(&
˝
->
«pi
);

1223 
	`√tif_dbg
(
˝
, 
ifdown
, 
dev
, "disabling interface\n");

1225 
	`•ö_lock_úqßve
(&
˝
->
lock
, 
Êags
);

1227 
	`√tif_°›_queue
(
dev
);

1228 
	`√tif_ˇºõr_off
(
dev
);

1230 
	`˝_°›_hw
(
˝
);

1232 
	`•ö_u∆ock_úqª°‹e
(&
˝
->
lock
, 
Êags
);

1234 
	`‰ì_úq
(
˝
->
pdev
->
úq
, 
dev
);

1236 
	`˝_‰ì_rögs
(
˝
);

1238 
	}
}

1240 
	$˝_tx_timeout
(
√t_devi˚
 *
dev
)

1242 
˝_¥iv©e
 *
˝
 = 
	`√tdev_¥iv
(
dev
);

1243 
Êags
;

1244 
rc
, 
i
;

1246 
	`√tdev_w¨n
(
dev
, "TransmitÅimeout, status %2x %4x %4x %4x\n",

1247 
	`˝r8
(
Cmd
), 
	`˝r16
(
CpCmd
),

1248 
	`˝r16
(
I¡rSètus
), c¥16(
I¡rMask
));

1250 
	`•ö_lock_úqßve
(&
˝
->
lock
, 
Êags
);

1252 
	`√tif_dbg
(
˝
, 
tx_îr
, cp->
dev
, "TXÑing head %dÅail %d desc %x\n",

1253 
˝
->
tx_hód
, cp->
tx_èû
, 
	`˝r16
(
TxDmaOkLowDesc
));

1254 
i
 = 0; i < 
CP_TX_RING_SIZE
; i++) {

1255 
	`√tif_dbg
(
˝
, 
tx_îr
, cp->
dev
,

1257 
i
, &
˝
->
tx_rög
[i], 
	`À32_to_˝u
(˝->tx_rög[i].
›ts1
),

1258 
˝
->
tx_›ts
[
i
], 
	`À32_to_˝u
(˝->
tx_rög
[i].
›ts2
),

1259 
	`À64_to_˝u
(
˝
->
tx_rög
[
i
].
addr
),

1260 
˝
->
tx_skb
[
i
]);

1263 
	`˝_°›_hw
(
˝
);

1264 
	`˝_˛ón_rögs
(
˝
);

1265 
rc
 = 
	`˝_öô_rögs
(
˝
);

1266 
	`˝_°¨t_hw
(
˝
);

1267 
	`__˝_£t_rx_mode
(
dev
);

1268 
	`˝w16_f
(
I¡rMask
, 
˝_n‹x_öå_mask
);

1270 
	`√tif_wake_queue
(
dev
);

1271 
	`«pi_scheduÀ_úqoff
(&
˝
->
«pi
);

1273 
	`•ö_u∆ock_úqª°‹e
(&
˝
->
lock
, 
Êags
);

1274 
	}
}

1276 
	$˝_ch™ge_mtu
(
√t_devi˚
 *
dev
, 
√w_mtu
)

1278 
˝_¥iv©e
 *
˝
 = 
	`√tdev_¥iv
(
dev
);

1281 i‡(
√w_mtu
 < 
CP_MIN_MTU
 ||Çew_mtu > 
CP_MAX_MTU
)

1282  -
EINVAL
;

1285 i‡(!
	`√tif_ru¬ög
(
dev
)) {

1286 
dev
->
mtu
 = 
√w_mtu
;

1287 
	`˝_£t_rxbufsize
(
˝
);

1292 
	`˝_˛o£
(
dev
);

1293 
dev
->
mtu
 = 
√w_mtu
;

1294 
	`˝_£t_rxbufsize
(
˝
);

1295  
	`˝_›í
(
dev
);

1296 
	}
}

1298 c⁄° 
	gmii_2_8139_m≠
[8] = {

1299 
BasicModeCål
,

1300 
BasicModeSètus
,

1303 
NWayAdvît
,

1304 
NWayLPAR
,

1305 
NWayEx∑nsi⁄
,

1309 
	$mdio_ªad
(
√t_devi˚
 *
dev
, 
phy_id
, 
loˇti⁄
)

1311 
˝_¥iv©e
 *
˝
 = 
	`√tdev_¥iv
(
dev
);

1313  
loˇti⁄
 < 8 && 
mii_2_8139_m≠
[location] ?

1314 
	`ªadw
(
˝
->
ªgs
 + 
mii_2_8139_m≠
[
loˇti⁄
]) : 0;

1315 
	}
}

1318 
	$mdio_wrôe
(
√t_devi˚
 *
dev
, 
phy_id
, 
loˇti⁄
,

1319 
vÆue
)

1321 
˝_¥iv©e
 *
˝
 = 
	`√tdev_¥iv
(
dev
);

1323 i‡(
loˇti⁄
 == 0) {

1324 
	`˝w8
(
Cfg9346
, 
Cfg9346_U∆ock
);

1325 
	`˝w16
(
BasicModeCål
, 
vÆue
);

1326 
	`˝w8
(
Cfg9346
, 
Cfg9346_Lock
);

1327 } i‡(
loˇti⁄
 < 8 && 
mii_2_8139_m≠
[location])

1328 
	`˝w16
(
mii_2_8139_m≠
[
loˇti⁄
], 
vÆue
);

1329 
	}
}

1332 
	$√tdev_£t_wﬁ
 (
˝_¥iv©e
 *
˝
,

1333 c⁄° 
ëhtoﬁ_wﬁöfo
 *
wﬁ
)

1335 
u8
 
›ti⁄s
;

1337 
›ti⁄s
 = 
	`˝r8
 (
C⁄fig3
Ë& ~(
LökUp
 | 
MagicPackë
);

1339 i‡(
wﬁ
->
wﬁ›ts
) {

1340 i‡(
wﬁ
->
wﬁ›ts
 & 
WAKE_PHY
Ë
›ti⁄s
 |
LökUp
;

1341 i‡(
wﬁ
->
wﬁ›ts
 & 
WAKE_MAGIC
Ë
›ti⁄s
 |
MagicPackë
;

1344 
	`˝w8
 (
Cfg9346
, 
Cfg9346_U∆ock
);

1345 
	`˝w8
 (
C⁄fig3
, 
›ti⁄s
);

1346 
	`˝w8
 (
Cfg9346
, 
Cfg9346_Lock
);

1348 
›ti⁄s
 = 0;

1349 
›ti⁄s
 = 
	`˝r8
 (
C⁄fig5
Ë& ~(
UWF
 | 
MWF
 | 
BWF
);

1351 i‡(
wﬁ
->
wﬁ›ts
) {

1352 i‡(
wﬁ
->
wﬁ›ts
 & 
WAKE_UCAST
Ë
›ti⁄s
 |
UWF
;

1353 i‡(
wﬁ
->
wﬁ›ts
 & 
WAKE_BCAST
Ë
›ti⁄s
 |
BWF
;

1354 i‡(
wﬁ
->
wﬁ›ts
 & 
WAKE_MCAST
Ë
›ti⁄s
 |
MWF
;

1357 
	`˝w8
 (
C⁄fig5
, 
›ti⁄s
);

1359 
˝
->
wﬁ_íabÀd
 = (
wﬁ
->
wﬁ›ts
) ? 1 : 0;

1362 
	}
}

1365 
	$√tdev_gë_wﬁ
 (
˝_¥iv©e
 *
˝
,

1366 
ëhtoﬁ_wﬁöfo
 *
wﬁ
)

1368 
u8
 
›ti⁄s
;

1370 
wﬁ
->
wﬁ›ts
 = 0;

1371 
wﬁ
->
suµ‹ãd
 = 
WAKE_PHY
 | 
WAKE_BCAST
 | 
WAKE_MAGIC
 |

1372 
WAKE_MCAST
 | 
WAKE_UCAST
;

1374 i‡(!
˝
->
wﬁ_íabÀd
) ;

1376 
›ti⁄s
 = 
	`˝r8
 (
C⁄fig3
);

1377 i‡(
›ti⁄s
 & 
LökUp
Ë
wﬁ
->
wﬁ›ts
 |
WAKE_PHY
;

1378 i‡(
›ti⁄s
 & 
MagicPackë
Ë
wﬁ
->
wﬁ›ts
 |
WAKE_MAGIC
;

1380 
›ti⁄s
 = 0;

1381 
›ti⁄s
 = 
	`˝r8
 (
C⁄fig5
);

1382 i‡(
›ti⁄s
 & 
UWF
Ë
wﬁ
->
wﬁ›ts
 |
WAKE_UCAST
;

1383 i‡(
›ti⁄s
 & 
BWF
Ë
wﬁ
->
wﬁ›ts
 |
WAKE_BCAST
;

1384 i‡(
›ti⁄s
 & 
MWF
Ë
wﬁ
->
wﬁ›ts
 |
WAKE_MCAST
;

1385 
	}
}

1387 
	$˝_gë_drvöfo
 (
√t_devi˚
 *
dev
, 
ëhtoﬁ_drvöfo
 *
öfo
)

1389 
˝_¥iv©e
 *
˝
 = 
	`√tdev_¥iv
(
dev
);

1391 
	`°æ˝y
(
öfo
->
drivî
, 
DRV_NAME
, (info->driver));

1392 
	`°æ˝y
(
öfo
->
vîsi⁄
, 
DRV_VERSION
, (info->version));

1393 
	`°æ˝y
(
öfo
->
bus_öfo
, 
	`pci_«me
(
˝
->
pdev
), (info->bus_info));

1394 
	}
}

1396 
	$˝_gë_rög∑øm
(
√t_devi˚
 *
dev
,

1397 
ëhtoﬁ_rög∑øm
 *
rög
)

1399 
rög
->
rx_max_≥ndög
 = 
CP_RX_RING_SIZE
;

1400 
rög
->
tx_max_≥ndög
 = 
CP_TX_RING_SIZE
;

1401 
rög
->
rx_≥ndög
 = 
CP_RX_RING_SIZE
;

1402 
rög
->
tx_≥ndög
 = 
CP_TX_RING_SIZE
;

1403 
	}
}

1405 
	$˝_gë_ªgs_Àn
(
√t_devi˚
 *
dev
)

1407  
CP_REGS_SIZE
;

1408 
	}
}

1410 
	$˝_gë_s£t_cou¡
 (
√t_devi˚
 *
dev
, 
s£t
)

1412 
s£t
) {

1413 
ETH_SS_STATS
:

1414  
CP_NUM_STATS
;

1416  -
EOPNOTSUPP
;

1418 
	}
}

1420 
	$˝_gë_£âögs
(
√t_devi˚
 *
dev
, 
ëhtoﬁ_cmd
 *
cmd
)

1422 
˝_¥iv©e
 *
˝
 = 
	`√tdev_¥iv
(
dev
);

1423 
rc
;

1424 
Êags
;

1426 
	`•ö_lock_úqßve
(&
˝
->
lock
, 
Êags
);

1427 
rc
 = 
	`mii_ëhtoﬁ_g£t
(&
˝
->
mii_if
, 
cmd
);

1428 
	`•ö_u∆ock_úqª°‹e
(&
˝
->
lock
, 
Êags
);

1430  
rc
;

1431 
	}
}

1433 
	$˝_£t_£âögs
(
√t_devi˚
 *
dev
, 
ëhtoﬁ_cmd
 *
cmd
)

1435 
˝_¥iv©e
 *
˝
 = 
	`√tdev_¥iv
(
dev
);

1436 
rc
;

1437 
Êags
;

1439 
	`•ö_lock_úqßve
(&
˝
->
lock
, 
Êags
);

1440 
rc
 = 
	`mii_ëhtoﬁ_s£t
(&
˝
->
mii_if
, 
cmd
);

1441 
	`•ö_u∆ock_úqª°‹e
(&
˝
->
lock
, 
Êags
);

1443  
rc
;

1444 
	}
}

1446 
	$˝_nway_ª£t
(
√t_devi˚
 *
dev
)

1448 
˝_¥iv©e
 *
˝
 = 
	`√tdev_¥iv
(
dev
);

1449  
	`mii_nway_ª°¨t
(&
˝
->
mii_if
);

1450 
	}
}

1452 
u32
 
	$˝_gë_msgÀvñ
(
√t_devi˚
 *
dev
)

1454 
˝_¥iv©e
 *
˝
 = 
	`√tdev_¥iv
(
dev
);

1455  
˝
->
msg_íabÀ
;

1456 
	}
}

1458 
	$˝_£t_msgÀvñ
(
√t_devi˚
 *
dev
, 
u32
 
vÆue
)

1460 
˝_¥iv©e
 *
˝
 = 
	`√tdev_¥iv
(
dev
);

1461 
˝
->
msg_íabÀ
 = 
vÆue
;

1462 
	}
}

1464 
	$˝_£t_„©uªs
(
√t_devi˚
 *
dev
, 
√tdev_„©uªs_t
 
„©uªs
)

1466 
˝_¥iv©e
 *
˝
 = 
	`√tdev_¥iv
(
dev
);

1467 
Êags
;

1469 i‡(!((
dev
->
„©uªs
 ^ fótuªsË& 
NETIF_F_RXCSUM
))

1472 
	`•ö_lock_úqßve
(&
˝
->
lock
, 
Êags
);

1474 i‡(
„©uªs
 & 
NETIF_F_RXCSUM
)

1475 
˝
->
˝cmd
 |
RxChkSum
;

1477 
˝
->
˝cmd
 &~
RxChkSum
;

1479 i‡(
„©uªs
 & 
NETIF_F_HW_VLAN_CTAG_RX
)

1480 
˝
->
˝cmd
 |
RxVœnOn
;

1482 
˝
->
˝cmd
 &~
RxVœnOn
;

1484 
	`˝w16_f
(
CpCmd
, 
˝
->
˝cmd
);

1485 
	`•ö_u∆ock_úqª°‹e
(&
˝
->
lock
, 
Êags
);

1488 
	}
}

1490 
	$˝_gë_ªgs
(
√t_devi˚
 *
dev
, 
ëhtoﬁ_ªgs
 *
ªgs
,

1491 *
p
)

1493 
˝_¥iv©e
 *
˝
 = 
	`√tdev_¥iv
(
dev
);

1494 
Êags
;

1496 i‡(
ªgs
->
Àn
 < 
CP_REGS_SIZE
)

1499 
ªgs
->
vîsi⁄
 = 
CP_REGS_VER
;

1501 
	`•ö_lock_úqßve
(&
˝
->
lock
, 
Êags
);

1502 
	`mem˝y_‰omio
(
p
, 
˝
->
ªgs
, 
CP_REGS_SIZE
);

1503 
	`•ö_u∆ock_úqª°‹e
(&
˝
->
lock
, 
Êags
);

1504 
	}
}

1506 
	$˝_gë_wﬁ
 (
√t_devi˚
 *
dev
, 
ëhtoﬁ_wﬁöfo
 *
wﬁ
)

1508 
˝_¥iv©e
 *
˝
 = 
	`√tdev_¥iv
(
dev
);

1509 
Êags
;

1511 
	`•ö_lock_úqßve
 (&
˝
->
lock
, 
Êags
);

1512 
	`√tdev_gë_wﬁ
 (
˝
, 
wﬁ
);

1513 
	`•ö_u∆ock_úqª°‹e
 (&
˝
->
lock
, 
Êags
);

1514 
	}
}

1516 
	$˝_£t_wﬁ
 (
√t_devi˚
 *
dev
, 
ëhtoﬁ_wﬁöfo
 *
wﬁ
)

1518 
˝_¥iv©e
 *
˝
 = 
	`√tdev_¥iv
(
dev
);

1519 
Êags
;

1520 
rc
;

1522 
	`•ö_lock_úqßve
 (&
˝
->
lock
, 
Êags
);

1523 
rc
 = 
	`√tdev_£t_wﬁ
 (
˝
, 
wﬁ
);

1524 
	`•ö_u∆ock_úqª°‹e
 (&
˝
->
lock
, 
Êags
);

1526  
rc
;

1527 
	}
}

1529 
	$˝_gë_°rögs
 (
√t_devi˚
 *
dev
, 
u32
 
°rög£t
, 
u8
 *
buf
)

1531 
°rög£t
) {

1532 
ETH_SS_STATS
:

1533 
	`mem˝y
(
buf
, &
ëhtoﬁ_°©s_keys
, (ethtool_stats_keys));

1536 
	`BUG
();

1539 
	}
}

1541 
	$˝_gë_ëhtoﬁ_°©s
 (
√t_devi˚
 *
dev
,

1542 
ëhtoﬁ_°©s
 *
e°©s
, 
u64
 *
tmp_°©s
)

1544 
˝_¥iv©e
 *
˝
 = 
	`√tdev_¥iv
(
dev
);

1545 
˝_dma_°©s
 *
nic_°©s
;

1546 
dma_addr_t
 
dma
;

1547 
i
;

1549 
nic_°©s
 = 
	`dma_Æloc_cohîít
(&
˝
->
pdev
->
dev
, (*nic_stats),

1550 &
dma
, 
GFP_KERNEL
);

1551 i‡(!
nic_°©s
)

1555 
	`˝w32
(
SètsAddr
 + 4, (
u64
)
dma
 >> 32);

1556 
	`˝w32
(
SètsAddr
, ((
u64
)
dma
 & 
	`DMA_BIT_MASK
(32)Ë| 
DumpSèts
);

1557 
	`˝r32
(
SètsAddr
);

1559 
i
 = 0; i < 1000; i++) {

1560 i‡((
	`˝r32
(
SètsAddr
Ë& 
DumpSèts
) == 0)

1562 
	`udñay
(10);

1564 
	`˝w32
(
SètsAddr
, 0);

1565 
	`˝w32
(
SètsAddr
 + 4, 0);

1566 
	`˝r32
(
SètsAddr
);

1568 
i
 = 0;

1569 
tmp_°©s
[
i
++] = 
	`À64_to_˝u
(
nic_°©s
->
tx_ok
);

1570 
tmp_°©s
[
i
++] = 
	`À64_to_˝u
(
nic_°©s
->
rx_ok
);

1571 
tmp_°©s
[
i
++] = 
	`À64_to_˝u
(
nic_°©s
->
tx_îr
);

1572 
tmp_°©s
[
i
++] = 
	`À32_to_˝u
(
nic_°©s
->
rx_îr
);

1573 
tmp_°©s
[
i
++] = 
	`À16_to_˝u
(
nic_°©s
->
rx_fifo
);

1574 
tmp_°©s
[
i
++] = 
	`À16_to_˝u
(
nic_°©s
->
‰ame_Æign
);

1575 
tmp_°©s
[
i
++] = 
	`À32_to_˝u
(
nic_°©s
->
tx_ok_1cﬁ
);

1576 
tmp_°©s
[
i
++] = 
	`À32_to_˝u
(
nic_°©s
->
tx_ok_mcﬁ
);

1577 
tmp_°©s
[
i
++] = 
	`À64_to_˝u
(
nic_°©s
->
rx_ok_phys
);

1578 
tmp_°©s
[
i
++] = 
	`À64_to_˝u
(
nic_°©s
->
rx_ok_bˇ°
);

1579 
tmp_°©s
[
i
++] = 
	`À32_to_˝u
(
nic_°©s
->
rx_ok_mˇ°
);

1580 
tmp_°©s
[
i
++] = 
	`À16_to_˝u
(
nic_°©s
->
tx_ab‹t
);

1581 
tmp_°©s
[
i
++] = 
	`À16_to_˝u
(
nic_°©s
->
tx_undîrun
);

1582 
tmp_°©s
[
i
++] = 
˝
->
˝_°©s
.
rx_‰ags
;

1583 
	`BUG_ON
(
i
 !
CP_NUM_STATS
);

1585 
	`dma_‰ì_cohîít
(&
˝
->
pdev
->
dev
, (*
nic_°©s
),Çic_°©s, 
dma
);

1586 
	}
}

1588 c⁄° 
ëhtoﬁ_›s
 
	g˝_ëhtoﬁ_›s
 = {

1589 .
gë_drvöfo
 = 
˝_gë_drvöfo
,

1590 .
	ggë_ªgs_Àn
 = 
˝_gë_ªgs_Àn
,

1591 .
	ggë_s£t_cou¡
 = 
˝_gë_s£t_cou¡
,

1592 .
	ggë_£âögs
 = 
˝_gë_£âögs
,

1593 .
	g£t_£âögs
 = 
˝_£t_£âögs
,

1594 .
	gnway_ª£t
 = 
˝_nway_ª£t
,

1595 .
	ggë_lök
 = 
ëhtoﬁ_›_gë_lök
,

1596 .
	ggë_msgÀvñ
 = 
˝_gë_msgÀvñ
,

1597 .
	g£t_msgÀvñ
 = 
˝_£t_msgÀvñ
,

1598 .
	ggë_ªgs
 = 
˝_gë_ªgs
,

1599 .
	ggë_wﬁ
 = 
˝_gë_wﬁ
,

1600 .
	g£t_wﬁ
 = 
˝_£t_wﬁ
,

1601 .
	ggë_°rögs
 = 
˝_gë_°rögs
,

1602 .
	ggë_ëhtoﬁ_°©s
 = 
˝_gë_ëhtoﬁ_°©s
,

1603 .
	ggë_ì¥om_Àn
 = 
˝_gë_ì¥om_Àn
,

1604 .
	ggë_ì¥om
 = 
˝_gë_ì¥om
,

1605 .
	g£t_ì¥om
 = 
˝_£t_ì¥om
,

1606 .
	ggë_rög∑øm
 = 
˝_gë_rög∑øm
,

1609 
	$˝_io˘l
 (
√t_devi˚
 *
dev
, 
i‰eq
 *
rq
, 
cmd
)

1611 
˝_¥iv©e
 *
˝
 = 
	`√tdev_¥iv
(
dev
);

1612 
rc
;

1613 
Êags
;

1615 i‡(!
	`√tif_ru¬ög
(
dev
))

1616  -
EINVAL
;

1618 
	`•ö_lock_úqßve
(&
˝
->
lock
, 
Êags
);

1619 
rc
 = 
	`gíîic_mii_io˘l
(&
˝
->
mii_if
, 
	`if_mii
(
rq
), 
cmd
, 
NULL
);

1620 
	`•ö_u∆ock_úqª°‹e
(&
˝
->
lock
, 
Êags
);

1621  
rc
;

1622 
	}
}

1624 
	$˝_£t_mac_addªss
(
√t_devi˚
 *
dev
, *
p
)

1626 
˝_¥iv©e
 *
˝
 = 
	`√tdev_¥iv
(
dev
);

1627 
sockaddr
 *
addr
 = 
p
;

1629 i‡(!
	`is_vÆid_ëhî_addr
(
addr
->
ß_d©a
))

1630  -
EADDRNOTAVAIL
;

1632 
	`mem˝y
(
dev
->
dev_addr
, 
addr
->
ß_d©a
, dev->
addr_Àn
);

1634 
	`•ö_lock_úq
(&
˝
->
lock
);

1636 
	`˝w8_f
(
Cfg9346
, 
Cfg9346_U∆ock
);

1637 
	`˝w32_f
(
MAC0
 + 0, 
	`À32_to_˝u
 (*(
__À32
 *Ë(
dev
->
dev_addr
 + 0)));

1638 
	`˝w32_f
(
MAC0
 + 4, 
	`À32_to_˝u
 (*(
__À32
 *Ë(
dev
->
dev_addr
 + 4)));

1639 
	`˝w8_f
(
Cfg9346
, 
Cfg9346_Lock
);

1641 
	`•ö_u∆ock_úq
(&
˝
->
lock
);

1644 
	}
}

1649 
	#EE_SHIFT_CLK
 0x04

	)

1650 
	#EE_CS
 0x08

	)

1651 
	#EE_DATA_WRITE
 0x02

	)

1652 
	#EE_WRITE_0
 0x00

	)

1653 
	#EE_WRITE_1
 0x02

	)

1654 
	#EE_DATA_READ
 0x01

	)

1655 
	#EE_ENB
 (0x80 | 
EE_CS
)

	)

1661 
	#ì¥om_dñay
(Ë
	`ªadb
(
ì_addr
)

	)

1664 
	#EE_EXTEND_CMD
 (4)

	)

1665 
	#EE_WRITE_CMD
 (5)

	)

1666 
	#EE_READ_CMD
 (6)

	)

1667 
	#EE_ERASE_CMD
 (7)

	)

1669 
	#EE_EWDS_ADDR
 (0)

	)

1670 
	#EE_WRAL_ADDR
 (1)

	)

1671 
	#EE_ERAL_ADDR
 (2)

	)

1672 
	#EE_EWEN_ADDR
 (3)

	)

1674 
	#CP_EEPROM_MAGIC
 
PCI_DEVICE_ID_REALTEK_8139


	)

1676 
	$ì¥om_cmd_°¨t
(
__iomem
 *
ì_addr
)

1678 
	`wrôeb
 (
EE_ENB
 & ~
EE_CS
, 
ì_addr
);

1679 
	`wrôeb
 (
EE_ENB
, 
ì_addr
);

1680 
	`ì¥om_dñay
 ();

1681 
	}
}

1683 
	$ì¥om_cmd
(
__iomem
 *
ì_addr
, 
cmd
, 
cmd_Àn
)

1685 
i
;

1688 
i
 = 
cmd_Àn
 - 1; i >= 0; i--) {

1689 
d©avÆ
 = (
cmd
 & (1 << 
i
)Ë? 
EE_DATA_WRITE
 : 0;

1690 
	`wrôeb
 (
EE_ENB
 | 
d©avÆ
, 
ì_addr
);

1691 
	`ì¥om_dñay
 ();

1692 
	`wrôeb
 (
EE_ENB
 | 
d©avÆ
 | 
EE_SHIFT_CLK
, 
ì_addr
);

1693 
	`ì¥om_dñay
 ();

1695 
	`wrôeb
 (
EE_ENB
, 
ì_addr
);

1696 
	`ì¥om_dñay
 ();

1697 
	}
}

1699 
	$ì¥om_cmd_íd
(
__iomem
 *
ì_addr
)

1701 
	`wrôeb
(0, 
ì_addr
);

1702 
	`ì¥om_dñay
 ();

1703 
	}
}

1705 
	$ì¥om_exãnd_cmd
(
__iomem
 *
ì_addr
, 
exãnd_cmd
,

1706 
addr_Àn
)

1708 
cmd
 = (
EE_EXTEND_CMD
 << 
addr_Àn
Ë| (
exãnd_cmd
 << (addr_len - 2));

1710 
	`ì¥om_cmd_°¨t
(
ì_addr
);

1711 
	`ì¥om_cmd
(
ì_addr
, 
cmd
, 3 + 
addr_Àn
);

1712 
	`ì¥om_cmd_íd
(
ì_addr
);

1713 
	}
}

1715 
u16
 
	$ªad_ì¥om
 (
__iomem
 *
iﬂddr
, 
loˇti⁄
, 
addr_Àn
)

1717 
i
;

1718 
u16
 
ªtvÆ
 = 0;

1719 
__iomem
 *
ì_addr
 = 
iﬂddr
 + 
Cfg9346
;

1720 
ªad_cmd
 = 
loˇti⁄
 | (
EE_READ_CMD
 << 
addr_Àn
);

1722 
	`ì¥om_cmd_°¨t
(
ì_addr
);

1723 
	`ì¥om_cmd
(
ì_addr
, 
ªad_cmd
, 3 + 
addr_Àn
);

1725 
i
 = 16; i > 0; i--) {

1726 
	`wrôeb
 (
EE_ENB
 | 
EE_SHIFT_CLK
, 
ì_addr
);

1727 
	`ì¥om_dñay
 ();

1728 
ªtvÆ
 =

1729 (
ªtvÆ
 << 1Ë| ((
	`ªadb
 (
ì_addr
Ë& 
EE_DATA_READ
) ? 1 :

1731 
	`wrôeb
 (
EE_ENB
, 
ì_addr
);

1732 
	`ì¥om_dñay
 ();

1735 
	`ì¥om_cmd_íd
(
ì_addr
);

1737  
ªtvÆ
;

1738 
	}
}

1740 
	$wrôe_ì¥om
(
__iomem
 *
iﬂddr
, 
loˇti⁄
, 
u16
 
vÆ
,

1741 
addr_Àn
)

1743 
i
;

1744 
__iomem
 *
ì_addr
 = 
iﬂddr
 + 
Cfg9346
;

1745 
wrôe_cmd
 = 
loˇti⁄
 | (
EE_WRITE_CMD
 << 
addr_Àn
);

1747 
	`ì¥om_exãnd_cmd
(
ì_addr
, 
EE_EWEN_ADDR
, 
addr_Àn
);

1749 
	`ì¥om_cmd_°¨t
(
ì_addr
);

1750 
	`ì¥om_cmd
(
ì_addr
, 
wrôe_cmd
, 3 + 
addr_Àn
);

1751 
	`ì¥om_cmd
(
ì_addr
, 
vÆ
, 16);

1752 
	`ì¥om_cmd_íd
(
ì_addr
);

1754 
	`ì¥om_cmd_°¨t
(
ì_addr
);

1755 
i
 = 0; i < 20000; i++)

1756 i‡(
	`ªadb
(
ì_addr
Ë& 
EE_DATA_READ
)

1758 
	`ì¥om_cmd_íd
(
ì_addr
);

1760 
	`ì¥om_exãnd_cmd
(
ì_addr
, 
EE_EWDS_ADDR
, 
addr_Àn
);

1761 
	}
}

1763 
	$˝_gë_ì¥om_Àn
(
√t_devi˚
 *
dev
)

1765 
˝_¥iv©e
 *
˝
 = 
	`√tdev_¥iv
(
dev
);

1766 
size
;

1768 
	`•ö_lock_úq
(&
˝
->
lock
);

1769 
size
 = 
	`ªad_ì¥om
(
˝
->
ªgs
, 0, 8) == 0x8129 ? 256 : 128;

1770 
	`•ö_u∆ock_úq
(&
˝
->
lock
);

1772  
size
;

1773 
	}
}

1775 
	$˝_gë_ì¥om
(
√t_devi˚
 *
dev
,

1776 
ëhtoﬁ_ì¥om
 *
ì¥om
, 
u8
 *
d©a
)

1778 
˝_¥iv©e
 *
˝
 = 
	`√tdev_¥iv
(
dev
);

1779 
addr_Àn
;

1780 
u16
 
vÆ
;

1781 
u32
 
off£t
 = 
ì¥om
->offset >> 1;

1782 
u32
 
Àn
 = 
ì¥om
->len;

1783 
u32
 
i
 = 0;

1785 
ì¥om
->
magic
 = 
CP_EEPROM_MAGIC
;

1787 
	`•ö_lock_úq
(&
˝
->
lock
);

1789 
addr_Àn
 = 
	`ªad_ì¥om
(
˝
->
ªgs
, 0, 8) == 0x8129 ? 8 : 6;

1791 i‡(
ì¥om
->
off£t
 & 1) {

1792 
vÆ
 = 
	`ªad_ì¥om
(
˝
->
ªgs
, 
off£t
, 
addr_Àn
);

1793 
d©a
[
i
++] = (
u8
)(
vÆ
 >> 8);

1794 
off£t
++;

1797 
i
 < 
Àn
 - 1) {

1798 
vÆ
 = 
	`ªad_ì¥om
(
˝
->
ªgs
, 
off£t
, 
addr_Àn
);

1799 
d©a
[
i
++] = (
u8
)
vÆ
;

1800 
d©a
[
i
++] = (
u8
)(
vÆ
 >> 8);

1801 
off£t
++;

1804 i‡(
i
 < 
Àn
) {

1805 
vÆ
 = 
	`ªad_ì¥om
(
˝
->
ªgs
, 
off£t
, 
addr_Àn
);

1806 
d©a
[
i
] = (
u8
)
vÆ
;

1809 
	`•ö_u∆ock_úq
(&
˝
->
lock
);

1811 
	}
}

1813 
	$˝_£t_ì¥om
(
√t_devi˚
 *
dev
,

1814 
ëhtoﬁ_ì¥om
 *
ì¥om
, 
u8
 *
d©a
)

1816 
˝_¥iv©e
 *
˝
 = 
	`√tdev_¥iv
(
dev
);

1817 
addr_Àn
;

1818 
u16
 
vÆ
;

1819 
u32
 
off£t
 = 
ì¥om
->offset >> 1;

1820 
u32
 
Àn
 = 
ì¥om
->len;

1821 
u32
 
i
 = 0;

1823 i‡(
ì¥om
->
magic
 !
CP_EEPROM_MAGIC
)

1824  -
EINVAL
;

1826 
	`•ö_lock_úq
(&
˝
->
lock
);

1828 
addr_Àn
 = 
	`ªad_ì¥om
(
˝
->
ªgs
, 0, 8) == 0x8129 ? 8 : 6;

1830 i‡(
ì¥om
->
off£t
 & 1) {

1831 
vÆ
 = 
	`ªad_ì¥om
(
˝
->
ªgs
, 
off£t
, 
addr_Àn
) & 0xff;

1832 
vÆ
 |(
u16
)
d©a
[
i
++] << 8;

1833 
	`wrôe_ì¥om
(
˝
->
ªgs
, 
off£t
, 
vÆ
, 
addr_Àn
);

1834 
off£t
++;

1837 
i
 < 
Àn
 - 1) {

1838 
vÆ
 = (
u16
)
d©a
[
i
++];

1839 
vÆ
 |(
u16
)
d©a
[
i
++] << 8;

1840 
	`wrôe_ì¥om
(
˝
->
ªgs
, 
off£t
, 
vÆ
, 
addr_Àn
);

1841 
off£t
++;

1844 i‡(
i
 < 
Àn
) {

1845 
vÆ
 = 
	`ªad_ì¥om
(
˝
->
ªgs
, 
off£t
, 
addr_Àn
) & 0xff00;

1846 
vÆ
 |(
u16
)
d©a
[
i
];

1847 
	`wrôe_ì¥om
(
˝
->
ªgs
, 
off£t
, 
vÆ
, 
addr_Àn
);

1850 
	`•ö_u∆ock_úq
(&
˝
->
lock
);

1852 
	}
}

1855 
	$˝_£t_d3_°©e
 (
˝_¥iv©e
 *
˝
)

1857 
	`pci_íabÀ_wake
(
˝
->
pdev
, 
PCI_D0
, 1);

1858 
	`pci_£t_powî_°©e
 (
˝
->
pdev
, 
PCI_D3hŸ
);

1859 
	}
}

1861 
√tdev_„©uªs_t
 
	$˝_„©uªs_check
(
sk_buff
 *
skb
,

1862 
√t_devi˚
 *
dev
,

1863 
√tdev_„©uªs_t
 
„©uªs
)

1865 i‡(
	`skb_shöfo
(
skb
)->
gso_size
 > 
MSSMask
)

1866 
„©uªs
 &~
NETIF_F_TSO
;

1868  
	`vœn_„©uªs_check
(
skb
, 
„©uªs
);

1869 
	}
}

1870 c⁄° 
√t_devi˚_›s
 
	g˝_√tdev_›s
 = {

1871 .
ndo_›í
 = 
˝_›í
,

1872 .
	gndo_°›
 = 
˝_˛o£
,

1873 .
	gndo_vÆid©e_addr
 = 
ëh_vÆid©e_addr
,

1874 .
	gndo_£t_mac_addªss
 = 
˝_£t_mac_addªss
,

1875 .
	gndo_£t_rx_mode
 = 
˝_£t_rx_mode
,

1876 .
	gndo_gë_°©s
 = 
˝_gë_°©s
,

1877 .
	gndo_do_io˘l
 = 
˝_io˘l
,

1878 .
	gndo_°¨t_xmô
 = 
˝_°¨t_xmô
,

1879 .
	gndo_tx_timeout
 = 
˝_tx_timeout
,

1880 .
	gndo_£t_„©uªs
 = 
˝_£t_„©uªs
,

1881 .
	gndo_ch™ge_mtu
 = 
˝_ch™ge_mtu
,

1882 .
	gndo_„©uªs_check
 = 
˝_„©uªs_check
,

1884 #ifde‡
CONFIG_NET_POLL_CONTROLLER


1885 .
	gndo_pﬁl_c⁄åﬁÀr
 = 
˝_pﬁl_c⁄åﬁÀr
,

1889 
	$˝_öô_⁄e
 (
pci_dev
 *
pdev
, c⁄° 
pci_devi˚_id
 *
ít
)

1891 
√t_devi˚
 *
dev
;

1892 
˝_¥iv©e
 *
˝
;

1893 
rc
;

1894 
__iomem
 *
ªgs
;

1895 
ªsour˚_size_t
 
pcüddr
;

1896 
addr_Àn
, 
i
, 
pci_usög_dac
;

1898 
	`¥_öfo_⁄˚
("%s", 
vîsi⁄
);

1900 i‡(
pdev
->
víd‹
 =
PCI_VENDOR_ID_REALTEK
 &&

1901 
pdev
->
devi˚
 =
PCI_DEVICE_ID_REALTEK_8139
 &&Ödev->
ªvisi⁄
 < 0x20) {

1902 
	`dev_öfo
(&
pdev
->
dev
,

1904 
pdev
->
víd‹
,Ödev->
devi˚
,Ödev->
ªvisi⁄
);

1905  -
ENODEV
;

1908 
dev
 = 
	`Æloc_ëhîdev
((
˝_¥iv©e
));

1909 i‡(!
dev
)

1910  -
ENOMEM
;

1911 
	`SET_NETDEV_DEV
(
dev
, &
pdev
->dev);

1913 
˝
 = 
	`√tdev_¥iv
(
dev
);

1914 
˝
->
pdev
 =Ödev;

1915 
˝
->
dev
 = dev;

1916 
˝
->
msg_íabÀ
 = (
debug
 < 0 ? 
CP_DEF_MSG_ENABLE
 : debug);

1917 
	`•ö_lock_öô
 (&
˝
->
lock
);

1918 
˝
->
mii_if
.
dev
 = dev;

1919 
˝
->
mii_if
.
mdio_ªad
 = mdio_read;

1920 
˝
->
mii_if
.
mdio_wrôe
 = mdio_write;

1921 
˝
->
mii_if
.
phy_id
 = 
CP_INTERNAL_PHY
;

1922 
˝
->
mii_if
.
phy_id_mask
 = 0x1f;

1923 
˝
->
mii_if
.
ªg_num_mask
 = 0x1f;

1924 
	`˝_£t_rxbufsize
(
˝
);

1926 
rc
 = 
	`pci_íabÀ_devi˚
(
pdev
);

1927 i‡(
rc
)

1928 
îr_out_‰ì
;

1930 
rc
 = 
	`pci_£t_mwi
(
pdev
);

1931 i‡(
rc
)

1932 
îr_out_dißbÀ
;

1934 
rc
 = 
	`pci_ªque°_ªgi⁄s
(
pdev
, 
DRV_NAME
);

1935 i‡(
rc
)

1936 
îr_out_mwi
;

1938 
pcüddr
 = 
	`pci_ªsour˚_°¨t
(
pdev
, 1);

1939 i‡(!
pcüddr
) {

1940 
rc
 = -
EIO
;

1941 
	`dev_îr
(&
pdev
->
dev
, "no MMIOÑesource\n");

1942 
îr_out_ªs
;

1944 i‡(
	`pci_ªsour˚_Àn
(
pdev
, 1Ë< 
CP_REGS_SIZE
) {

1945 
rc
 = -
EIO
;

1946 
	`dev_îr
(&
pdev
->
dev
, "MMIOÑesource (%llx)Åoo small\n",

1947 ()
	`pci_ªsour˚_Àn
(
pdev
, 1));

1948 
îr_out_ªs
;

1952 i‡(((
dma_addr_t
) > 4) &&

1953 !
	`pci_£t_c⁄si°ít_dma_mask
(
pdev
, 
	`DMA_BIT_MASK
(64)) &&

1954 !
	`pci_£t_dma_mask
(
pdev
, 
	`DMA_BIT_MASK
(64))) {

1955 
pci_usög_dac
 = 1;

1957 
pci_usög_dac
 = 0;

1959 
rc
 = 
	`pci_£t_dma_mask
(
pdev
, 
	`DMA_BIT_MASK
(32));

1960 i‡(
rc
) {

1961 
	`dev_îr
(&
pdev
->
dev
,

1963 
îr_out_ªs
;

1965 
rc
 = 
	`pci_£t_c⁄si°ít_dma_mask
(
pdev
, 
	`DMA_BIT_MASK
(32));

1966 i‡(
rc
) {

1967 
	`dev_îr
(&
pdev
->
dev
,

1969 
îr_out_ªs
;

1973 
˝
->
˝cmd
 = (
pci_usög_dac
 ? 
PCIDAC
 : 0) |

1974 
PCIMulRW
 | 
RxChkSum
 | 
CpRxOn
 | 
CpTxOn
;

1976 
dev
->
„©uªs
 |
NETIF_F_RXCSUM
;

1977 
dev
->
hw_„©uªs
 |
NETIF_F_RXCSUM
;

1979 
ªgs
 = 
	`i‹em≠
(
pcüddr
, 
CP_REGS_SIZE
);

1980 i‡(!
ªgs
) {

1981 
rc
 = -
EIO
;

1982 
	`dev_îr
(&
pdev
->
dev
, "Cannot map PCI MMIO (%Lx@%Lx)\n",

1983 ()
	`pci_ªsour˚_Àn
(
pdev
, 1),

1984 ()
pcüddr
);

1985 
îr_out_ªs
;

1987 
˝
->
ªgs
 =Ñegs;

1989 
	`˝_°›_hw
(
˝
);

1992 
addr_Àn
 = 
	`ªad_ì¥om
 (
ªgs
, 0, 8) == 0x8129 ? 8 : 6;

1993 
i
 = 0; i < 3; i++)

1994 ((
__À16
 *Ë(
dev
->
dev_addr
))[
i
] =

1995 
	`˝u_to_À16
(
	`ªad_ì¥om
 (
ªgs
, 
i
 + 7, 
addr_Àn
));

1997 
dev
->
√tdev_›s
 = &
˝_√tdev_›s
;

1998 
	`√tif_«pi_add
(
dev
, &
˝
->
«pi
, 
˝_rx_pﬁl
, 16);

1999 
dev
->
ëhtoﬁ_›s
 = &
˝_ëhtoﬁ_›s
;

2000 
dev
->
w©chdog_timeo
 = 
TX_TIMEOUT
;

2002 
dev
->
„©uªs
 |
NETIF_F_SG
 | 
NETIF_F_IP_CSUM
 | 
NETIF_F_TSO
 |

2003 
NETIF_F_HW_VLAN_CTAG_TX
 | 
NETIF_F_HW_VLAN_CTAG_RX
;

2005 i‡(
pci_usög_dac
)

2006 
dev
->
„©uªs
 |
NETIF_F_HIGHDMA
;

2008 
dev
->
hw_„©uªs
 |
NETIF_F_SG
 | 
NETIF_F_IP_CSUM
 | 
NETIF_F_TSO
 |

2009 
NETIF_F_HW_VLAN_CTAG_TX
 | 
NETIF_F_HW_VLAN_CTAG_RX
;

2010 
dev
->
vœn_„©uªs
 = 
NETIF_F_SG
 | 
NETIF_F_IP_CSUM
 | 
NETIF_F_TSO
 |

2011 
NETIF_F_HIGHDMA
;

2013 
rc
 = 
	`ªgi°î_√tdev
(
dev
);

2014 i‡(
rc
)

2015 
îr_out_iom≠
;

2017 
	`√tdev_öfo
(
dev
, "RTL-8139C+át 0x%p, %pM, IRQ %d\n",

2018 
ªgs
, 
dev
->
dev_addr
, 
pdev
->
úq
);

2020 
	`pci_£t_drvd©a
(
pdev
, 
dev
);

2023 
	`pci_£t_ma°î
(
pdev
);

2025 i‡(
˝
->
wﬁ_íabÀd
)

2026 
	`˝_£t_d3_°©e
 (
˝
);

2030 
îr_out_iom≠
:

2031 
	`iounm≠
(
ªgs
);

2032 
îr_out_ªs
:

2033 
	`pci_ªÀa£_ªgi⁄s
(
pdev
);

2034 
îr_out_mwi
:

2035 
	`pci_˛ór_mwi
(
pdev
);

2036 
îr_out_dißbÀ
:

2037 
	`pci_dißbÀ_devi˚
(
pdev
);

2038 
îr_out_‰ì
:

2039 
	`‰ì_√tdev
(
dev
);

2040  
rc
;

2041 
	}
}

2043 
	$˝_ªmove_⁄e
 (
pci_dev
 *
pdev
)

2045 
√t_devi˚
 *
dev
 = 
	`pci_gë_drvd©a
(
pdev
);

2046 
˝_¥iv©e
 *
˝
 = 
	`√tdev_¥iv
(
dev
);

2048 
	`uƒegi°î_√tdev
(
dev
);

2049 
	`iounm≠
(
˝
->
ªgs
);

2050 i‡(
˝
->
wﬁ_íabÀd
)

2051 
	`pci_£t_powî_°©e
 (
pdev
, 
PCI_D0
);

2052 
	`pci_ªÀa£_ªgi⁄s
(
pdev
);

2053 
	`pci_˛ór_mwi
(
pdev
);

2054 
	`pci_dißbÀ_devi˚
(
pdev
);

2055 
	`‰ì_√tdev
(
dev
);

2056 
	}
}

2058 #ifde‡
CONFIG_PM


2059 
	$˝_su•íd
 (
pci_dev
 *
pdev
, 
pm_mesßge_t
 
°©e
)

2061 
√t_devi˚
 *
dev
 = 
	`pci_gë_drvd©a
(
pdev
);

2062 
˝_¥iv©e
 *
˝
 = 
	`√tdev_¥iv
(
dev
);

2063 
Êags
;

2065 i‡(!
	`√tif_ru¬ög
(
dev
))

2068 
	`√tif_devi˚_dëach
 (
dev
);

2069 
	`√tif_°›_queue
 (
dev
);

2071 
	`•ö_lock_úqßve
 (&
˝
->
lock
, 
Êags
);

2074 
	`˝w16
 (
I¡rMask
, 0);

2075 
	`˝w8
 (
Cmd
, 
	`˝r8
 (CmdË& (~
RxOn
 | ~
TxOn
));

2077 
	`•ö_u∆ock_úqª°‹e
 (&
˝
->
lock
, 
Êags
);

2079 
	`pci_ßve_°©e
(
pdev
);

2080 
	`pci_íabÀ_wake
(
pdev
, 
	`pci_choo£_°©e
’dev, 
°©e
), 
˝
->
wﬁ_íabÀd
);

2081 
	`pci_£t_powî_°©e
(
pdev
, 
	`pci_choo£_°©e
’dev, 
°©e
));

2084 
	}
}

2086 
	$˝_ªsume
 (
pci_dev
 *
pdev
)

2088 
√t_devi˚
 *
dev
 = 
	`pci_gë_drvd©a
 (
pdev
);

2089 
˝_¥iv©e
 *
˝
 = 
	`√tdev_¥iv
(
dev
);

2090 
Êags
;

2092 i‡(!
	`√tif_ru¬ög
(
dev
))

2095 
	`√tif_devi˚_©èch
 (
dev
);

2097 
	`pci_£t_powî_°©e
(
pdev
, 
PCI_D0
);

2098 
	`pci_ª°‹e_°©e
(
pdev
);

2099 
	`pci_íabÀ_wake
(
pdev
, 
PCI_D0
, 0);

2102 
	`˝_öô_rögs_ödex
 (
˝
);

2103 
	`˝_öô_hw
 (
˝
);

2104 
	`˝_íabÀ_úq
(
˝
);

2105 
	`√tif_°¨t_queue
 (
dev
);

2107 
	`•ö_lock_úqßve
 (&
˝
->
lock
, 
Êags
);

2109 
	`mii_check_medü
(&
˝
->
mii_if
, 
	`√tif_msg_lök
(˝), 
Ál£
);

2111 
	`•ö_u∆ock_úqª°‹e
 (&
˝
->
lock
, 
Êags
);

2114 
	}
}

2117 c⁄° 
pci_devi˚_id
 
	g˝_pci_tbl
[] = {

2118 { 
PCI_DEVICE
(
PCI_VENDOR_ID_REALTEK
, 
PCI_DEVICE_ID_REALTEK_8139
), },

2119 { 
PCI_DEVICE
(
PCI_VENDOR_ID_TTTECH
, 
PCI_DEVICE_ID_TTTECH_MC322
), },

2122 
MODULE_DEVICE_TABLE
(
pci
, 
˝_pci_tbl
);

2124 
pci_drivî
 
	g˝_drivî
 = {

2125 .
«me
 = 
DRV_NAME
,

2126 .
	gid_èbÀ
 = 
˝_pci_tbl
,

2127 .
	g¥obe
 = 
˝_öô_⁄e
,

2128 .
	gªmove
 = 
˝_ªmove_⁄e
,

2129 #ifde‡
CONFIG_PM


2130 .
	gªsume
 = 
˝_ªsume
,

2131 .
	gsu•íd
 = 
˝_su•íd
,

2135 
moduÀ_pci_drivî
(
˝_drivî
);

	@8139too.c

92 
	#¥_fmt
(
fmt
Ë
KBUILD_MODNAME
 ": " 
	)
fmt

94 
	#DRV_NAME
 "8139too"

	)

95 
	#DRV_VERSION
 "0.9.28"

	)

98 
	~<löux/moduÀ.h
>

99 
	~<löux/kî√l.h
>

100 
	~<löux/compûî.h
>

101 
	~<löux/pci.h
>

102 
	~<löux/öô.h
>

103 
	~<löux/öãºu±.h
>

104 
	~<löux/√tdevi˚.h
>

105 
	~<löux/ëhîdevi˚.h
>

106 
	~<löux/π√éök.h
>

107 
	~<löux/dñay.h
>

108 
	~<löux/ëhtoﬁ.h
>

109 
	~<löux/mii.h
>

110 
	~<löux/com∂ëi⁄.h
>

111 
	~<löux/¸c32.h
>

112 
	~<löux/io.h
>

113 
	~<löux/uac˚ss.h
>

114 
	~<löux/gÂ.h
>

115 
	~<löux/if_vœn.h
>

116 
	~<asm/úq.h
>

118 
	#RTL8139_DRIVER_NAME
 
DRV_NAME
 " Fa° Ethî√àdrivî " 
DRV_VERSION


	)

121 
	#RTL8139_DEF_MSG_ENABLE
 (
NETIF_MSG_DRV
 | \

122 
NETIF_MSG_PROBE
 | \

123 
NETIF_MSG_LINK
)

	)

127 
	#RTL8139_DEBUG
 0

	)

130 #unde‡
RTL8139_NDEBUG


133 #ifde‡
RTL8139_NDEBUG


134 
	#as£π
(
ex¥
Ëdÿ{} 0)

	)

136 
	#as£π
(
ex¥
) \

137 i‡(
	`u∆ikñy
(!(
ex¥
))) { \

138 
	`¥_îr
("Assertion failed! %s,%s,%s,line=%d\n", \

139 #ex¥, 
__FILE__
, 
__func__
, 
__LINE__
); \

140 }

	)

146 
	#MAX_UNITS
 8

	)

147 
	gmedü
[
MAX_UNITS
] = {-1, -1, -1, -1, -1, -1, -1, -1};

148 
	gfuŒ_du∂ex
[
MAX_UNITS
] = {-1, -1, -1, -1, -1, -1, -1, -1};

151 #ifde‡
CONFIG_8139TOO_PIO


152 
boﬁ
 
	gu£_io
 = 
åue
;

154 
boﬁ
 
	gu£_io
 = 
Ál£
;

159 
	gmu…iˇ°_fûãr_limô
 = 32;

162 
	gdebug
 = -1;

168 #i‡
deföed
(
CONFIG_SH_DREAMCAST
)

169 
	#RX_BUF_IDX
 0

	)

171 
	#RX_BUF_IDX
 2

	)

173 
	#RX_BUF_LEN
 (8192 << 
RX_BUF_IDX
)

	)

174 
	#RX_BUF_PAD
 16

	)

175 
	#RX_BUF_WRAP_PAD
 2048

	)

177 #i‡
RX_BUF_LEN
 == 65536

178 
	#RX_BUF_TOT_LEN
 
RX_BUF_LEN


	)

180 
	#RX_BUF_TOT_LEN
 (
RX_BUF_LEN
 + 
RX_BUF_PAD
 + 
RX_BUF_WRAP_PAD
)

	)

184 
	#NUM_TX_DESC
 4

	)

187 
	#MAX_ETH_FRAME_SIZE
 1792

	)

190 
	#MAX_ETH_DATA_SIZE
 (
MAX_ETH_FRAME_SIZE
 - 
VLAN_ETH_HLEN
 - 
ETH_FCS_LEN
)

	)

193 
	#TX_BUF_SIZE
 
MAX_ETH_FRAME_SIZE


	)

194 
	#TX_BUF_TOT_LEN
 (
TX_BUF_SIZE
 * 
NUM_TX_DESC
)

	)

198 
	#TX_FIFO_THRESH
 256

	)

201 
	#RX_FIFO_THRESH
 7

	)

202 
	#RX_DMA_BURST
 7

	)

203 
	#TX_DMA_BURST
 6

	)

204 
	#TX_RETRY
 8

	)

208 
	#TX_TIMEOUT
 (6*
HZ
)

	)

212 
	mHAS_MII_XCVR
 = 0x010000,

213 
	mHAS_CHIP_XCVR
 = 0x020000,

214 
	mHAS_LNK_CHNG
 = 0x040000,

217 
	#RTL_NUM_STATS
 4

	)

218 
	#RTL_REGS_VER
 1

	)

219 
	#RTL_MIN_IO_SIZE
 0x80

	)

220 
	#RTL8139B_IO_SIZE
 256

	)

222 
	#RTL8129_CAPS
 
HAS_MII_XCVR


	)

223 
	#RTL8139_CAPS
 (
HAS_CHIP_XCVR
|
HAS_LNK_CHNG
)

	)

226 
	mRTL8139
 = 0,

227 
	mRTL8129
,

228 } 
	tbﬂrd_t
;

233 c⁄° *
	m«me
;

234 
u32
 
	mhw_Êags
;

235 } 
	gbﬂrd_öfo
[] = {

236 { "RólTek RTL8139", 
RTL8139_CAPS
 },

237 { "RólTek RTL8129", 
RTL8129_CAPS
 },

241 c⁄° 
pci_devi˚_id
 
	gπl8139_pci_tbl
[] = {

242 {0x10ec, 0x8139, 
PCI_ANY_ID
, PCI_ANY_ID, 0, 0, 
RTL8139
 },

243 {0x10ec, 0x8138, 
PCI_ANY_ID
, PCI_ANY_ID, 0, 0, 
RTL8139
 },

244 {0x1113, 0x1211, 
PCI_ANY_ID
, PCI_ANY_ID, 0, 0, 
RTL8139
 },

245 {0x1500, 0x1360, 
PCI_ANY_ID
, PCI_ANY_ID, 0, 0, 
RTL8139
 },

246 {0x4033, 0x1360, 
PCI_ANY_ID
, PCI_ANY_ID, 0, 0, 
RTL8139
 },

247 {0x1186, 0x1300, 
PCI_ANY_ID
, PCI_ANY_ID, 0, 0, 
RTL8139
 },

248 {0x1186, 0x1340, 
PCI_ANY_ID
, PCI_ANY_ID, 0, 0, 
RTL8139
 },

249 {0x13d1, 0xab06, 
PCI_ANY_ID
, PCI_ANY_ID, 0, 0, 
RTL8139
 },

250 {0x1259, 0xa117, 
PCI_ANY_ID
, PCI_ANY_ID, 0, 0, 
RTL8139
 },

251 {0x1259, 0xa11e, 
PCI_ANY_ID
, PCI_ANY_ID, 0, 0, 
RTL8139
 },

252 {0x14ó, 0xab06, 
PCI_ANY_ID
, PCI_ANY_ID, 0, 0, 
RTL8139
 },

253 {0x14ó, 0xab07, 
PCI_ANY_ID
, PCI_ANY_ID, 0, 0, 
RTL8139
 },

254 {0x11db, 0x1234, 
PCI_ANY_ID
, PCI_ANY_ID, 0, 0, 
RTL8139
 },

255 {0x1432, 0x9130, 
PCI_ANY_ID
, PCI_ANY_ID, 0, 0, 
RTL8139
 },

256 {0x02ac, 0x1012, 
PCI_ANY_ID
, PCI_ANY_ID, 0, 0, 
RTL8139
 },

257 {0x018a, 0x0106, 
PCI_ANY_ID
, PCI_ANY_ID, 0, 0, 
RTL8139
 },

258 {0x126c, 0x1211, 
PCI_ANY_ID
, PCI_ANY_ID, 0, 0, 
RTL8139
 },

259 {0x1743, 0x8139, 
PCI_ANY_ID
, PCI_ANY_ID, 0, 0, 
RTL8139
 },

260 {0x021b, 0x8139, 
PCI_ANY_ID
, PCI_ANY_ID, 0, 0, 
RTL8139
 },

262 #ifde‡
CONFIG_SH_SECUREEDGE5410


264 {0x10ec, 0x8129, 
PCI_ANY_ID
, PCI_ANY_ID, 0, 0, 
RTL8139
 },

266 #ifde‡
CONFIG_8139TOO_8129


267 {0x10ec, 0x8129, 
PCI_ANY_ID
, PCI_ANY_ID, 0, 0, 
RTL8129
 },

274 {
PCI_ANY_ID
, 0x8139, 0x10ec, 0x8139, 0, 0, 
RTL8139
 },

275 {
PCI_ANY_ID
, 0x8139, 0x1186, 0x1300, 0, 0, 
RTL8139
 },

276 {
PCI_ANY_ID
, 0x8139, 0x13d1, 0xab06, 0, 0, 
RTL8139
 },

280 
MODULE_DEVICE_TABLE
 (
pci
, 
πl8139_pci_tbl
);

283 c⁄° 
	m°r
[
ETH_GSTRING_LEN
];

284 } 
	gëhtoﬁ_°©s_keys
[] = {

294 
	eRTL8139_ªgi°îs
 {

295 
	mMAC0
 = 0,

296 
	mMAR0
 = 8,

297 
	mTxSètus0
 = 0x10,

298 
	mTxAddr0
 = 0x20,

299 
	mRxBuf
 = 0x30,

300 
	mChùCmd
 = 0x37,

301 
	mRxBufPå
 = 0x38,

302 
	mRxBufAddr
 = 0x3A,

303 
	mI¡rMask
 = 0x3C,

304 
	mI¡rSètus
 = 0x3E,

305 
	mTxC⁄fig
 = 0x40,

306 
	mRxC⁄fig
 = 0x44,

307 
	mTimî
 = 0x48,

308 
	mRxMis£d
 = 0x4C,

309 
	mCfg9346
 = 0x50,

310 
	mC⁄fig0
 = 0x51,

311 
	mC⁄fig1
 = 0x52,

312 
	mTimîI¡
 = 0x54,

313 
	mMedüSètus
 = 0x58,

314 
	mC⁄fig3
 = 0x59,

315 
	mC⁄fig4
 = 0x5A,

316 
	mH…Clk
 = 0x5B,

317 
	mMu…iI¡r
 = 0x5C,

318 
	mTxSumm¨y
 = 0x60,

319 
	mBasicModeCål
 = 0x62,

320 
	mBasicModeSètus
 = 0x64,

321 
	mNWayAdvît
 = 0x66,

322 
	mNWayLPAR
 = 0x68,

323 
	mNWayEx∑nsi⁄
 = 0x6A,

325 
	mFIFOTMS
 = 0x70,

326 
	mCSCR
 = 0x74,

327 
	mPARA78
 = 0x78,

328 
	mFœshReg
 = 0xD4,

329 
	mPARA7c
 = 0x7c,

330 
	mC⁄fig5
 = 0xD8,

333 
	eCÀ¨BôMasks
 {

334 
	mMu…iI¡rCÀ¨
 = 0xF000,

335 
	mChùCmdCÀ¨
 = 0xE2,

336 
	mC⁄fig1CÀ¨
 = (1<<7)|(1<<6)|(1<<3)|(1<<2)|(1<<1),

339 
	eChùCmdBôs
 {

340 
	mCmdRe£t
 = 0x10,

341 
	mCmdRxEnb
 = 0x08,

342 
	mCmdTxEnb
 = 0x04,

343 
	mRxBufEm±y
 = 0x01,

347 
	eI¡rSètusBôs
 {

348 
	mPCIEº
 = 0x8000,

349 
	mPCSTimeout
 = 0x4000,

350 
	mRxFIFOOvî
 = 0x40,

351 
	mRxUndîrun
 = 0x20,

352 
	mRxOvîÊow
 = 0x10,

353 
	mTxEº
 = 0x08,

354 
	mTxOK
 = 0x04,

355 
	mRxEº
 = 0x02,

356 
	mRxOK
 = 0x01,

358 
	mRxAckBôs
 = 
RxFIFOOvî
 | 
RxOvîÊow
 | 
RxOK
,

361 
	eTxSètusBôs
 {

362 
	mTxHo°Owns
 = 0x2000,

363 
	mTxUndîrun
 = 0x4000,

364 
	mTxSètOK
 = 0x8000,

365 
	mTxOutOfWödow
 = 0x20000000,

366 
	mTxAb‹ãd
 = 0x40000000,

367 
	mTxC¨rõrLo°
 = 0x80000000,

369 
	eRxSètusBôs
 {

370 
	mRxMu…iˇ°
 = 0x8000,

371 
	mRxPhysiˇl
 = 0x4000,

372 
	mRxBrﬂdˇ°
 = 0x2000,

373 
	mRxBadSymbﬁ
 = 0x0020,

374 
	mRxRu¡
 = 0x0010,

375 
	mRxTooL⁄g
 = 0x0008,

376 
	mRxCRCEº
 = 0x0004,

377 
	mRxBadAlign
 = 0x0002,

378 
	mRxSètusOK
 = 0x0001,

382 
	erx_mode_bôs
 {

383 
	mAc˚±Eº
 = 0x20,

384 
	mAc˚±Ru¡
 = 0x10,

385 
	mAc˚±Brﬂdˇ°
 = 0x08,

386 
	mAc˚±Mu…iˇ°
 = 0x04,

387 
	mAc˚±MyPhys
 = 0x02,

388 
	mAc˚±AŒPhys
 = 0x01,

392 
	etx_c⁄fig_bôs
 {

394 
	mTxIFGShi·
 = 24,

395 
	mTxIFG84
 = (0 << 
TxIFGShi·
),

396 
	mTxIFG88
 = (1 << 
TxIFGShi·
),

397 
	mTxIFG92
 = (2 << 
TxIFGShi·
),

398 
	mTxIFG96
 = (3 << 
TxIFGShi·
),

400 
	mTxLo›Back
 = (1 << 18) | (1 << 17),

401 
	mTxCRC
 = (1 << 16),

402 
	mTxCÀ¨Abt
 = (1 << 0),

403 
	mTxDMAShi·
 = 8,

404 
	mTxRëryShi·
 = 4,

406 
	mTxVîsi⁄Mask
 = 0x7C800000,

410 
	eC⁄fig1Bôs
 {

411 
	mCfg1_PM_E«bÀ
 = 0x01,

412 
	mCfg1_VPD_E«bÀ
 = 0x02,

413 
	mCfg1_PIO
 = 0x04,

414 
	mCfg1_MMIO
 = 0x08,

415 
	mLWAKE
 = 0x10,

416 
	mCfg1_Drivî_Lﬂd
 = 0x20,

417 
	mCfg1_LED0
 = 0x40,

418 
	mCfg1_LED1
 = 0x80,

419 
	mSLEEP
 = (1 << 1),

420 
	mPWRDN
 = (1 << 0),

424 
	eC⁄fig3Bôs
 {

425 
	mCfg3_FBtBEn
 = (1 << 0),

426 
	mCfg3_FuncRegEn
 = (1 << 1),

427 
	mCfg3_CLKRUN_En
 = (1 << 2),

428 
	mCfg3_C¨dB_En
 = (1 << 3),

429 
	mCfg3_LökUp
 = (1 << 4),

430 
	mCfg3_Magic
 = (1 << 5),

431 
	mCfg3_PARM_En
 = (1 << 6),

432 
	mCfg3_GNTSñ
 = (1 << 7),

436 
	eC⁄fig4Bôs
 {

437 
	mLWPTN
 = (1 << 2),

441 
	eC⁄fig5Bôs
 {

442 
	mCfg5_PME_STS
 = (1 << 0),

443 
	mCfg5_LANWake
 = (1 << 1),

444 
	mCfg5_LDPS
 = (1 << 2),

445 
	mCfg5_FIFOAddrPå
= (1 << 3),

446 
	mCfg5_UWF
 = (1 << 4),

447 
	mCfg5_MWF
 = (1 << 5),

448 
	mCfg5_BWF
 = (1 << 6),

451 
	eRxC⁄figBôs
 {

453 
	mRxCfgFIFOShi·
 = 13,

454 
	mRxCfgFIFON⁄e
 = (7 << 
RxCfgFIFOShi·
),

457 
	mRxCfgDMAShi·
 = 8,

458 
	mRxCfgDMAU∆imôed
 = (7 << 
RxCfgDMAShi·
),

461 
	mRxCfgRcv8K
 = 0,

462 
	mRxCfgRcv16K
 = (1 << 11),

463 
	mRxCfgRcv32K
 = (1 << 12),

464 
	mRxCfgRcv64K
 = (1 << 11) | (1 << 12),

467 
	mRxNoWøp
 = (1 << 7),

472 
	eCSCRBôs
 {

473 
	mCSCR_LökOKBô
 = 0x0400,

474 
	mCSCR_LökCh™geBô
 = 0x0800,

475 
	mCSCR_LökSètusBôs
 = 0x0f000,

476 
	mCSCR_LökDownOffCmd
 = 0x003c0,

477 
	mCSCR_LökDownCmd
 = 0x0f3c0,

480 
	eCfg9346Bôs
 {

481 
	mCfg9346_Lock
 = 0x00,

482 
	mCfg9346_U∆ock
 = 0xC0,

486 
	mCH_8139
 = 0,

487 
	mCH_8139_K
,

488 
	mCH_8139A
,

489 
	mCH_8139A_G
,

490 
	mCH_8139B
,

491 
	mCH_8130
,

492 
	mCH_8139C
,

493 
	mCH_8100
,

494 
	mCH_8100B_8139D
,

495 
	mCH_8101
,

496 } 
	tchù_t
;

498 
	echù_Êags
 {

499 
	mHasH…Clk
 = (1 << 0),

500 
	mHasLWake
 = (1 << 1),

503 
	#HW_REVID
(
b30
, 
b29
, 
b28
, 
b27
, 
b26
, 
b23
, 
b22
) \

504 (
b30
<<30 | 
b29
<<29 | 
b28
<<28 | 
b27
<<27 | 
b26
<<26 | 
b23
<<23 | 
b22
<<22)

	)

505 
	#HW_REVID_MASK
 
	`HW_REVID
(1, 1, 1, 1, 1, 1, 1)

	)

509 c⁄° *
	m«me
;

510 
u32
 
	mvîsi⁄
;

511 
u32
 
	mÊags
;

512 } 
	gπl_chù_öfo
[] = {

514 
HW_REVID
(1, 0, 0, 0, 0, 0, 0),

515 
HasH…Clk
,

519 
HW_REVID
(1, 1, 0, 0, 0, 0, 0),

520 
HasH…Clk
,

524 
HW_REVID
(1, 1, 1, 0, 0, 0, 0),

525 
HasH…Clk
,

529 
HW_REVID
(1, 1, 1, 0, 0, 1, 0),

530 
HasH…Clk
,

534 
HW_REVID
(1, 1, 1, 1, 0, 0, 0),

535 
HasLWake
,

539 
HW_REVID
(1, 1, 1, 1, 1, 0, 0),

540 
HasLWake
,

544 
HW_REVID
(1, 1, 1, 0, 1, 0, 0),

545 
HasLWake
,

549 
HW_REVID
(1, 1, 1, 1, 0, 1, 0),

550 
HasLWake
,

554 
HW_REVID
(1, 1, 1, 0, 1, 0, 1),

555 
HasH…Clk


556 | 
HasLWake
,

560 
HW_REVID
(1, 1, 1, 0, 1, 1, 1),

561 
HasLWake
,

565 
	sπl_exåa_°©s
 {

566 
	móæy_rx
;

567 
	mtx_buf_m≠≥d
;

568 
	mtx_timeouts
;

569 
	mrx_lo°_ö_rög
;

572 
	sπl8139_°©s
 {

573 
u64
 
	m∑ckës
;

574 
u64
 
	mbyãs
;

575 
u64_°©s_sync
 
	msyn˝
;

578 
	sπl8139_¥iv©e
 {

579 
__iomem
 *
	mmmio_addr
;

580 
	mdrv_Êags
;

581 
pci_dev
 *
	mpci_dev
;

582 
u32
 
	mmsg_íabÀ
;

583 
«pi_°ru˘
 
	m«pi
;

584 
√t_devi˚
 *
	mdev
;

586 *
	mrx_rög
;

587 
	mcur_rx
;

588 
πl8139_°©s
 
	mrx_°©s
;

589 
dma_addr_t
 
	mrx_rög_dma
;

591 
	mtx_Êag
;

592 
	mcur_tx
;

593 
	mdúty_tx
;

594 
πl8139_°©s
 
	mtx_°©s
;

595 *
	mtx_buf
[
NUM_TX_DESC
];

596 *
	mtx_bufs
;

597 
dma_addr_t
 
	mtx_bufs_dma
;

599 sig√d 
	mphys
[4];

602 
	mtwi°õ
, 
	mtwi°_row
, 
	mtwi°_cﬁ
;

604 
	mw©chdog_fúed
 : 1;

605 
	mdeÁu…_p‹t
 : 4;

606 
	mhave_thªad
 : 1;

608 
•ölock_t
 
	mlock
;

609 
•ölock_t
 
	mrx_lock
;

611 
chù_t
 
	mchù£t
;

612 
u32
 
	mrx_c⁄fig
;

613 
πl_exåa_°©s
 
	mx°©s
;

615 
dñayed_w‹k
 
	mthªad
;

617 
mii_if_öfo
 
	mmii
;

618 
	mªgs_Àn
;

619 
	mfifo_c›y_timeout
;

622 
MODULE_AUTHOR
 ("Jeff Garzik <jgarzik@pobox.com>");

623 
MODULE_DESCRIPTION
 ("RealTek RTL-8139 Fast Ethernet driver");

624 
MODULE_LICENSE
("GPL");

625 
MODULE_VERSION
(
DRV_VERSION
);

627 
moduÀ_∑øm
(
u£_io
, 
boﬁ
, 0);

628 
MODULE_PARM_DESC
(
u£_io
, "Force use of I/Oáccess mode. 0=MMIO 1=PIO");

629 
moduÀ_∑øm
(
mu…iˇ°_fûãr_limô
, , 0);

630 
moduÀ_∑øm_¨øy
(
medü
, , 
NULL
, 0);

631 
moduÀ_∑øm_¨øy
(
fuŒ_du∂ex
, , 
NULL
, 0);

632 
moduÀ_∑øm
(
debug
, , 0);

633 
MODULE_PARM_DESC
 (
debug
, "8139too bitmapped messageÉnableÇumber");

634 
MODULE_PARM_DESC
 (
mu…iˇ°_fûãr_limô
, "8139too maximumÇumber of filtered multicastáddresses");

635 
MODULE_PARM_DESC
 (
medü
, "8139too: Bits 4+9: force full duplex, bit 5: 100Mbps");

636 
MODULE_PARM_DESC
 (
fuŒ_du∂ex
, "8139too: Force full duplex for board(s) (1)");

638 
ªad_ì¥om
 (
__iomem
 *
iﬂddr
, 
loˇti⁄
, 
addr_Àn
);

639 
πl8139_›í
 (
√t_devi˚
 *
dev
);

640 
mdio_ªad
 (
√t_devi˚
 *
dev
, 
phy_id
, 
loˇti⁄
);

641 
mdio_wrôe
 (
√t_devi˚
 *
dev
, 
phy_id
, 
loˇti⁄
,

642 
vÆ
);

643 
πl8139_°¨t_thªad
(
πl8139_¥iv©e
 *
ç
);

644 
πl8139_tx_timeout
 (
√t_devi˚
 *
dev
);

645 
πl8139_öô_rög
 (
√t_devi˚
 *
dev
);

646 
√tdev_tx_t
 
πl8139_°¨t_xmô
 (
sk_buff
 *
skb
,

647 
√t_devi˚
 *
dev
);

648 #ifde‡
CONFIG_NET_POLL_CONTROLLER


649 
πl8139_pﬁl_c⁄åﬁÀr
(
√t_devi˚
 *
dev
);

651 
πl8139_£t_mac_addªss
(
√t_devi˚
 *
dev
, *
p
);

652 
πl8139_pﬁl
(
«pi_°ru˘
 *
«pi
, 
budgë
);

653 
úqªtu∫_t
 
πl8139_öãºu±
 (
úq
, *
dev_ö°™˚
);

654 
πl8139_˛o£
 (
√t_devi˚
 *
dev
);

655 
√tdev_io˘l
 (
√t_devi˚
 *
dev
, 
i‰eq
 *
rq
, 
cmd
);

656 
π∆_lök_°©s64
 *
πl8139_gë_°©s64
(
√t_devi˚
 *
dev
,

657 
π∆_lök_°©s64


658 *
°©s
);

659 
πl8139_£t_rx_mode
 (
√t_devi˚
 *
dev
);

660 
__£t_rx_mode
 (
√t_devi˚
 *
dev
);

661 
πl8139_hw_°¨t
 (
√t_devi˚
 *
dev
);

662 
πl8139_thªad
 (
w‹k_°ru˘
 *
w‹k
);

663 
πl8139_tx_timeout_èsk
(
w‹k_°ru˘
 *
w‹k
);

664 c⁄° 
ëhtoﬁ_›s
 
	gπl8139_ëhtoﬁ_›s
;

668 
	#RTL_W8_F
(
ªg
, 
vÆ8
Ëdÿ{ 
	`iowrôe8
 ((vÆ8), 
iﬂddr
 + (ªg)); 
	`i‹ód8
 (iﬂdd∏+ (ªg)); } 0)

	)

669 
	#RTL_W16_F
(
ªg
, 
vÆ16
Ëdÿ{ 
	`iowrôe16
 ((vÆ16), 
iﬂddr
 + (ªg)); 
	`i‹ód16
 (iﬂdd∏+ (ªg)); } 0)

	)

670 
	#RTL_W32_F
(
ªg
, 
vÆ32
Ëdÿ{ 
	`iowrôe32
 ((vÆ32), 
iﬂddr
 + (ªg)); 
	`i‹ód32
 (iﬂdd∏+ (ªg)); } 0)

	)

673 
	#RTL_W8
(
ªg
, 
vÆ8
Ë
	`iowrôe8
 ((vÆ8), 
iﬂddr
 + (ªg))

	)

674 
	#RTL_W16
(
ªg
, 
vÆ16
Ë
	`iowrôe16
 ((vÆ16), 
iﬂddr
 + (ªg))

	)

675 
	#RTL_W32
(
ªg
, 
vÆ32
Ë
	`iowrôe32
 ((vÆ32), 
iﬂddr
 + (ªg))

	)

678 
	#RTL_R8
(
ªg
Ë
	`i‹ód8
 (
iﬂddr
 + (ªg))

	)

679 
	#RTL_R16
(
ªg
Ë
	`i‹ód16
 (
iﬂddr
 + (ªg))

	)

680 
	#RTL_R32
(
ªg
Ë
	`i‹ód32
 (
iﬂddr
 + (ªg))

	)

683 c⁄° 
u16
 
	gπl8139_öå_mask
 =

684 
PCIEº
 | 
PCSTimeout
 | 
RxUndîrun
 | 
RxOvîÊow
 | 
RxFIFOOvî
 |

685 
TxEº
 | 
TxOK
 | 
RxEº
 | 
RxOK
;

687 c⁄° 
u16
 
	gπl8139_n‹x_öå_mask
 =

688 
PCIEº
 | 
PCSTimeout
 | 
RxUndîrun
 |

689 
TxEº
 | 
TxOK
 | 
RxEº
 ;

691 #i‡
RX_BUF_IDX
 == 0

692 c⁄° 
	gπl8139_rx_c⁄fig
 =

693 
RxCfgRcv8K
 | 
RxNoWøp
 |

694 (
RX_FIFO_THRESH
 << 
RxCfgFIFOShi·
) |

695 (
RX_DMA_BURST
 << 
RxCfgDMAShi·
);

696 #ñi‡
RX_BUF_IDX
 == 1

697 c⁄° 
	gπl8139_rx_c⁄fig
 =

698 
RxCfgRcv16K
 | 
RxNoWøp
 |

699 (
RX_FIFO_THRESH
 << 
RxCfgFIFOShi·
) |

700 (
RX_DMA_BURST
 << 
RxCfgDMAShi·
);

701 #ñi‡
RX_BUF_IDX
 == 2

702 c⁄° 
	gπl8139_rx_c⁄fig
 =

703 
RxCfgRcv32K
 | 
RxNoWøp
 |

704 (
RX_FIFO_THRESH
 << 
RxCfgFIFOShi·
) |

705 (
RX_DMA_BURST
 << 
RxCfgDMAShi·
);

706 #ñi‡
RX_BUF_IDX
 == 3

707 c⁄° 
	gπl8139_rx_c⁄fig
 =

708 
RxCfgRcv64K
 |

709 (
RX_FIFO_THRESH
 << 
RxCfgFIFOShi·
) |

710 (
RX_DMA_BURST
 << 
RxCfgDMAShi·
);

715 c⁄° 
	gπl8139_tx_c⁄fig
 =

716 
TxIFG96
 | (
TX_DMA_BURST
 << 
TxDMAShi·
Ë| (
TX_RETRY
 << 
TxRëryShi·
);

718 
	$__πl8139_˛ónup_dev
 (
√t_devi˚
 *
dev
)

720 
πl8139_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

721 
pci_dev
 *
pdev
;

723 
	`as£π
 (
dev
 !
NULL
);

724 
	`as£π
 (
ç
->
pci_dev
 !
NULL
);

725 
pdev
 = 
ç
->
pci_dev
;

727 i‡(
ç
->
mmio_addr
)

728 
	`pci_iounm≠
 (
pdev
, 
ç
->
mmio_addr
);

731 
	`pci_ªÀa£_ªgi⁄s
 (
pdev
);

733 
	`‰ì_√tdev
(
dev
);

734 
	}
}

737 
	$πl8139_chù_ª£t
 (
__iomem
 *
iﬂddr
)

739 
i
;

742 
	`RTL_W8
 (
ChùCmd
, 
CmdRe£t
);

745 
i
 = 1000; i > 0; i--) {

746 
	`b¨rõr
();

747 i‡((
	`RTL_R8
 (
ChùCmd
Ë& 
CmdRe£t
) == 0)

749 
	`udñay
 (10);

751 
	}
}

754 
√t_devi˚
 *
	$πl8139_öô_bﬂrd
(
pci_dev
 *
pdev
)

756 
devi˚
 *
d
 = &
pdev
->
dev
;

757 
__iomem
 *
iﬂddr
;

758 
√t_devi˚
 *
dev
;

759 
πl8139_¥iv©e
 *
ç
;

760 
u8
 
tmp8
;

761 
rc
, 
dißbÀ_dev_⁄_îr
 = 0;

762 
i
, 
b¨
;

763 
io_Àn
;

764 
u32
 
vîsi⁄
;

766 
mask
;

767 *
ty≥
;

768 } 
ªs
[] = {

769 { 
IORESOURCE_IO
, "PIO" },

770 { 
IORESOURCE_MEM
, "MMIO" }

773 
	`as£π
 (
pdev
 !
NULL
);

776 
dev
 = 
	`Æloc_ëhîdev
 ( (*
ç
));

777 i‡(
dev
 =
NULL
)

778  
	`ERR_PTR
(-
ENOMEM
);

780 
	`SET_NETDEV_DEV
(
dev
, &
pdev
->dev);

782 
ç
 = 
	`√tdev_¥iv
(
dev
);

783 
ç
->
pci_dev
 = 
pdev
;

786 
rc
 = 
	`pci_íabÀ_devi˚
 (
pdev
);

787 i‡(
rc
)

788 
îr_out
;

790 
dißbÀ_dev_⁄_îr
 = 1;

791 
rc
 = 
	`pci_ªque°_ªgi⁄s
 (
pdev
, 
DRV_NAME
);

792 i‡(
rc
)

793 
îr_out
;

795 
	`pci_£t_ma°î
 (
pdev
);

797 
	`u64_°©s_öô
(&
ç
->
rx_°©s
.
syn˝
);

798 
	`u64_°©s_öô
(&
ç
->
tx_°©s
.
syn˝
);

800 
ªåy
:

802 
b¨
 = !
u£_io
;

804 
io_Àn
 = 
	`pci_ªsour˚_Àn
(
pdev
, 
b¨
);

806 
	`dev_dbg
(
d
, "%†ªgi⁄ sizê0x%02lX\n", 
ªs
[
b¨
].
ty≥
, 
io_Àn
);

808 i‡(!(
	`pci_ªsour˚_Êags
(
pdev
, 
b¨
Ë& 
ªs
[b¨].
mask
)) {

809 
	`dev_îr
(
d
, "ªgi⁄ #%dÇŸá %†ªsour˚,áb‹tög\n", 
b¨
,

810 
ªs
[
b¨
].
ty≥
);

811 
rc
 = -
ENODEV
;

812 
îr_out
;

814 i‡(
io_Àn
 < 
RTL_MIN_IO_SIZE
) {

815 
	`dev_îr
(
d
, "Invalid PCI %sÑegion size(s),áborting\n",

816 
ªs
[
b¨
].
ty≥
);

817 
rc
 = -
ENODEV
;

818 
îr_out
;

821 
iﬂddr
 = 
	`pci_iom≠
(
pdev
, 
b¨
, 0);

822 i‡(!
iﬂddr
) {

823 
	`dev_îr
(
d
, "ˇ¬Ÿ m≠ %s\n", 
ªs
[
b¨
].
ty≥
);

824 i‡(!
u£_io
) {

825 
u£_io
 = 
åue
;

826 
ªåy
;

828 
rc
 = -
ENODEV
;

829 
îr_out
;

831 
ç
->
ªgs_Àn
 = 
io_Àn
;

832 
ç
->
mmio_addr
 = 
iﬂddr
;

835 
	`RTL_W8
 (
H…Clk
, 'R');

838 i‡(
	`RTL_R32
 (
TxC⁄fig
) == 0xFFFFFFFF) {

839 
	`dev_îr
(&
pdev
->
dev
, "ChipÇotÑesponding, ignoring board\n");

840 
rc
 = -
EIO
;

841 
îr_out
;

845 
vîsi⁄
 = 
	`RTL_R32
 (
TxC⁄fig
Ë& 
HW_REVID_MASK
;

846 
i
 = 0; i < 
	`ARRAY_SIZE
 (
πl_chù_öfo
); i++)

847 i‡(
vîsi⁄
 =
πl_chù_öfo
[
i
].version) {

848 
ç
->
chù£t
 = 
i
;

849 
m©ch
;

853 
i
 = 0;

854 
	`dev_dbg
(&
pdev
->
dev
, "unknown chip version,ássuming RTL-8139\n");

855 
	`dev_dbg
(&
pdev
->
dev
, "TxC⁄fig = 0x%x\n", 
	`RTL_R32
 (
TxC⁄fig
));

856 
ç
->
chù£t
 = 0;

858 
m©ch
:

859 
	`¥_debug
("chipset id (%d) == index %d, '%s'\n",

860 
vîsi⁄
, 
i
, 
πl_chù_öfo
[i].
«me
);

862 i‡(
ç
->
chù£t
 >
CH_8139B
) {

863 
u8
 
√w_tmp8
 = 
tmp8
 = 
	`RTL_R8
 (
C⁄fig1
);

864 
	`¥_debug
("PCI PM wakeup\n");

865 i‡((
πl_chù_öfo
[
ç
->
chù£t
].
Êags
 & 
HasLWake
) &&

866 (
tmp8
 & 
LWAKE
))

867 
√w_tmp8
 &~
LWAKE
;

868 
√w_tmp8
 |
Cfg1_PM_E«bÀ
;

869 i‡(
√w_tmp8
 !
tmp8
) {

870 
	`RTL_W8
 (
Cfg9346
, 
Cfg9346_U∆ock
);

871 
	`RTL_W8
 (
C⁄fig1
, 
tmp8
);

872 
	`RTL_W8
 (
Cfg9346
, 
Cfg9346_Lock
);

874 i‡(
πl_chù_öfo
[
ç
->
chù£t
].
Êags
 & 
HasLWake
) {

875 
tmp8
 = 
	`RTL_R8
 (
C⁄fig4
);

876 i‡(
tmp8
 & 
LWPTN
) {

877 
	`RTL_W8
 (
Cfg9346
, 
Cfg9346_U∆ock
);

878 
	`RTL_W8
 (
C⁄fig4
, 
tmp8
 & ~
LWPTN
);

879 
	`RTL_W8
 (
Cfg9346
, 
Cfg9346_Lock
);

883 
	`¥_debug
("Old chip wakeup\n");

884 
tmp8
 = 
	`RTL_R8
 (
C⁄fig1
);

885 
tmp8
 &~(
SLEEP
 | 
PWRDN
);

886 
	`RTL_W8
 (
C⁄fig1
, 
tmp8
);

889 
	`πl8139_chù_ª£t
 (
iﬂddr
);

891  
dev
;

893 
îr_out
:

894 
	`__πl8139_˛ónup_dev
 (
dev
);

895 i‡(
dißbÀ_dev_⁄_îr
)

896 
	`pci_dißbÀ_devi˚
 (
pdev
);

897  
	`ERR_PTR
(
rc
);

898 
	}
}

900 
	$πl8139_£t_„©uªs
(
√t_devi˚
 *
dev
, 
√tdev_„©uªs_t
 
„©uªs
)

902 
πl8139_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

903 
Êags
;

904 
√tdev_„©uªs_t
 
ch™ged
 = 
„©uªs
 ^ 
dev
->features;

905 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

907 i‡(!(
ch™ged
 & (
NETIF_F_RXALL
)))

910 
	`•ö_lock_úqßve
(&
ç
->
lock
, 
Êags
);

912 i‡(
ch™ged
 & 
NETIF_F_RXALL
) {

913 
rx_mode
 = 
ç
->
rx_c⁄fig
;

914 i‡(
„©uªs
 & 
NETIF_F_RXALL
)

915 
rx_mode
 |(
Ac˚±Eº
 | 
Ac˚±Ru¡
);

917 
rx_mode
 &~(
Ac˚±Eº
 | 
Ac˚±Ru¡
);

918 
ç
->
rx_c⁄fig
 = 
πl8139_rx_c⁄fig
 | 
rx_mode
;

919 
	`RTL_W32_F
(
RxC⁄fig
, 
ç
->
rx_c⁄fig
);

922 
	`•ö_u∆ock_úqª°‹e
(&
ç
->
lock
, 
Êags
);

925 
	}
}

927 
	$πl8139_ch™ge_mtu
(
√t_devi˚
 *
dev
, 
√w_mtu
)

929 i‡(
√w_mtu
 < 68 ||Çew_mtu > 
MAX_ETH_DATA_SIZE
)

930  -
EINVAL
;

931 
dev
->
mtu
 = 
√w_mtu
;

933 
	}
}

935 c⁄° 
√t_devi˚_›s
 
	gπl8139_√tdev_›s
 = {

936 .
ndo_›í
 = 
πl8139_›í
,

937 .
	gndo_°›
 = 
πl8139_˛o£
,

938 .
	gndo_gë_°©s64
 = 
πl8139_gë_°©s64
,

939 .
	gndo_ch™ge_mtu
 = 
πl8139_ch™ge_mtu
,

940 .
	gndo_vÆid©e_addr
 = 
ëh_vÆid©e_addr
,

941 .
	gndo_£t_mac_addªss
 = 
πl8139_£t_mac_addªss
,

942 .
	gndo_°¨t_xmô
 = 
πl8139_°¨t_xmô
,

943 .
	gndo_£t_rx_mode
 = 
πl8139_£t_rx_mode
,

944 .
	gndo_do_io˘l
 = 
√tdev_io˘l
,

945 .
	gndo_tx_timeout
 = 
πl8139_tx_timeout
,

946 #ifde‡
CONFIG_NET_POLL_CONTROLLER


947 .
	gndo_pﬁl_c⁄åﬁÀr
 = 
πl8139_pﬁl_c⁄åﬁÀr
,

949 .
	gndo_£t_„©uªs
 = 
πl8139_£t_„©uªs
,

952 
	$πl8139_öô_⁄e
(
pci_dev
 *
pdev
,

953 c⁄° 
pci_devi˚_id
 *
ít
)

955 
√t_devi˚
 *
dev
 = 
NULL
;

956 
πl8139_¥iv©e
 *
ç
;

957 
i
, 
addr_Àn
, 
›ti⁄
;

958 
__iomem
 *
iﬂddr
;

959 
bﬂrd_idx
 = -1;

961 
	`as£π
 (
pdev
 !
NULL
);

962 
	`as£π
 (
ít
 !
NULL
);

964 
bﬂrd_idx
++;

969 #i‚de‡
MODULE


971 
¥öãd_vîsi⁄
;

972 i‡(!
¥öãd_vîsi⁄
++)

973 
	`¥_öfo
(
RTL8139_DRIVER_NAME
 "\n");

977 i‡(
pdev
->
víd‹
 =
PCI_VENDOR_ID_REALTEK
 &&

978 
pdev
->
devi˚
 =
PCI_DEVICE_ID_REALTEK_8139
 &&Ödev->
ªvisi⁄
 >= 0x20) {

979 
	`dev_öfo
(&
pdev
->
dev
,

981 
pdev
->
víd‹
,Ödev->
devi˚
,Ödev->
ªvisi⁄
);

982  -
ENODEV
;

985 i‡(
pdev
->
víd‹
 =
PCI_VENDOR_ID_REALTEK
 &&

986 
pdev
->
devi˚
 =
PCI_DEVICE_ID_REALTEK_8139
 &&

987 
pdev
->
subsy°em_víd‹
 =
PCI_VENDOR_ID_ATHEROS
 &&

988 
pdev
->
subsy°em_devi˚
 =
PCI_DEVICE_ID_REALTEK_8139
) {

989 
	`¥_öfo
("OQO Model 2 detected. Forcing PIO\n");

990 
u£_io
 = 1;

993 
dev
 = 
	`πl8139_öô_bﬂrd
 (
pdev
);

994 i‡(
	`IS_ERR
(
dev
))

995  
	`PTR_ERR
(
dev
);

997 
	`as£π
 (
dev
 !
NULL
);

998 
ç
 = 
	`√tdev_¥iv
(
dev
);

999 
ç
->
dev
 = dev;

1001 
iﬂddr
 = 
ç
->
mmio_addr
;

1002 
	`as£π
 (
iﬂddr
 !
NULL
);

1004 
addr_Àn
 = 
	`ªad_ì¥om
 (
iﬂddr
, 0, 8) == 0x8129 ? 8 : 6;

1005 
i
 = 0; i < 3; i++)

1006 ((
__À16
 *Ë(
dev
->
dev_addr
))[
i
] =

1007 
	`˝u_to_À16
(
	`ªad_ì¥om
 (
iﬂddr
, 
i
 + 7, 
addr_Àn
));

1010 
dev
->
√tdev_›s
 = &
πl8139_√tdev_›s
;

1011 
dev
->
ëhtoﬁ_›s
 = &
πl8139_ëhtoﬁ_›s
;

1012 
dev
->
w©chdog_timeo
 = 
TX_TIMEOUT
;

1013 
	`√tif_«pi_add
(
dev
, &
ç
->
«pi
, 
πl8139_pﬁl
, 64);

1019 
dev
->
„©uªs
 |
NETIF_F_SG
 | 
NETIF_F_HW_CSUM
 | 
NETIF_F_HIGHDMA
;

1020 
dev
->
vœn_„©uªs
 = dev->
„©uªs
;

1022 
dev
->
hw_„©uªs
 |
NETIF_F_RXALL
;

1023 
dev
->
hw_„©uªs
 |
NETIF_F_RXFCS
;

1026 
ç
 = 
	`√tdev_¥iv
(
dev
);

1029 
ç
->
drv_Êags
 = 
bﬂrd_öfo
[
ít
->
drivî_d©a
].
hw_Êags
;

1030 
ç
->
mmio_addr
 = 
iﬂddr
;

1031 
ç
->
msg_íabÀ
 =

1032 (
debug
 < 0 ? 
RTL8139_DEF_MSG_ENABLE
 : ((1 << debug) - 1));

1033 
	`•ö_lock_öô
 (&
ç
->
lock
);

1034 
	`•ö_lock_öô
 (&
ç
->
rx_lock
);

1035 
	`INIT_DELAYED_WORK
(&
ç
->
thªad
, 
πl8139_thªad
);

1036 
ç
->
mii
.
dev
 = dev;

1037 
ç
->
mii
.
mdio_ªad
 = mdio_read;

1038 
ç
->
mii
.
mdio_wrôe
 = mdio_write;

1039 
ç
->
mii
.
phy_id_mask
 = 0x3f;

1040 
ç
->
mii
.
ªg_num_mask
 = 0x1f;

1043 
	`¥_debug
("aboutÅoÑegister deviceÇamed %s (%p)...\n",

1044 
dev
->
«me
, dev);

1045 
i
 = 
	`ªgi°î_√tdev
 (
dev
);

1046 i‡(
i
Ë
îr_out
;

1048 
	`pci_£t_drvd©a
 (
pdev
, 
dev
);

1050 
	`√tdev_öfo
(
dev
, "%sát 0x%p, %pM, IRQ %d\n",

1051 
bﬂrd_öfo
[
ít
->
drivî_d©a
].
«me
,

1052 
iﬂddr
, 
dev
->
dev_addr
, 
pdev
->
úq
);

1054 
	`√tdev_dbg
(
dev
, "Identified 8139 chipÅype '%s'\n",

1055 
πl_chù_öfo
[
ç
->
chù£t
].
«me
);

1060 #ifde‡
CONFIG_8139TOO_8129


1061 i‡(
ç
->
drv_Êags
 & 
HAS_MII_XCVR
) {

1062 
phy
, 
phy_idx
 = 0;

1063 
phy
 = 0;Öhy < 32 && 
phy_idx
 < (
ç
->
phys
);Öhy++) {

1064 
mii_°©us
 = 
	`mdio_ªad
(
dev
, 
phy
, 1);

1065 i‡(
mii_°©us
 != 0xffff && mii_status != 0x0000) {

1066 
u16
 
advîtisög
 = 
	`mdio_ªad
(
dev
, 
phy
, 4);

1067 
ç
->
phys
[
phy_idx
++] = 
phy
;

1068 
	`√tdev_öfo
(
dev
, "MIIÅransceiver %d status 0x%04xádvertising %04x\n",

1069 
phy
, 
mii_°©us
, 
advîtisög
);

1072 i‡(
phy_idx
 == 0) {

1073 
	`√tdev_öfo
(
dev
, "No MIIÅransceivers found! Assuming SYMÅransceiver\n");

1074 
ç
->
phys
[0] = 32;

1078 
ç
->
phys
[0] = 32;

1079 
ç
->
mii
.
phy_id
 =Åp->
phys
[0];

1082 
›ti⁄
 = (
bﬂrd_idx
 >
MAX_UNITS
Ë? 0 : 
medü
[board_idx];

1083 i‡(
›ti⁄
 > 0) {

1084 
ç
->
mii
.
fuŒ_du∂ex
 = (
›ti⁄
 & 0x210) ? 1 : 0;

1085 
ç
->
deÁu…_p‹t
 = 
›ti⁄
 & 0xFF;

1086 i‡(
ç
->
deÁu…_p‹t
)

1087 
ç
->
mii
.
f‹˚_medü
 = 1;

1089 i‡(
bﬂrd_idx
 < 
MAX_UNITS
 && 
fuŒ_du∂ex
[board_idx] > 0)

1090 
ç
->
mii
.
fuŒ_du∂ex
 = fuŒ_du∂ex[
bﬂrd_idx
];

1091 i‡(
ç
->
mii
.
fuŒ_du∂ex
) {

1092 
	`√tdev_öfo
(
dev
, "MediaÅype forcedÅo Full Duplex\n");

1095 
ç
->
mii
.
f‹˚_medü
 = 1;

1097 i‡(
ç
->
deÁu…_p‹t
) {

1098 
	`√tdev_öfo
(
dev
, " Forcing %dMbps %s-duplex operation\n",

1099 (
›ti⁄
 & 0x20 ? 100 : 10),

1100 (
›ti⁄
 & 0x10 ? "full" : "half"));

1101 
	`mdio_wrôe
(
dev
, 
ç
->
phys
[0], 0,

1102 ((
›ti⁄
 & 0x20) ? 0x2000 : 0) |

1103 ((
›ti⁄
 & 0x10) ? 0x0100 : 0));

1107 i‡(
πl_chù_öfo
[
ç
->
chù£t
].
Êags
 & 
HasH…Clk
)

1108 
	`RTL_W8
 (
H…Clk
, 'H');

1112 
îr_out
:

1113 
	`√tif_«pi_dñ
(&
ç
->
«pi
);

1114 
	`__πl8139_˛ónup_dev
 (
dev
);

1115 
	`pci_dißbÀ_devi˚
 (
pdev
);

1116  
i
;

1117 
	}
}

1120 
	$πl8139_ªmove_⁄e
(
pci_dev
 *
pdev
)

1122 
√t_devi˚
 *
dev
 = 
	`pci_gë_drvd©a
 (
pdev
);

1123 
πl8139_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

1125 
	`as£π
 (
dev
 !
NULL
);

1127 
	`ˇn˚l_dñayed_w‹k_sync
(&
ç
->
thªad
);

1128 
	`√tif_«pi_dñ
(&
ç
->
«pi
);

1130 
	`uƒegi°î_√tdev
 (
dev
);

1132 
	`__πl8139_˛ónup_dev
 (
dev
);

1133 
	`pci_dißbÀ_devi˚
 (
pdev
);

1134 
	}
}

1140 
	#EE_SHIFT_CLK
 0x04

	)

1141 
	#EE_CS
 0x08

	)

1142 
	#EE_DATA_WRITE
 0x02

	)

1143 
	#EE_WRITE_0
 0x00

	)

1144 
	#EE_WRITE_1
 0x02

	)

1145 
	#EE_DATA_READ
 0x01

	)

1146 
	#EE_ENB
 (0x80 | 
EE_CS
)

	)

1152 
	#ì¥om_dñay
(Ë()
	`RTL_R8
(
Cfg9346
)

	)

1155 
	#EE_WRITE_CMD
 (5)

	)

1156 
	#EE_READ_CMD
 (6)

	)

1157 
	#EE_ERASE_CMD
 (7)

	)

1159 
	$ªad_ì¥om
(
__iomem
 *
iﬂddr
, 
loˇti⁄
, 
addr_Àn
)

1161 
i
;

1162 
ªtvÆ
 = 0;

1163 
ªad_cmd
 = 
loˇti⁄
 | (
EE_READ_CMD
 << 
addr_Àn
);

1165 
	`RTL_W8
 (
Cfg9346
, 
EE_ENB
 & ~
EE_CS
);

1166 
	`RTL_W8
 (
Cfg9346
, 
EE_ENB
);

1167 
	`ì¥om_dñay
 ();

1170 
i
 = 4 + 
addr_Àn
; i >= 0; i--) {

1171 
d©avÆ
 = (
ªad_cmd
 & (1 << 
i
)Ë? 
EE_DATA_WRITE
 : 0;

1172 
	`RTL_W8
 (
Cfg9346
, 
EE_ENB
 | 
d©avÆ
);

1173 
	`ì¥om_dñay
 ();

1174 
	`RTL_W8
 (
Cfg9346
, 
EE_ENB
 | 
d©avÆ
 | 
EE_SHIFT_CLK
);

1175 
	`ì¥om_dñay
 ();

1177 
	`RTL_W8
 (
Cfg9346
, 
EE_ENB
);

1178 
	`ì¥om_dñay
 ();

1180 
i
 = 16; i > 0; i--) {

1181 
	`RTL_W8
 (
Cfg9346
, 
EE_ENB
 | 
EE_SHIFT_CLK
);

1182 
	`ì¥om_dñay
 ();

1183 
ªtvÆ
 =

1184 (
ªtvÆ
 << 1Ë| ((
	`RTL_R8
 (
Cfg9346
Ë& 
EE_DATA_READ
) ? 1 :

1186 
	`RTL_W8
 (
Cfg9346
, 
EE_ENB
);

1187 
	`ì¥om_dñay
 ();

1191 
	`RTL_W8
(
Cfg9346
, 0);

1192 
	`ì¥om_dñay
 ();

1194  
ªtvÆ
;

1195 
	}
}

1203 
	#MDIO_DIR
 0x80

	)

1204 
	#MDIO_DATA_OUT
 0x04

	)

1205 
	#MDIO_DATA_IN
 0x02

	)

1206 
	#MDIO_CLK
 0x01

	)

1207 
	#MDIO_WRITE0
 (
MDIO_DIR
)

	)

1208 
	#MDIO_WRITE1
 (
MDIO_DIR
 | 
MDIO_DATA_OUT
)

	)

1210 
	#mdio_dñay
(Ë
	`RTL_R8
(
C⁄fig4
)

	)

1213 c⁄° 
	gmii_2_8139_m≠
[8] = {

1214 
BasicModeCål
,

1215 
BasicModeSètus
,

1218 
NWayAdvît
,

1219 
NWayLPAR
,

1220 
NWayEx∑nsi⁄
,

1225 #ifde‡
CONFIG_8139TOO_8129


1227 
	$mdio_sync
 (
__iomem
 *
iﬂddr
)

1229 
i
;

1231 
i
 = 32; i >= 0; i--) {

1232 
	`RTL_W8
 (
C⁄fig4
, 
MDIO_WRITE1
);

1233 
	`mdio_dñay
 ();

1234 
	`RTL_W8
 (
C⁄fig4
, 
MDIO_WRITE1
 | 
MDIO_CLK
);

1235 
	`mdio_dñay
 ();

1237 
	}
}

1240 
	$mdio_ªad
 (
√t_devi˚
 *
dev
, 
phy_id
, 
loˇti⁄
)

1242 
πl8139_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

1243 
ªtvÆ
 = 0;

1244 #ifde‡
CONFIG_8139TOO_8129


1245 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

1246 
mii_cmd
 = (0xf6 << 10Ë| (
phy_id
 << 5Ë| 
loˇti⁄
;

1247 
i
;

1250 i‡(
phy_id
 > 31) {

1251 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

1252  
loˇti⁄
 < 8 && 
mii_2_8139_m≠
[location] ?

1253 
	`RTL_R16
 (
mii_2_8139_m≠
[
loˇti⁄
]) : 0;

1256 #ifde‡
CONFIG_8139TOO_8129


1257 
	`mdio_sync
 (
iﬂddr
);

1259 
i
 = 15; i >= 0; i--) {

1260 
d©avÆ
 = (
mii_cmd
 & (1 << 
i
)Ë? 
MDIO_DATA_OUT
 : 0;

1262 
	`RTL_W8
 (
C⁄fig4
, 
MDIO_DIR
 | 
d©avÆ
);

1263 
	`mdio_dñay
 ();

1264 
	`RTL_W8
 (
C⁄fig4
, 
MDIO_DIR
 | 
d©avÆ
 | 
MDIO_CLK
);

1265 
	`mdio_dñay
 ();

1269 
i
 = 19; i > 0; i--) {

1270 
	`RTL_W8
 (
C⁄fig4
, 0);

1271 
	`mdio_dñay
 ();

1272 
ªtvÆ
 = (ªtvÆ << 1Ë| ((
	`RTL_R8
 (
C⁄fig4
Ë& 
MDIO_DATA_IN
) ? 1 : 0);

1273 
	`RTL_W8
 (
C⁄fig4
, 
MDIO_CLK
);

1274 
	`mdio_dñay
 ();

1278  (
ªtvÆ
 >> 1) & 0xffff;

1279 
	}
}

1282 
	$mdio_wrôe
 (
√t_devi˚
 *
dev
, 
phy_id
, 
loˇti⁄
,

1283 
vÆue
)

1285 
πl8139_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

1286 #ifde‡
CONFIG_8139TOO_8129


1287 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

1288 
mii_cmd
 = (0x5002 << 16Ë| (
phy_id
 << 23Ë| (
loˇti⁄
 << 18Ë| 
vÆue
;

1289 
i
;

1292 i‡(
phy_id
 > 31) {

1293 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

1294 i‡(
loˇti⁄
 == 0) {

1295 
	`RTL_W8
 (
Cfg9346
, 
Cfg9346_U∆ock
);

1296 
	`RTL_W16
 (
BasicModeCål
, 
vÆue
);

1297 
	`RTL_W8
 (
Cfg9346
, 
Cfg9346_Lock
);

1298 } i‡(
loˇti⁄
 < 8 && 
mii_2_8139_m≠
[location])

1299 
	`RTL_W16
 (
mii_2_8139_m≠
[
loˇti⁄
], 
vÆue
);

1303 #ifde‡
CONFIG_8139TOO_8129


1304 
	`mdio_sync
 (
iﬂddr
);

1307 
i
 = 31; i >= 0; i--) {

1308 
d©avÆ
 =

1309 (
mii_cmd
 & (1 << 
i
)Ë? 
MDIO_WRITE1
 : 
MDIO_WRITE0
;

1310 
	`RTL_W8
 (
C⁄fig4
, 
d©avÆ
);

1311 
	`mdio_dñay
 ();

1312 
	`RTL_W8
 (
C⁄fig4
, 
d©avÆ
 | 
MDIO_CLK
);

1313 
	`mdio_dñay
 ();

1316 
i
 = 2; i > 0; i--) {

1317 
	`RTL_W8
 (
C⁄fig4
, 0);

1318 
	`mdio_dñay
 ();

1319 
	`RTL_W8
 (
C⁄fig4
, 
MDIO_CLK
);

1320 
	`mdio_dñay
 ();

1323 
	}
}

1326 
	$πl8139_›í
 (
√t_devi˚
 *
dev
)

1328 
πl8139_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

1329 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

1330 c⁄° 
úq
 = 
ç
->
pci_dev
->irq;

1331 
ªtvÆ
;

1333 
ªtvÆ
 = 
	`ªque°_úq
(
úq
, 
πl8139_öãºu±
, 
IRQF_SHARED
, 
dev
->
«me
, dev);

1334 i‡(
ªtvÆ
)

1335  
ªtvÆ
;

1337 
ç
->
tx_bufs
 = 
	`dma_Æloc_cohîít
(&ç->
pci_dev
->
dev
, 
TX_BUF_TOT_LEN
,

1338 &
ç
->
tx_bufs_dma
, 
GFP_KERNEL
);

1339 
ç
->
rx_rög
 = 
	`dma_Æloc_cohîít
(&ç->
pci_dev
->
dev
, 
RX_BUF_TOT_LEN
,

1340 &
ç
->
rx_rög_dma
, 
GFP_KERNEL
);

1341 i‡(
ç
->
tx_bufs
 =
NULL
 ||Åp->
rx_rög
 == NULL) {

1342 
	`‰ì_úq
(
úq
, 
dev
);

1344 i‡(
ç
->
tx_bufs
)

1345 
	`dma_‰ì_cohîít
(&
ç
->
pci_dev
->
dev
, 
TX_BUF_TOT_LEN
,

1346 
ç
->
tx_bufs
,Åp->
tx_bufs_dma
);

1347 i‡(
ç
->
rx_rög
)

1348 
	`dma_‰ì_cohîít
(&
ç
->
pci_dev
->
dev
, 
RX_BUF_TOT_LEN
,

1349 
ç
->
rx_rög
,Åp->
rx_rög_dma
);

1351  -
ENOMEM
;

1355 
	`«pi_íabÀ
(&
ç
->
«pi
);

1357 
ç
->
mii
.
fuŒ_du∂ex
 =Åp->mii.
f‹˚_medü
;

1358 
ç
->
tx_Êag
 = (
TX_FIFO_THRESH
 << 11) & 0x003f0000;

1360 
	`πl8139_öô_rög
 (
dev
);

1361 
	`πl8139_hw_°¨t
 (
dev
);

1362 
	`√tif_°¨t_queue
 (
dev
);

1364 
	`√tif_dbg
(
ç
, 
ifup
, 
dev
,

1366 
__func__
,

1367 ()
	`pci_ªsour˚_°¨t
 (
ç
->
pci_dev
, 1),

1368 
úq
, 
	`RTL_R8
 (
MedüSètus
),

1369 
ç
->
mii
.
fuŒ_du∂ex
 ? "full" : "half");

1371 
	`πl8139_°¨t_thªad
(
ç
);

1374 
	}
}

1377 
	$πl_check_medü
 (
√t_devi˚
 *
dev
, 
öô_medü
)

1379 
πl8139_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

1381 i‡(
ç
->
phys
[0] >= 0) {

1382 
	`mii_check_medü
(&
ç
->
mii
, 
	`√tif_msg_lök
—p), 
öô_medü
);

1384 
	}
}

1387 
	$πl8139_hw_°¨t
 (
√t_devi˚
 *
dev
)

1389 
πl8139_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

1390 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

1391 
u32
 
i
;

1392 
u8
 
tmp
;

1395 i‡(
πl_chù_öfo
[
ç
->
chù£t
].
Êags
 & 
HasH…Clk
)

1396 
	`RTL_W8
 (
H…Clk
, 'R');

1398 
	`πl8139_chù_ª£t
 (
iﬂddr
);

1401 
	`RTL_W8_F
 (
Cfg9346
, 
Cfg9346_U∆ock
);

1403 
	`RTL_W32_F
 (
MAC0
 + 0, 
	`À32_to_˝u
 (*(
__À32
 *Ë(
dev
->
dev_addr
 + 0)));

1404 
	`RTL_W32_F
 (
MAC0
 + 4, 
	`À16_to_˝u
 (*(
__À16
 *Ë(
dev
->
dev_addr
 + 4)));

1406 
ç
->
cur_rx
 = 0;

1409 
	`RTL_W32_F
 (
RxBuf
, 
ç
->
rx_rög_dma
);

1412 
	`RTL_W8
 (
ChùCmd
, 
CmdRxEnb
 | 
CmdTxEnb
);

1414 
ç
->
rx_c⁄fig
 = 
πl8139_rx_c⁄fig
 | 
Ac˚±Brﬂdˇ°
 | 
Ac˚±MyPhys
;

1415 
	`RTL_W32
 (
RxC⁄fig
, 
ç
->
rx_c⁄fig
);

1416 
	`RTL_W32
 (
TxC⁄fig
, 
πl8139_tx_c⁄fig
);

1418 
	`πl_check_medü
 (
dev
, 1);

1420 i‡(
ç
->
chù£t
 >
CH_8139B
) {

1424 
	`RTL_W8
 (
C⁄fig3
, 
	`RTL_R8
 (C⁄fig3Ë& ~
Cfg3_Magic
);

1427 
	`√tdev_dbg
(
dev
, "init bufferáddresses\n");

1430 
	`RTL_W8
 (
Cfg9346
, 
Cfg9346_Lock
);

1433 
i
 = 0; i < 
NUM_TX_DESC
; i++)

1434 
	`RTL_W32_F
 (
TxAddr0
 + (
i
 * 4), 
ç
->
tx_bufs_dma
 + (ç->
tx_buf
[i] -Åp->
tx_bufs
));

1436 
	`RTL_W32
 (
RxMis£d
, 0);

1438 
	`πl8139_£t_rx_mode
 (
dev
);

1441 
	`RTL_W16
 (
Mu…iI¡r
, 
	`RTL_R16
 (Mu…iI¡rË& 
Mu…iI¡rCÀ¨
);

1444 
tmp
 = 
	`RTL_R8
 (
ChùCmd
);

1445 i‡((!(
tmp
 & 
CmdRxEnb
)Ë|| (!—m∞& 
CmdTxEnb
)))

1446 
	`RTL_W8
 (
ChùCmd
, 
CmdRxEnb
 | 
CmdTxEnb
);

1449 
	`RTL_W16
 (
I¡rMask
, 
πl8139_öå_mask
);

1450 
	}
}

1454 
	$πl8139_öô_rög
 (
√t_devi˚
 *
dev
)

1456 
πl8139_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

1457 
i
;

1459 
ç
->
cur_rx
 = 0;

1460 
ç
->
cur_tx
 = 0;

1461 
ç
->
dúty_tx
 = 0;

1463 
i
 = 0; i < 
NUM_TX_DESC
; i++)

1464 
ç
->
tx_buf
[
i
] = &ç->
tx_bufs
[ò* 
TX_BUF_SIZE
];

1465 
	}
}

1469 
	g√xt_tick
 = 3 * 
HZ
;

1471 #i‚de‡
CONFIG_8139TOO_TUNE_TWISTER


1472 
ölöe
 
	$πl8139_tu√_twi°î
 (
√t_devi˚
 *
dev
,

1473 
πl8139_¥iv©e
 *
ç
Ë{
	}
}

1475 
	eTwi°îP¨amVÆs
 {

1476 
	mPARA78_deÁu…
 = 0x78fa8388,

1477 
	mPARA7c_deÁu…
 = 0xcb38de43,

1478 
	mPARA7c_xxx
 = 0xcb38de43,

1481 c⁄° 
	g∑øm
[4][4] = {

1488 
	$πl8139_tu√_twi°î
 (
√t_devi˚
 *
dev
,

1489 
πl8139_¥iv©e
 *
ç
)

1491 
lökˇ£
;

1492 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

1498 
ç
->
twi°õ
) {

1500 i‡(
	`RTL_R16
 (
CSCR
Ë& 
CSCR_LökOKBô
) {

1502 
	`RTL_W16
 (
CSCR
, 
CSCR_LökDownOffCmd
);

1503 
ç
->
twi°õ
 = 2;

1504 
√xt_tick
 = 
HZ
 / 10;

1507 
	`RTL_W16
 (
CSCR
, 
CSCR_LökDownCmd
);

1508 
	`RTL_W32
 (
FIFOTMS
, 0x20);

1509 
	`RTL_W32
 (
PARA78
, 
PARA78_deÁu…
);

1510 
	`RTL_W32
 (
PARA7c
, 
PARA7c_deÁu…
);

1511 
ç
->
twi°õ
 = 0;

1516 
lökˇ£
 = 
	`RTL_R16
 (
CSCR
Ë& 
CSCR_LökSètusBôs
;

1517 i‡(
lökˇ£
 == 0x7000)

1518 
ç
->
twi°_row
 = 3;

1519 i‡(
lökˇ£
 == 0x3000)

1520 
ç
->
twi°_row
 = 2;

1521 i‡(
lökˇ£
 == 0x1000)

1522 
ç
->
twi°_row
 = 1;

1524 
ç
->
twi°_row
 = 0;

1525 
ç
->
twi°_cﬁ
 = 0;

1526 
ç
->
twi°õ
 = 3;

1527 
√xt_tick
 = 
HZ
 / 10;

1531 i‡(
ç
->
twi°_cﬁ
 == 0)

1532 
	`RTL_W16
 (
FIFOTMS
, 0);

1533 
	`RTL_W32
 (
PARA7c
, 
∑øm
[(Ë
ç
->
twi°_row
]

1534 [(Ë
ç
->
twi°_cﬁ
]);

1535 
√xt_tick
 = 
HZ
 / 10;

1536 i‡(++
ç
->
twi°_cﬁ
 >= 4) {

1539 
ç
->
twi°õ
 =

1540 (
ç
->
twi°_row
 == 3) ? 4 : 0;

1545 i‡((
	`RTL_R16
 (
CSCR
) &

1546 
CSCR_LökSètusBôs
) == 0x7000) {

1547 
ç
->
twi°õ
 = 0;

1550 
	`RTL_W32
 (
PARA7c
, 0xfb38de03);

1551 
ç
->
twi°õ
 = 5;

1552 
√xt_tick
 = 
HZ
 / 10;

1557 
	`RTL_W32
 (
FIFOTMS
, 0x20);

1558 
	`RTL_W32
 (
PARA78
, 
PARA78_deÁu…
);

1559 
	`RTL_W32
 (
PARA7c
, 
PARA7c_deÁu…
);

1560 
	`RTL_W32
 (
FIFOTMS
, 0x00);

1561 
ç
->
twi°_row
 = 2;

1562 
ç
->
twi°_cﬁ
 = 0;

1563 
ç
->
twi°õ
 = 3;

1564 
√xt_tick
 = 
HZ
 / 10;

1571 
	}
}

1574 
ölöe
 
	$πl8139_thªad_ôî
 (
√t_devi˚
 *
dev
,

1575 
πl8139_¥iv©e
 *
ç
,

1576 
__iomem
 *
iﬂddr
)

1578 
mii_Õa
;

1580 
mii_Õa
 = 
	`mdio_ªad
 (
dev
, 
ç
->
phys
[0], 
MII_LPA
);

1582 i‡(!
ç
->
mii
.
f‹˚_medü
 && 
mii_Õa
 != 0xffff) {

1583 
du∂ex
 = ((
mii_Õa
 & 
LPA_100FULL
) ||

1584 (
mii_Õa
 & 0x01C0) == 0x0040);

1585 i‡(
ç
->
mii
.
fuŒ_du∂ex
 !
du∂ex
) {

1586 
ç
->
mii
.
fuŒ_du∂ex
 = 
du∂ex
;

1588 i‡(
mii_Õa
) {

1589 
	`√tdev_öfo
(
dev
, "Setting %s-duplex based on MII #%dÜinkÖartnerábility of %04x\n",

1590 
ç
->
mii
.
fuŒ_du∂ex
 ? "full" : "half",

1591 
ç
->
phys
[0], 
mii_Õa
);

1593 
	`√tdev_öfo
(
dev
, "media is unconnected,Üink down, or incompatible connection\n");

1596 
	`RTL_W8
 (
Cfg9346
, 
Cfg9346_U∆ock
);

1597 
	`RTL_W8
 (
C⁄fig1
, 
ç
->
mii
.
fuŒ_du∂ex
 ? 0x60 : 0x20);

1598 
	`RTL_W8
 (
Cfg9346
, 
Cfg9346_Lock
);

1603 
√xt_tick
 = 
HZ
 * 60;

1605 
	`πl8139_tu√_twi°î
 (
dev
, 
ç
);

1607 
	`√tdev_dbg
(
dev
, "Media selectionÅick, LinkÖartner %04x\n",

1608 
	`RTL_R16
(
NWayLPAR
));

1609 
	`√tdev_dbg
(
dev
, "OtherÑegistersáre IntMask %04x IntStatus %04x\n",

1610 
	`RTL_R16
(
I¡rMask
), RTL_R16(
I¡rSètus
));

1611 
	`√tdev_dbg
(
dev
, "Chip config %02x %02x\n",

1612 
	`RTL_R8
(
C⁄fig0
), RTL_R8(
C⁄fig1
));

1613 
	}
}

1615 
	$πl8139_thªad
 (
w‹k_°ru˘
 *
w‹k
)

1617 
πl8139_¥iv©e
 *
ç
 =

1618 
	`c⁄èöî_of
(
w‹k
, 
πl8139_¥iv©e
, 
thªad
.work);

1619 
√t_devi˚
 *
dev
 = 
ç
->
mii
.dev;

1620 
thr_dñay
 = 
√xt_tick
;

1622 
	`π∆_lock
();

1624 i‡(!
	`√tif_ru¬ög
(
dev
))

1625 
out_u∆ock
;

1627 i‡(
ç
->
w©chdog_fúed
) {

1628 
ç
->
w©chdog_fúed
 = 0;

1629 
	`πl8139_tx_timeout_èsk
(
w‹k
);

1631 
	`πl8139_thªad_ôî
(
dev
, 
ç
,Åp->
mmio_addr
);

1633 i‡(
ç
->
have_thªad
)

1634 
	`scheduÀ_dñayed_w‹k
(&
ç
->
thªad
, 
thr_dñay
);

1635 
out_u∆ock
:

1636 
	`π∆_u∆ock
 ();

1637 
	}
}

1639 
	$πl8139_°¨t_thªad
(
πl8139_¥iv©e
 *
ç
)

1641 
ç
->
twi°õ
 = 0;

1642 i‡(
ç
->
chù£t
 =
CH_8139_K
)

1643 
ç
->
twi°õ
 = 1;

1644 i‡(
ç
->
drv_Êags
 & 
HAS_LNK_CHNG
)

1647 
ç
->
have_thªad
 = 1;

1648 
ç
->
w©chdog_fúed
 = 0;

1650 
	`scheduÀ_dñayed_w‹k
(&
ç
->
thªad
, 
√xt_tick
);

1651 
	}
}

1653 
ölöe
 
	$πl8139_tx_˛ór
 (
πl8139_¥iv©e
 *
ç
)

1655 
ç
->
cur_tx
 = 0;

1656 
ç
->
dúty_tx
 = 0;

1659 
	}
}

1661 
	$πl8139_tx_timeout_èsk
 (
w‹k_°ru˘
 *
w‹k
)

1663 
πl8139_¥iv©e
 *
ç
 =

1664 
	`c⁄èöî_of
(
w‹k
, 
πl8139_¥iv©e
, 
thªad
.work);

1665 
√t_devi˚
 *
dev
 = 
ç
->
mii
.dev;

1666 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

1667 
i
;

1668 
u8
 
tmp8
;

1670 
	`«pi_dißbÀ
(&
ç
->
«pi
);

1671 
	`√tif_°›_queue
(
dev
);

1672 
	`synchr⁄ize_sched
();

1674 
	`√tdev_dbg
(
dev
, "TransmitÅimeout, status %02x %04x %04x media %02x\n",

1675 
	`RTL_R8
(
ChùCmd
), 
	`RTL_R16
(
I¡rSètus
),

1676 
	`RTL_R16
(
I¡rMask
), 
	`RTL_R8
(
MedüSètus
));

1678 
	`√tdev_dbg
(
dev
, "Tx queue startÉntry %ld dirtyÉntry %ld\n",

1679 
ç
->
cur_tx
,Åp->
dúty_tx
);

1680 
i
 = 0; i < 
NUM_TX_DESC
; i++)

1681 
	`√tdev_dbg
(
dev
, "Tx descriptor %d is %08x%s\n",

1682 
i
, 
	`RTL_R32
(
TxSètus0
 + (i * 4)),

1683 
i
 =
ç
->
dúty_tx
 % 
NUM_TX_DESC
 ?

1686 
ç
->
x°©s
.
tx_timeouts
++;

1689 
tmp8
 = 
	`RTL_R8
 (
ChùCmd
);

1690 i‡(
tmp8
 & 
CmdTxEnb
)

1691 
	`RTL_W8
 (
ChùCmd
, 
CmdRxEnb
);

1693 
	`•ö_lock_bh
(&
ç
->
rx_lock
);

1695 
	`RTL_W16
 (
I¡rMask
, 0x0000);

1698 
	`•ö_lock_úq
(&
ç
->
lock
);

1699 
	`πl8139_tx_˛ór
 (
ç
);

1700 
	`•ö_u∆ock_úq
(&
ç
->
lock
);

1703 
	`«pi_íabÀ
(&
ç
->
«pi
);

1704 
	`πl8139_hw_°¨t
(
dev
);

1705 
	`√tif_wake_queue
(
dev
);

1707 
	`•ö_u∆ock_bh
(&
ç
->
rx_lock
);

1708 
	}
}

1710 
	$πl8139_tx_timeout
 (
√t_devi˚
 *
dev
)

1712 
πl8139_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

1714 
ç
->
w©chdog_fúed
 = 1;

1715 i‡(!
ç
->
have_thªad
) {

1716 
	`INIT_DELAYED_WORK
(&
ç
->
thªad
, 
πl8139_thªad
);

1717 
	`scheduÀ_dñayed_w‹k
(&
ç
->
thªad
, 
√xt_tick
);

1719 
	}
}

1721 
√tdev_tx_t
 
	$πl8139_°¨t_xmô
 (
sk_buff
 *
skb
,

1722 
√t_devi˚
 *
dev
)

1724 
πl8139_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

1725 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

1726 
íåy
;

1727 
Àn
 = 
skb
->len;

1728 
Êags
;

1731 
íåy
 = 
ç
->
cur_tx
 % 
NUM_TX_DESC
;

1734 i‡(
	`likñy
(
Àn
 < 
TX_BUF_SIZE
)) {

1735 i‡(
Àn
 < 
ETH_ZLEN
)

1736 
	`mem£t
(
ç
->
tx_buf
[
íåy
], 0, 
ETH_ZLEN
);

1737 
	`skb_c›y_™d_csum_dev
(
skb
, 
ç
->
tx_buf
[
íåy
]);

1738 
	`dev_k‰ì_skb_™y
(
skb
);

1740 
	`dev_k‰ì_skb_™y
(
skb
);

1741 
dev
->
°©s
.
tx_dr›≥d
++;

1742  
NETDEV_TX_OK
;

1745 
	`•ö_lock_úqßve
(&
ç
->
lock
, 
Êags
);

1751 
	`wmb
();

1752 
	`RTL_W32_F
 (
TxSètus0
 + (
íåy
 *  (
u32
)),

1753 
ç
->
tx_Êag
 | 
	`max
(
Àn
, ()
ETH_ZLEN
));

1755 
ç
->
cur_tx
++;

1757 i‡((
ç
->
cur_tx
 - 
NUM_TX_DESC
Ë=ç->
dúty_tx
)

1758 
	`√tif_°›_queue
 (
dev
);

1759 
	`•ö_u∆ock_úqª°‹e
(&
ç
->
lock
, 
Êags
);

1761 
	`√tif_dbg
(
ç
, 
tx_queued
, 
dev
, "Queued TxÖacket size %uÅo slot %d\n",

1762 
Àn
, 
íåy
);

1764  
NETDEV_TX_OK
;

1765 
	}
}

1768 
	$πl8139_tx_öãºu±
 (
√t_devi˚
 *
dev
,

1769 
πl8139_¥iv©e
 *
ç
,

1770 
__iomem
 *
iﬂddr
)

1772 
dúty_tx
, 
tx_À·
;

1774 
	`as£π
 (
dev
 !
NULL
);

1775 
	`as£π
 (
iﬂddr
 !
NULL
);

1777 
dúty_tx
 = 
ç
->dirty_tx;

1778 
tx_À·
 = 
ç
->
cur_tx
 - 
dúty_tx
;

1779 
tx_À·
 > 0) {

1780 
íåy
 = 
dúty_tx
 % 
NUM_TX_DESC
;

1781 
tx°©us
;

1783 
tx°©us
 = 
	`RTL_R32
 (
TxSètus0
 + (
íåy
 *  (
u32
)));

1785 i‡(!(
tx°©us
 & (
TxSètOK
 | 
TxUndîrun
 | 
TxAb‹ãd
)))

1789 i‡(
tx°©us
 & (
TxOutOfWödow
 | 
TxAb‹ãd
)) {

1791 
	`√tif_dbg
(
ç
, 
tx_îr
, 
dev
, "TransmitÉrror, Tx status %08x\n",

1792 
tx°©us
);

1793 
dev
->
°©s
.
tx_îr‹s
++;

1794 i‡(
tx°©us
 & 
TxAb‹ãd
) {

1795 
dev
->
°©s
.
tx_ab‹ãd_îr‹s
++;

1796 
	`RTL_W32
 (
TxC⁄fig
, 
TxCÀ¨Abt
);

1797 
	`RTL_W16
 (
I¡rSètus
, 
TxEº
);

1798 
	`wmb
();

1800 i‡(
tx°©us
 & 
TxC¨rõrLo°
)

1801 
dev
->
°©s
.
tx_ˇºõr_îr‹s
++;

1802 i‡(
tx°©us
 & 
TxOutOfWödow
)

1803 
dev
->
°©s
.
tx_wödow_îr‹s
++;

1805 i‡(
tx°©us
 & 
TxUndîrun
) {

1807 i‡(
ç
->
tx_Êag
 < 0x00300000)

1808 
ç
->
tx_Êag
 += 0x00020000;

1809 
dev
->
°©s
.
tx_fifo_îr‹s
++;

1811 
dev
->
°©s
.
cﬁlisi⁄s
 +(
tx°©us
 >> 24) & 15;

1812 
	`u64_°©s_upd©e_begö
(&
ç
->
tx_°©s
.
syn˝
);

1813 
ç
->
tx_°©s
.
∑ckës
++;

1814 
ç
->
tx_°©s
.
byãs
 +
tx°©us
 & 0x7ff;

1815 
	`u64_°©s_upd©e_íd
(&
ç
->
tx_°©s
.
syn˝
);

1818 
dúty_tx
++;

1819 
tx_À·
--;

1822 #i‚de‡
RTL8139_NDEBUG


1823 i‡(
ç
->
cur_tx
 - 
dúty_tx
 > 
NUM_TX_DESC
) {

1824 
	`√tdev_îr
(
dev
, "Out-of-sync dirtyÖointer, %ld vs. %ld\n",

1825 
dúty_tx
, 
ç
->
cur_tx
);

1826 
dúty_tx
 +
NUM_TX_DESC
;

1831 i‡(
ç
->
dúty_tx
 != dirty_tx) {

1832 
ç
->
dúty_tx
 = dirty_tx;

1833 
	`mb
();

1834 
	`√tif_wake_queue
 (
dev
);

1836 
	}
}

1840 
	$πl8139_rx_îr
 (
u32
 
rx_°©us
, 
√t_devi˚
 *
dev
,

1841 
πl8139_¥iv©e
 *
ç
, 
__iomem
 *
iﬂddr
)

1843 
u8
 
tmp8
;

1844 #ifde‡
CONFIG_8139_OLD_RX_RESET


1845 
tmp_w‹k
;

1848 
	`√tif_dbg
(
ç
, 
rx_îr
, 
dev
, "Ethernet frame hadÉrrors, status %08x\n",

1849 
rx_°©us
);

1850 
dev
->
°©s
.
rx_îr‹s
++;

1851 i‡(!(
rx_°©us
 & 
RxSètusOK
)) {

1852 i‡(
rx_°©us
 & 
RxTooL⁄g
) {

1853 
	`√tdev_dbg
(
dev
, "Oversized Ethernet frame, status %04x!\n",

1854 
rx_°©us
);

1857 i‡(
rx_°©us
 & (
RxBadSymbﬁ
 | 
RxBadAlign
))

1858 
dev
->
°©s
.
rx_‰ame_îr‹s
++;

1859 i‡(
rx_°©us
 & (
RxRu¡
 | 
RxTooL⁄g
))

1860 
dev
->
°©s
.
rx_Àngth_îr‹s
++;

1861 i‡(
rx_°©us
 & 
RxCRCEº
)

1862 
dev
->
°©s
.
rx_¸c_îr‹s
++;

1864 
ç
->
x°©s
.
rx_lo°_ö_rög
++;

1867 #i‚de‡
CONFIG_8139_OLD_RX_RESET


1868 
tmp8
 = 
	`RTL_R8
 (
ChùCmd
);

1869 
	`RTL_W8
 (
ChùCmd
, 
tmp8
 & ~
CmdRxEnb
);

1870 
	`RTL_W8
 (
ChùCmd
, 
tmp8
);

1871 
	`RTL_W32
 (
RxC⁄fig
, 
ç
->
rx_c⁄fig
);

1872 
ç
->
cur_rx
 = 0;

1877 
	`RTL_W8_F
 (
ChùCmd
, 
CmdTxEnb
);

1878 
tmp_w‹k
 = 200;

1879 --
tmp_w‹k
 > 0) {

1880 
	`udñay
(1);

1881 
tmp8
 = 
	`RTL_R8
 (
ChùCmd
);

1882 i‡(!(
tmp8
 & 
CmdRxEnb
))

1885 i‡(
tmp_w‹k
 <= 0)

1886 
	`√tdev_w¨n
(
dev
, "rx stop waitÅooÜong\n");

1888 
tmp_w‹k
 = 200;

1889 --
tmp_w‹k
 > 0) {

1890 
	`RTL_W8_F
 (
ChùCmd
, 
CmdRxEnb
 | 
CmdTxEnb
);

1891 
	`udñay
(1);

1892 
tmp8
 = 
	`RTL_R8
 (
ChùCmd
);

1893 i‡((
tmp8
 & 
CmdRxEnb
Ë&& (tmp8 & 
CmdTxEnb
))

1896 i‡(
tmp_w‹k
 <= 0)

1897 
	`√tdev_w¨n
(
dev
, "tx/rxÉnable waitÅooÜong\n");

1900 
	`RTL_W8_F
 (
Cfg9346
, 
Cfg9346_U∆ock
);

1902 
	`RTL_W8
 (
ChùCmd
, 
CmdRxEnb
 | 
CmdTxEnb
);

1904 
ç
->
rx_c⁄fig
 = 
πl8139_rx_c⁄fig
 | 
Ac˚±Brﬂdˇ°
 | 
Ac˚±MyPhys
;

1905 
	`RTL_W32
 (
RxC⁄fig
, 
ç
->
rx_c⁄fig
);

1906 
ç
->
cur_rx
 = 0;

1908 
	`√tdev_dbg
(
dev
, "init bufferáddresses\n");

1911 
	`RTL_W8
 (
Cfg9346
, 
Cfg9346_Lock
);

1914 
	`RTL_W32_F
 (
RxBuf
, 
ç
->
rx_rög_dma
);

1917 
	`__£t_rx_mode
 (
dev
);

1919 
	}
}

1921 #i‡
RX_BUF_IDX
 == 3

1922 
ölöe
 
	$wøp_c›y
(
sk_buff
 *
skb
, c⁄° *
rög
,

1923 
u32
 
off£t
, 
size
)

1925 
u32
 
À·
 = 
RX_BUF_LEN
 - 
off£t
;

1927 i‡(
size
 > 
À·
) {

1928 
	`skb_c›y_to_löór_d©a
(
skb
, 
rög
 + 
off£t
, 
À·
);

1929 
	`skb_c›y_to_löór_d©a_off£t
(
skb
, 
À·
, 
rög
, 
size
 -Üeft);

1931 
	`skb_c›y_to_löór_d©a
(
skb
, 
rög
 + 
off£t
, 
size
);

1932 
	}
}

1935 
	$πl8139_i§_ack
(
πl8139_¥iv©e
 *
ç
)

1937 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

1938 
u16
 
°©us
;

1940 
°©us
 = 
	`RTL_R16
 (
I¡rSètus
Ë& 
RxAckBôs
;

1943 i‡(
	`likñy
(
°©us
 != 0)) {

1944 i‡(
	`u∆ikñy
(
°©us
 & (
RxFIFOOvî
 | 
RxOvîÊow
))) {

1945 
ç
->
dev
->
°©s
.
rx_îr‹s
++;

1946 i‡(
°©us
 & 
RxFIFOOvî
)

1947 
ç
->
dev
->
°©s
.
rx_fifo_îr‹s
++;

1949 
	`RTL_W16_F
 (
I¡rSètus
, 
RxAckBôs
);

1951 
	}
}

1953 
	$πl8139_rx
(
√t_devi˚
 *
dev
, 
πl8139_¥iv©e
 *
ç
,

1954 
budgë
)

1956 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

1957 
ª˚ived
 = 0;

1958 *
rx_rög
 = 
ç
->rx_ring;

1959 
cur_rx
 = 
ç
->cur_rx;

1960 
rx_size
 = 0;

1962 
	`√tdev_dbg
(
dev
, "In %s(), current %04x BufAddr %04x, freeÅo %04x, Cmd %02x\n",

1963 
__func__
, (
u16
)
cur_rx
,

1964 
	`RTL_R16
(
RxBufAddr
), RTL_R16(
RxBufPå
), 
	`RTL_R8
(
ChùCmd
));

1966 
	`√tif_ru¬ög
(
dev
Ë&& 
ª˚ived
 < 
budgë
 &&

1967 (
	`RTL_R8
 (
ChùCmd
Ë& 
RxBufEm±y
) == 0) {

1968 
u32
 
rög_off£t
 = 
cur_rx
 % 
RX_BUF_LEN
;

1969 
u32
 
rx_°©us
;

1970 
pkt_size
;

1971 
sk_buff
 *
skb
;

1973 
	`rmb
();

1976 
rx_°©us
 = 
	`À32_to_˝u
 (*(
__À32
 *Ë(
rx_rög
 + 
rög_off£t
));

1977 
rx_size
 = 
rx_°©us
 >> 16;

1978 i‡(
	`likñy
(!(
dev
->
„©uªs
 & 
NETIF_F_RXFCS
)))

1979 
pkt_size
 = 
rx_size
 - 4;

1981 
pkt_size
 = 
rx_size
;

1983 
	`√tif_dbg
(
ç
, 
rx_°©us
, 
dev
, "%s() status %04x, size %04x, cur %04x\n",

1984 
__func__
, 
rx_°©us
, 
rx_size
, 
cur_rx
);

1985 #i‡
RTL8139_DEBUG
 > 2

1986 
	`¥öt_hex_dump
(
KERN_DEBUG
, "Frame contents: ",

1987 
DUMP_PREFIX_OFFSET
, 16, 1,

1988 &
rx_rög
[
rög_off£t
], 70, 
åue
);

1995 i‡(
	`u∆ikñy
(
rx_size
 == 0xfff0)) {

1996 i‡(!
ç
->
fifo_c›y_timeout
)

1997 
ç
->
fifo_c›y_timeout
 = 
jiffõs
 + 2;

1998 i‡(
	`time_a·î
(
jiffõs
, 
ç
->
fifo_c›y_timeout
)) {

1999 
	`√tdev_dbg
(
dev
, "hung FIFO. Reset\n");

2000 
rx_size
 = 0;

2001 
no_óæy_rx
;

2003 
	`√tif_dbg
(
ç
, 
öå
, 
dev
, "fifo copy inÖrogress\n");

2004 
ç
->
x°©s
.
óæy_rx
++;

2008 
no_óæy_rx
:

2009 
ç
->
fifo_c›y_timeout
 = 0;

2016 i‡(
	`u∆ikñy
((
rx_size
 > (
MAX_ETH_FRAME_SIZE
+4)) ||

2017 (
rx_size
 < 8) ||

2018 (!(
rx_°©us
 & 
RxSètusOK
)))) {

2019 i‡((
dev
->
„©uªs
 & 
NETIF_F_RXALL
) &&

2020 (
rx_size
 <(
MAX_ETH_FRAME_SIZE
 + 4)) &&

2021 (
rx_size
 >= 8) &&

2022 (!(
rx_°©us
 & 
RxSètusOK
))) {

2027 
dev
->
°©s
.
rx_îr‹s
++;

2028 i‡(
rx_°©us
 & 
RxCRCEº
) {

2029 
dev
->
°©s
.
rx_¸c_îr‹s
++;

2030 
kìp_pkt
;

2032 i‡(
rx_°©us
 & 
RxRu¡
) {

2033 
dev
->
°©s
.
rx_Àngth_îr‹s
++;

2034 
kìp_pkt
;

2037 
	`πl8139_rx_îr
 (
rx_°©us
, 
dev
, 
ç
, 
iﬂddr
);

2038 
ª˚ived
 = -1;

2039 
out
;

2042 
kìp_pkt
:

2046 
skb
 = 
	`«pi_Æloc_skb
(&
ç
->
«pi
, 
pkt_size
);

2047 i‡(
	`likñy
(
skb
)) {

2048 #i‡
RX_BUF_IDX
 == 3

2049 
	`wøp_c›y
(
skb
, 
rx_rög
, 
rög_off£t
+4, 
pkt_size
);

2051 
	`skb_c›y_to_löór_d©a
 (
skb
, &
rx_rög
[
rög_off£t
 + 4], 
pkt_size
);

2053 
	`skb_put
 (
skb
, 
pkt_size
);

2055 
skb
->
¥Ÿocﬁ
 = 
	`ëh_ty≥_å™s
 (skb, 
dev
);

2057 
	`u64_°©s_upd©e_begö
(&
ç
->
rx_°©s
.
syn˝
);

2058 
ç
->
rx_°©s
.
∑ckës
++;

2059 
ç
->
rx_°©s
.
byãs
 +
pkt_size
;

2060 
	`u64_°©s_upd©e_íd
(&
ç
->
rx_°©s
.
syn˝
);

2062 
	`√tif_ª˚ive_skb
 (
skb
);

2064 
dev
->
°©s
.
rx_dr›≥d
++;

2066 
ª˚ived
++;

2068 
cur_rx
 = (cur_rx + 
rx_size
 + 4 + 3) & ~3;

2069 
	`RTL_W16
 (
RxBufPå
, (
u16
Ë(
cur_rx
 - 16));

2071 
	`πl8139_i§_ack
(
ç
);

2074 i‡(
	`u∆ikñy
(!
ª˚ived
 || 
rx_size
 == 0xfff0))

2075 
	`πl8139_i§_ack
(
ç
);

2077 
	`√tdev_dbg
(
dev
, "Done %s(), current %04x BufAddr %04x, freeÅo %04x, Cmd %02x\n",

2078 
__func__
, 
cur_rx
,

2079 
	`RTL_R16
(
RxBufAddr
), RTL_R16(
RxBufPå
), 
	`RTL_R8
(
ChùCmd
));

2081 
ç
->
cur_rx
 = cur_rx;

2087 i‡(
ç
->
fifo_c›y_timeout
)

2088 
ª˚ived
 = 
budgë
;

2090 
out
:

2091  
ª˚ived
;

2092 
	}
}

2095 
	$πl8139_weúd_öãºu±
 (
√t_devi˚
 *
dev
,

2096 
πl8139_¥iv©e
 *
ç
,

2097 
__iomem
 *
iﬂddr
,

2098 
°©us
, 
lök_ch™ged
)

2100 
	`√tdev_dbg
(
dev
, "Abn‹mÆ i¡îru±, sètu†%08x\n", 
°©us
);

2102 
	`as£π
 (
dev
 !
NULL
);

2103 
	`as£π
 (
ç
 !
NULL
);

2104 
	`as£π
 (
iﬂddr
 !
NULL
);

2107 
dev
->
°©s
.
rx_mis£d_îr‹s
 +
	`RTL_R32
 (
RxMis£d
);

2108 
	`RTL_W32
 (
RxMis£d
, 0);

2110 i‡((
°©us
 & 
RxUndîrun
Ë&& 
lök_ch™ged
 &&

2111 (
ç
->
drv_Êags
 & 
HAS_LNK_CHNG
)) {

2112 
	`πl_check_medü
(
dev
, 0);

2113 
°©us
 &~
RxUndîrun
;

2116 i‡(
°©us
 & (
RxUndîrun
 | 
RxEº
))

2117 
dev
->
°©s
.
rx_îr‹s
++;

2119 i‡(
°©us
 & 
PCSTimeout
)

2120 
dev
->
°©s
.
rx_Àngth_îr‹s
++;

2121 i‡(
°©us
 & 
RxUndîrun
)

2122 
dev
->
°©s
.
rx_fifo_îr‹s
++;

2123 i‡(
°©us
 & 
PCIEº
) {

2124 
u16
 
pci_cmd_°©us
;

2125 
	`pci_ªad_c⁄fig_w‹d
 (
ç
->
pci_dev
, 
PCI_STATUS
, &
pci_cmd_°©us
);

2126 
	`pci_wrôe_c⁄fig_w‹d
 (
ç
->
pci_dev
, 
PCI_STATUS
, 
pci_cmd_°©us
);

2128 
	`√tdev_îr
(
dev
, "PCI Bu†îr‹ %04x\n", 
pci_cmd_°©us
);

2130 
	}
}

2132 
	$πl8139_pﬁl
(
«pi_°ru˘
 *
«pi
, 
budgë
)

2134 
πl8139_¥iv©e
 *
ç
 = 
	`c⁄èöî_of
(
«pi
, rtl8139_private,Çapi);

2135 
√t_devi˚
 *
dev
 = 
ç
->dev;

2136 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

2137 
w‹k_d⁄e
;

2139 
	`•ö_lock
(&
ç
->
rx_lock
);

2140 
w‹k_d⁄e
 = 0;

2141 i‡(
	`likñy
(
	`RTL_R16
(
I¡rSètus
Ë& 
RxAckBôs
))

2142 
w‹k_d⁄e
 +
	`πl8139_rx
(
dev
, 
ç
, 
budgë
);

2144 i‡(
w‹k_d⁄e
 < 
budgë
) {

2145 
Êags
;

2150 
	`•ö_lock_úqßve
(&
ç
->
lock
, 
Êags
);

2151 
	`__«pi_com∂ëe
(
«pi
);

2152 
	`RTL_W16_F
(
I¡rMask
, 
πl8139_öå_mask
);

2153 
	`•ö_u∆ock_úqª°‹e
(&
ç
->
lock
, 
Êags
);

2155 
	`•ö_u∆ock
(&
ç
->
rx_lock
);

2157  
w‹k_d⁄e
;

2158 
	}
}

2162 
úqªtu∫_t
 
	$πl8139_öãºu±
 (
úq
, *
dev_ö°™˚
)

2164 
√t_devi˚
 *
dev
 = (√t_devi˚ *Ë
dev_ö°™˚
;

2165 
πl8139_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

2166 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

2167 
u16
 
°©us
, 
ack°©
;

2168 
lök_ch™ged
 = 0;

2169 
h™dÀd
 = 0;

2171 
	`•ö_lock
 (&
ç
->
lock
);

2172 
°©us
 = 
	`RTL_R16
 (
I¡rSètus
);

2175 i‡(
	`u∆ikñy
((
°©us
 & 
πl8139_öå_mask
) == 0))

2176 
out
;

2178 
h™dÀd
 = 1;

2181 i‡(
	`u∆ikñy
(
°©us
 == 0xFFFF))

2182 
out
;

2185 i‡(
	`u∆ikñy
(!
	`√tif_ru¬ög
(
dev
))) {

2186 
	`RTL_W16
 (
I¡rMask
, 0);

2187 
out
;

2192 i‡(
	`u∆ikñy
(
°©us
 & 
RxUndîrun
))

2193 
lök_ch™ged
 = 
	`RTL_R16
 (
CSCR
Ë& 
CSCR_LökCh™geBô
;

2195 
ack°©
 = 
°©us
 & ~(
RxAckBôs
 | 
TxEº
);

2196 i‡(
ack°©
)

2197 
	`RTL_W16
 (
I¡rSètus
, 
ack°©
);

2201 i‡(
°©us
 & 
RxAckBôs
){

2202 i‡(
	`«pi_scheduÀ_¥ï
(&
ç
->
«pi
)) {

2203 
	`RTL_W16_F
 (
I¡rMask
, 
πl8139_n‹x_öå_mask
);

2204 
	`__«pi_scheduÀ
(&
ç
->
«pi
);

2209 i‡(
	`u∆ikñy
(
°©us
 & (
PCIEº
 | 
PCSTimeout
 | 
RxUndîrun
 | 
RxEº
)))

2210 
	`πl8139_weúd_öãºu±
 (
dev
, 
ç
, 
iﬂddr
,

2211 
°©us
, 
lök_ch™ged
);

2213 i‡(
°©us
 & (
TxOK
 | 
TxEº
)) {

2214 
	`πl8139_tx_öãºu±
 (
dev
, 
ç
, 
iﬂddr
);

2215 i‡(
°©us
 & 
TxEº
)

2216 
	`RTL_W16
 (
I¡rSètus
, 
TxEº
);

2218 
out
:

2219 
	`•ö_u∆ock
 (&
ç
->
lock
);

2221 
	`√tdev_dbg
(
dev
, "exiting interrupt, intr_status=%#4.4x\n",

2222 
	`RTL_R16
(
I¡rSètus
));

2223  
	`IRQ_RETVAL
(
h™dÀd
);

2224 
	}
}

2226 #ifde‡
CONFIG_NET_POLL_CONTROLLER


2231 
	$πl8139_pﬁl_c⁄åﬁÀr
(
√t_devi˚
 *
dev
)

2233 
πl8139_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

2234 c⁄° 
úq
 = 
ç
->
pci_dev
->irq;

2236 
	`dißbÀ_úq
(
úq
);

2237 
	`πl8139_öãºu±
(
úq
, 
dev
);

2238 
	`íabÀ_úq
(
úq
);

2239 
	}
}

2242 
	$πl8139_£t_mac_addªss
(
√t_devi˚
 *
dev
, *
p
)

2244 
πl8139_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

2245 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

2246 
sockaddr
 *
addr
 = 
p
;

2248 i‡(!
	`is_vÆid_ëhî_addr
(
addr
->
ß_d©a
))

2249  -
EADDRNOTAVAIL
;

2251 
	`mem˝y
(
dev
->
dev_addr
, 
addr
->
ß_d©a
, dev->
addr_Àn
);

2253 
	`•ö_lock_úq
(&
ç
->
lock
);

2255 
	`RTL_W8_F
(
Cfg9346
, 
Cfg9346_U∆ock
);

2256 
	`RTL_W32_F
(
MAC0
 + 0, 
	`˝u_to_À32
 (*(
u32
 *Ë(
dev
->
dev_addr
 + 0)));

2257 
	`RTL_W32_F
(
MAC0
 + 4, 
	`˝u_to_À32
 (*(
u32
 *Ë(
dev
->
dev_addr
 + 4)));

2258 
	`RTL_W8_F
(
Cfg9346
, 
Cfg9346_Lock
);

2260 
	`•ö_u∆ock_úq
(&
ç
->
lock
);

2263 
	}
}

2265 
	$πl8139_˛o£
 (
√t_devi˚
 *
dev
)

2267 
πl8139_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

2268 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

2269 
Êags
;

2271 
	`√tif_°›_queue
(
dev
);

2272 
	`«pi_dißbÀ
(&
ç
->
«pi
);

2274 
	`√tif_dbg
(
ç
, 
ifdown
, 
dev
, "Shutting downÉthercard, status was 0x%04x\n",

2275 
	`RTL_R16
(
I¡rSètus
));

2277 
	`•ö_lock_úqßve
 (&
ç
->
lock
, 
Êags
);

2280 
	`RTL_W8
 (
ChùCmd
, 0);

2283 
	`RTL_W16
 (
I¡rMask
, 0);

2286 
dev
->
°©s
.
rx_mis£d_îr‹s
 +
	`RTL_R32
 (
RxMis£d
);

2287 
	`RTL_W32
 (
RxMis£d
, 0);

2289 
	`•ö_u∆ock_úqª°‹e
 (&
ç
->
lock
, 
Êags
);

2291 
	`‰ì_úq
(
ç
->
pci_dev
->
úq
, 
dev
);

2293 
	`πl8139_tx_˛ór
 (
ç
);

2295 
	`dma_‰ì_cohîít
(&
ç
->
pci_dev
->
dev
, 
RX_BUF_TOT_LEN
,

2296 
ç
->
rx_rög
,Åp->
rx_rög_dma
);

2297 
	`dma_‰ì_cohîít
(&
ç
->
pci_dev
->
dev
, 
TX_BUF_TOT_LEN
,

2298 
ç
->
tx_bufs
,Åp->
tx_bufs_dma
);

2299 
ç
->
rx_rög
 = 
NULL
;

2300 
ç
->
tx_bufs
 = 
NULL
;

2303 
	`RTL_W8
 (
Cfg9346
, 
Cfg9346_U∆ock
);

2305 i‡(
πl_chù_öfo
[
ç
->
chù£t
].
Êags
 & 
HasH…Clk
)

2306 
	`RTL_W8
 (
H…Clk
, 'H');

2309 
	}
}

2315 
	$πl8139_gë_wﬁ
(
√t_devi˚
 *
dev
, 
ëhtoﬁ_wﬁöfo
 *
wﬁ
)

2317 
πl8139_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

2318 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

2320 
	`•ö_lock_úq
(&
ç
->
lock
);

2321 i‡(
πl_chù_öfo
[
ç
->
chù£t
].
Êags
 & 
HasLWake
) {

2322 
u8
 
cfg3
 = 
	`RTL_R8
 (
C⁄fig3
);

2323 
u8
 
cfg5
 = 
	`RTL_R8
 (
C⁄fig5
);

2325 
wﬁ
->
suµ‹ãd
 = 
WAKE_PHY
 | 
WAKE_MAGIC


2326 | 
WAKE_UCAST
 | 
WAKE_MCAST
 | 
WAKE_BCAST
;

2328 
wﬁ
->
wﬁ›ts
 = 0;

2329 i‡(
cfg3
 & 
Cfg3_LökUp
)

2330 
wﬁ
->
wﬁ›ts
 |
WAKE_PHY
;

2331 i‡(
cfg3
 & 
Cfg3_Magic
)

2332 
wﬁ
->
wﬁ›ts
 |
WAKE_MAGIC
;

2335 i‡(
cfg5
 & 
Cfg5_UWF
)

2336 
wﬁ
->
wﬁ›ts
 |
WAKE_UCAST
;

2337 i‡(
cfg5
 & 
Cfg5_MWF
)

2338 
wﬁ
->
wﬁ›ts
 |
WAKE_MCAST
;

2339 i‡(
cfg5
 & 
Cfg5_BWF
)

2340 
wﬁ
->
wﬁ›ts
 |
WAKE_BCAST
;

2342 
	`•ö_u∆ock_úq
(&
ç
->
lock
);

2343 
	}
}

2349 
	$πl8139_£t_wﬁ
(
√t_devi˚
 *
dev
, 
ëhtoﬁ_wﬁöfo
 *
wﬁ
)

2351 
πl8139_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

2352 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

2353 
u32
 
suµ‹t
;

2354 
u8
 
cfg3
, 
cfg5
;

2356 
suµ‹t
 = ((
πl_chù_öfo
[
ç
->
chù£t
].
Êags
 & 
HasLWake
)

2357 ? (
WAKE_PHY
 | 
WAKE_MAGIC


2358 | 
WAKE_UCAST
 | 
WAKE_MCAST
 | 
WAKE_BCAST
)

2360 i‡(
wﬁ
->
wﬁ›ts
 & ~
suµ‹t
)

2361  -
EINVAL
;

2363 
	`•ö_lock_úq
(&
ç
->
lock
);

2364 
cfg3
 = 
	`RTL_R8
 (
C⁄fig3
Ë& ~(
Cfg3_LökUp
 | 
Cfg3_Magic
);

2365 i‡(
wﬁ
->
wﬁ›ts
 & 
WAKE_PHY
)

2366 
cfg3
 |
Cfg3_LökUp
;

2367 i‡(
wﬁ
->
wﬁ›ts
 & 
WAKE_MAGIC
)

2368 
cfg3
 |
Cfg3_Magic
;

2369 
	`RTL_W8
 (
Cfg9346
, 
Cfg9346_U∆ock
);

2370 
	`RTL_W8
 (
C⁄fig3
, 
cfg3
);

2371 
	`RTL_W8
 (
Cfg9346
, 
Cfg9346_Lock
);

2373 
cfg5
 = 
	`RTL_R8
 (
C⁄fig5
Ë& ~(
Cfg5_UWF
 | 
Cfg5_MWF
 | 
Cfg5_BWF
);

2377 i‡(
wﬁ
->
wﬁ›ts
 & 
WAKE_UCAST
)

2378 
cfg5
 |
Cfg5_UWF
;

2379 i‡(
wﬁ
->
wﬁ›ts
 & 
WAKE_MCAST
)

2380 
cfg5
 |
Cfg5_MWF
;

2381 i‡(
wﬁ
->
wﬁ›ts
 & 
WAKE_BCAST
)

2382 
cfg5
 |
Cfg5_BWF
;

2383 
	`RTL_W8
 (
C⁄fig5
, 
cfg5
);

2384 
	`•ö_u∆ock_úq
(&
ç
->
lock
);

2387 
	}
}

2389 
	$πl8139_gë_drvöfo
(
√t_devi˚
 *
dev
, 
ëhtoﬁ_drvöfo
 *
öfo
)

2391 
πl8139_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

2392 
	`°æ˝y
(
öfo
->
drivî
, 
DRV_NAME
, (info->driver));

2393 
	`°æ˝y
(
öfo
->
vîsi⁄
, 
DRV_VERSION
, (info->version));

2394 
	`°æ˝y
(
öfo
->
bus_öfo
, 
	`pci_«me
(
ç
->
pci_dev
), (info->bus_info));

2395 
	}
}

2397 
	$πl8139_gë_£âögs
(
√t_devi˚
 *
dev
, 
ëhtoﬁ_cmd
 *
cmd
)

2399 
πl8139_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

2400 
	`•ö_lock_úq
(&
ç
->
lock
);

2401 
	`mii_ëhtoﬁ_g£t
(&
ç
->
mii
, 
cmd
);

2402 
	`•ö_u∆ock_úq
(&
ç
->
lock
);

2404 
	}
}

2406 
	$πl8139_£t_£âögs
(
√t_devi˚
 *
dev
, 
ëhtoﬁ_cmd
 *
cmd
)

2408 
πl8139_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

2409 
rc
;

2410 
	`•ö_lock_úq
(&
ç
->
lock
);

2411 
rc
 = 
	`mii_ëhtoﬁ_s£t
(&
ç
->
mii
, 
cmd
);

2412 
	`•ö_u∆ock_úq
(&
ç
->
lock
);

2413  
rc
;

2414 
	}
}

2416 
	$πl8139_nway_ª£t
(
√t_devi˚
 *
dev
)

2418 
πl8139_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

2419  
	`mii_nway_ª°¨t
(&
ç
->
mii
);

2420 
	}
}

2422 
u32
 
	$πl8139_gë_lök
(
√t_devi˚
 *
dev
)

2424 
πl8139_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

2425  
	`mii_lök_ok
(&
ç
->
mii
);

2426 
	}
}

2428 
u32
 
	$πl8139_gë_msgÀvñ
(
√t_devi˚
 *
dev
)

2430 
πl8139_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

2431  
ç
->
msg_íabÀ
;

2432 
	}
}

2434 
	$πl8139_£t_msgÀvñ
(
√t_devi˚
 *
dev
, 
u32
 
d©um
)

2436 
πl8139_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

2437 
ç
->
msg_íabÀ
 = 
d©um
;

2438 
	}
}

2440 
	$πl8139_gë_ªgs_Àn
(
√t_devi˚
 *
dev
)

2442 
πl8139_¥iv©e
 *
ç
;

2444 i‡(
u£_io
)

2446 
ç
 = 
	`√tdev_¥iv
(
dev
);

2447  
ç
->
ªgs_Àn
;

2448 
	}
}

2450 
	$πl8139_gë_ªgs
(
√t_devi˚
 *
dev
, 
ëhtoﬁ_ªgs
 *
ªgs
, *
ªgbuf
)

2452 
πl8139_¥iv©e
 *
ç
;

2455 i‡(
u£_io
)

2457 
ç
 = 
	`√tdev_¥iv
(
dev
);

2459 
ªgs
->
vîsi⁄
 = 
RTL_REGS_VER
;

2461 
	`•ö_lock_úq
(&
ç
->
lock
);

2462 
	`mem˝y_‰omio
(
ªgbuf
, 
ç
->
mmio_addr
, 
ªgs
->
Àn
);

2463 
	`•ö_u∆ock_úq
(&
ç
->
lock
);

2464 
	}
}

2466 
	$πl8139_gë_s£t_cou¡
(
√t_devi˚
 *
dev
, 
s£t
)

2468 
s£t
) {

2469 
ETH_SS_STATS
:

2470  
RTL_NUM_STATS
;

2472  -
EOPNOTSUPP
;

2474 
	}
}

2476 
	$πl8139_gë_ëhtoﬁ_°©s
(
√t_devi˚
 *
dev
, 
ëhtoﬁ_°©s
 *
°©s
, 
u64
 *
d©a
)

2478 
πl8139_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

2480 
d©a
[0] = 
ç
->
x°©s
.
óæy_rx
;

2481 
d©a
[1] = 
ç
->
x°©s
.
tx_buf_m≠≥d
;

2482 
d©a
[2] = 
ç
->
x°©s
.
tx_timeouts
;

2483 
d©a
[3] = 
ç
->
x°©s
.
rx_lo°_ö_rög
;

2484 
	}
}

2486 
	$πl8139_gë_°rögs
(
√t_devi˚
 *
dev
, 
u32
 
°rög£t
, 
u8
 *
d©a
)

2488 
	`mem˝y
(
d©a
, 
ëhtoﬁ_°©s_keys
, (ethtool_stats_keys));

2489 
	}
}

2491 c⁄° 
ëhtoﬁ_›s
 
	gπl8139_ëhtoﬁ_›s
 = {

2492 .
gë_drvöfo
 = 
πl8139_gë_drvöfo
,

2493 .
	ggë_£âögs
 = 
πl8139_gë_£âögs
,

2494 .
	g£t_£âögs
 = 
πl8139_£t_£âögs
,

2495 .
	ggë_ªgs_Àn
 = 
πl8139_gë_ªgs_Àn
,

2496 .
	ggë_ªgs
 = 
πl8139_gë_ªgs
,

2497 .
	gnway_ª£t
 = 
πl8139_nway_ª£t
,

2498 .
	ggë_lök
 = 
πl8139_gë_lök
,

2499 .
	ggë_msgÀvñ
 = 
πl8139_gë_msgÀvñ
,

2500 .
	g£t_msgÀvñ
 = 
πl8139_£t_msgÀvñ
,

2501 .
	ggë_wﬁ
 = 
πl8139_gë_wﬁ
,

2502 .
	g£t_wﬁ
 = 
πl8139_£t_wﬁ
,

2503 .
	ggë_°rögs
 = 
πl8139_gë_°rögs
,

2504 .
	ggë_s£t_cou¡
 = 
πl8139_gë_s£t_cou¡
,

2505 .
	ggë_ëhtoﬁ_°©s
 = 
πl8139_gë_ëhtoﬁ_°©s
,

2508 
	$√tdev_io˘l
(
√t_devi˚
 *
dev
, 
i‰eq
 *
rq
, 
cmd
)

2510 
πl8139_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

2511 
rc
;

2513 i‡(!
	`√tif_ru¬ög
(
dev
))

2514  -
EINVAL
;

2516 
	`•ö_lock_úq
(&
ç
->
lock
);

2517 
rc
 = 
	`gíîic_mii_io˘l
(&
ç
->
mii
, 
	`if_mii
(
rq
), 
cmd
, 
NULL
);

2518 
	`•ö_u∆ock_úq
(&
ç
->
lock
);

2520  
rc
;

2521 
	}
}

2524 
π∆_lök_°©s64
 *

2525 
	$πl8139_gë_°©s64
(
√t_devi˚
 *
dev
, 
π∆_lök_°©s64
 *
°©s
)

2527 
πl8139_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

2528 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

2529 
Êags
;

2530 
°¨t
;

2532 i‡(
	`√tif_ru¬ög
(
dev
)) {

2533 
	`•ö_lock_úqßve
 (&
ç
->
lock
, 
Êags
);

2534 
dev
->
°©s
.
rx_mis£d_îr‹s
 +
	`RTL_R32
 (
RxMis£d
);

2535 
	`RTL_W32
 (
RxMis£d
, 0);

2536 
	`•ö_u∆ock_úqª°‹e
 (&
ç
->
lock
, 
Êags
);

2539 
	`√tdev_°©s_to_°©s64
(
°©s
, &
dev
->stats);

2542 
°¨t
 = 
	`u64_°©s_„tch_begö_úq
(&
ç
->
rx_°©s
.
syn˝
);

2543 
°©s
->
rx_∑ckës
 = 
ç
->
rx_°©s
.
∑ckës
;

2544 
°©s
->
rx_byãs
 = 
ç
->
rx_°©s
.
byãs
;

2545 } 
	`u64_°©s_„tch_ªåy_úq
(&
ç
->
rx_°©s
.
syn˝
, 
°¨t
));

2548 
°¨t
 = 
	`u64_°©s_„tch_begö_úq
(&
ç
->
tx_°©s
.
syn˝
);

2549 
°©s
->
tx_∑ckës
 = 
ç
->
tx_°©s
.
∑ckës
;

2550 
°©s
->
tx_byãs
 = 
ç
->
tx_°©s
.
byãs
;

2551 } 
	`u64_°©s_„tch_ªåy_úq
(&
ç
->
tx_°©s
.
syn˝
, 
°¨t
));

2553  
°©s
;

2554 
	}
}

2559 
	$__£t_rx_mode
 (
√t_devi˚
 *
dev
)

2561 
πl8139_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

2562 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

2563 
u32
 
mc_fûãr
[2];

2564 
rx_mode
;

2565 
u32
 
tmp
;

2567 
	`√tdev_dbg
(
dev
, "rtl8139_set_rx_mode(%04x) done -- Rx config %08x\n",

2568 
dev
->
Êags
, 
	`RTL_R32
(
RxC⁄fig
));

2571 i‡(
dev
->
Êags
 & 
IFF_PROMISC
) {

2572 
rx_mode
 =

2573 
Ac˚±Brﬂdˇ°
 | 
Ac˚±Mu…iˇ°
 | 
Ac˚±MyPhys
 |

2574 
Ac˚±AŒPhys
;

2575 
mc_fûãr
[1] = mc_filter[0] = 0xffffffff;

2576 } i‡((
	`√tdev_mc_cou¡
(
dev
Ë> 
mu…iˇ°_fûãr_limô
) ||

2577 (
dev
->
Êags
 & 
IFF_ALLMULTI
)) {

2579 
rx_mode
 = 
Ac˚±Brﬂdˇ°
 | 
Ac˚±Mu…iˇ°
 | 
Ac˚±MyPhys
;

2580 
mc_fûãr
[1] = mc_filter[0] = 0xffffffff;

2582 
√tdev_hw_addr
 *
ha
;

2583 
rx_mode
 = 
Ac˚±Brﬂdˇ°
 | 
Ac˚±MyPhys
;

2584 
mc_fûãr
[1] = mc_filter[0] = 0;

2585 
	`√tdev_f‹_óch_mc_addr
(
ha
, 
dev
) {

2586 
bô_ƒ
 = 
	`ëhî_¸c
(
ETH_ALEN
, 
ha
->
addr
) >> 26;

2588 
mc_fûãr
[
bô_ƒ
 >> 5] |= 1 << (bit_nr & 31);

2589 
rx_mode
 |
Ac˚±Mu…iˇ°
;

2593 i‡(
dev
->
„©uªs
 & 
NETIF_F_RXALL
)

2594 
rx_mode
 |(
Ac˚±Eº
 | 
Ac˚±Ru¡
);

2597 
tmp
 = 
πl8139_rx_c⁄fig
 | 
rx_mode
;

2598 i‡(
ç
->
rx_c⁄fig
 !
tmp
) {

2599 
	`RTL_W32_F
 (
RxC⁄fig
, 
tmp
);

2600 
ç
->
rx_c⁄fig
 = 
tmp
;

2602 
	`RTL_W32_F
 (
MAR0
 + 0, 
mc_fûãr
[0]);

2603 
	`RTL_W32_F
 (
MAR0
 + 4, 
mc_fûãr
[1]);

2604 
	}
}

2606 
	$πl8139_£t_rx_mode
 (
√t_devi˚
 *
dev
)

2608 
Êags
;

2609 
πl8139_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

2611 
	`•ö_lock_úqßve
 (&
ç
->
lock
, 
Êags
);

2612 
	`__£t_rx_mode
(
dev
);

2613 
	`•ö_u∆ock_úqª°‹e
 (&
ç
->
lock
, 
Êags
);

2614 
	}
}

2616 #ifde‡
CONFIG_PM


2618 
	$πl8139_su•íd
 (
pci_dev
 *
pdev
, 
pm_mesßge_t
 
°©e
)

2620 
√t_devi˚
 *
dev
 = 
	`pci_gë_drvd©a
 (
pdev
);

2621 
πl8139_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

2622 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

2623 
Êags
;

2625 
	`pci_ßve_°©e
 (
pdev
);

2627 i‡(!
	`√tif_ru¬ög
 (
dev
))

2630 
	`√tif_devi˚_dëach
 (
dev
);

2632 
	`•ö_lock_úqßve
 (&
ç
->
lock
, 
Êags
);

2635 
	`RTL_W16
 (
I¡rMask
, 0);

2636 
	`RTL_W8
 (
ChùCmd
, 0);

2639 
dev
->
°©s
.
rx_mis£d_îr‹s
 +
	`RTL_R32
 (
RxMis£d
);

2640 
	`RTL_W32
 (
RxMis£d
, 0);

2642 
	`•ö_u∆ock_úqª°‹e
 (&
ç
->
lock
, 
Êags
);

2644 
	`pci_£t_powî_°©e
 (
pdev
, 
PCI_D3hŸ
);

2647 
	}
}

2650 
	$πl8139_ªsume
 (
pci_dev
 *
pdev
)

2652 
√t_devi˚
 *
dev
 = 
	`pci_gë_drvd©a
 (
pdev
);

2654 
	`pci_ª°‹e_°©e
 (
pdev
);

2655 i‡(!
	`√tif_ru¬ög
 (
dev
))

2657 
	`pci_£t_powî_°©e
 (
pdev
, 
PCI_D0
);

2658 
	`πl8139_öô_rög
 (
dev
);

2659 
	`πl8139_hw_°¨t
 (
dev
);

2660 
	`√tif_devi˚_©èch
 (
dev
);

2662 
	}
}

2667 
pci_drivî
 
	gπl8139_pci_drivî
 = {

2668 .
«me
 = 
DRV_NAME
,

2669 .
	gid_èbÀ
 = 
πl8139_pci_tbl
,

2670 .
	g¥obe
 = 
πl8139_öô_⁄e
,

2671 .
	gªmove
 = 
πl8139_ªmove_⁄e
,

2672 #ifde‡
CONFIG_PM


2673 .
	gsu•íd
 = 
πl8139_su•íd
,

2674 .
	gªsume
 = 
πl8139_ªsume
,

2679 
__öô
 
	$πl8139_öô_moduÀ
 ()

2684 #ifde‡
MODULE


2685 
	`¥_öfo
(
RTL8139_DRIVER_NAME
 "\n");

2688  
	`pci_ªgi°î_drivî
(&
πl8139_pci_drivî
);

2689 
	}
}

2692 
__exô
 
	$πl8139_˛ónup_moduÀ
 ()

2694 
	`pci_uƒegi°î_drivî
 (&
πl8139_pci_drivî
);

2695 
	}
}

2698 
moduÀ_öô
(
πl8139_öô_moduÀ
);

2699 
moduÀ_exô
(
πl8139_˛ónup_moduÀ
);

	@atp.c

34 c⁄° 
	gvîsi⁄
[] =

40 
	gdebug
 = 1;

41 
	#√t_debug
 
debug


	)

44 
	gmax_öãºu±_w‹k
 = 15;

46 
	#NUM_UNITS
 2

	)

48 
	gio
[
NUM_UNITS
];

49 
	gúq
[
NUM_UNITS
];

50 
	gxcvr
[
NUM_UNITS
];

55 
	#TX_TIMEOUT
 (400*
HZ
/1000)

	)

125 
	~<löux/kî√l.h
>

126 
	~<löux/moduÀ.h
>

127 
	~<löux/ty≥s.h
>

128 
	~<löux/f˙é.h
>

129 
	~<löux/öãºu±.h
>

130 
	~<löux/i›‹t.h
>

131 
	~<löux/ö.h
>

132 
	~<löux/°rög.h
>

133 
	~<löux/î∫o.h
>

134 
	~<löux/öô.h
>

135 
	~<löux/¸c32.h
>

136 
	~<löux/√tdevi˚.h
>

137 
	~<löux/ëhîdevi˚.h
>

138 
	~<löux/skbuff.h
>

139 
	~<löux/•ölock.h
>

140 
	~<löux/dñay.h
>

141 
	~<löux/bô›s.h
>

143 
	~<asm/io.h
>

144 
	~<asm/dma.h
>

146 
	~"©p.h
"

148 
MODULE_AUTHOR
("Donald Becker <becker@scyld.com>");

149 
MODULE_DESCRIPTION
("RealTek RTL8002/8012ÖarallelÖort Ethernet driver");

150 
MODULE_LICENSE
("GPL");

152 
moduÀ_∑øm
(
max_öãºu±_w‹k
, , 0);

153 
moduÀ_∑øm
(
debug
, , 0);

154 
moduÀ_∑øm_¨øy
(
io
, , 
NULL
, 0);

155 
moduÀ_∑øm_¨øy
(
úq
, , 
NULL
, 0);

156 
moduÀ_∑øm_¨øy
(
xcvr
, , 
NULL
, 0);

157 
MODULE_PARM_DESC
(
max_öãºu±_w‹k
, "ATP maximumÉvents handledÖer interrupt");

158 
MODULE_PARM_DESC
(
debug
, "ATP debugÜevel (0-7)");

159 
MODULE_PARM_DESC
(
io
, "ATP I/O baseáddress(es)");

160 
MODULE_PARM_DESC
(
úq
, "ATP IRQÇumber(s)");

161 
MODULE_PARM_DESC
(
xcvr
, "ATPÅransceiver(s) (0=internal, 1=external)");

164 
	#ETHERCARD_TOTAL_SIZE
 3

	)

167 
	gmux_8012
[] = { 0xff, 0xf7, 0xff, 0xfb, 0xf3, 0xfb, 0xff, 0xf7,};

169 
	s√t_loˇl
 {

170 
•ölock_t
 
	mlock
;

171 
√t_devi˚
 *
	m√xt_moduÀ
;

172 
timî_li°
 
	mtimî
;

173 
	mœ°_rx_time
;

174 
	mßved_tx_size
;

175 
	mtx_unô_busy
:1;

176 
	mª_tx
,

177 
	maddr_mode
,

178 
	m∑c_˙t_ö_tx_buf
;

184 
	#TIMED_CHECKER
 (
HZ
/4)

	)

185 #ifde‡
TIMED_CHECKER


186 
	~<löux/timî.h
>

187 
©p_timed_checkî
(
ign‹ed
);

192 
©p_¥obe1
(
iﬂddr
);

193 
gë_node_ID
(
√t_devi˚
 *
dev
);

194 
ì¥om_›
(
iﬂddr
, 
cmd
);

195 
√t_›í
(
√t_devi˚
 *
dev
);

196 
h¨dw¨e_öô
(
√t_devi˚
 *
dev
);

197 
wrôe_∑ckë
(
iﬂddr
, 
Àngth
, *
∑ckë
, 
∑d
, 
mode
);

198 
åiggî_£nd
(
iﬂddr
, 
Àngth
);

199 
√tdev_tx_t
 
©p_£nd_∑ckë
(
sk_buff
 *
skb
,

200 
√t_devi˚
 *
dev
);

201 
úqªtu∫_t
 
©p_öãºu±
(
úq
, *
dev_id
);

202 
√t_rx
(
√t_devi˚
 *
dev
);

203 
ªad_block
(
iﬂddr
, 
Àngth
, *
buf„r
, 
d©a_mode
);

204 
√t_˛o£
(
√t_devi˚
 *
dev
);

205 
£t_rx_mode
(
√t_devi˚
 *
dev
);

206 
tx_timeout
(
√t_devi˚
 *
dev
);

210 
√t_devi˚
 *
	groŸ_©p_dev
;

220 
__öô
 
	$©p_öô
()

222 *
p‹t
, 
p‹ts
[] = {0x378, 0x278, 0x3bc, 0};

223 
ba£_addr
 = 
io
[0];

225 i‡(
ba£_addr
 > 0x1ff)

226  
	`©p_¥obe1
(
ba£_addr
);

227 i‡(
ba£_addr
 == 1)

228  -
ENXIO
;

230 
p‹t
 = 
p‹ts
; *port;Öort++) {

231 
iﬂddr
 = *
p‹t
;

232 
	`outb
(0x57, 
iﬂddr
 + 
PAR_DATA
);

233 i‡(
	`öb
(
iﬂddr
 + 
PAR_DATA
) != 0x57)

235 i‡(
	`©p_¥obe1
(
iﬂddr
) == 0)

239  -
ENODEV
;

240 
	}
}

242 c⁄° 
√t_devi˚_›s
 
	g©p_√tdev_›s
 = {

243 .
ndo_›í
 = 
√t_›í
,

244 .
	gndo_°›
 = 
√t_˛o£
,

245 .
	gndo_°¨t_xmô
 = 
©p_£nd_∑ckë
,

246 .
	gndo_£t_rx_mode
 = 
£t_rx_mode
,

247 .
	gndo_tx_timeout
 = 
tx_timeout
,

248 .
	gndo_ch™ge_mtu
 = 
ëh_ch™ge_mtu
,

249 .
	gndo_£t_mac_addªss
 = 
ëh_mac_addr
,

250 .
	gndo_vÆid©e_addr
 = 
ëh_vÆid©e_addr
,

253 
__öô
 
	$©p_¥obe1
(
iﬂddr
)

255 
√t_devi˚
 *
dev
 = 
NULL
;

256 
√t_loˇl
 *
Õ
;

257 
ßved_˘æ_ªg
, 
°©us
, 
i
;

258 
ªs
;

260 
	`outb
(0xff, 
iﬂddr
 + 
PAR_DATA
);

263 
ßved_˘æ_ªg
 = 
	`öb
(
iﬂddr
 + 
PAR_CONTROL
);

264 i‡(
√t_debug
 > 3)

265 
	`¥ötk
("©p: C⁄åﬁÑegi°î wa†%#2.2x.\n", 
ßved_˘æ_ªg
);

267 
	`outb
(0x04, 
iﬂddr
 + 
PAR_CONTROL
);

268 #i‚de‡
föÆ_vîsi⁄


269 i‡(
√t_debug
 > 3) {

271 
i
 = 0; i < 8; i++)

272 
	`outb
(
mux_8012
[
i
], 
iﬂddr
 + 
PAR_DATA
);

273 
	`wrôe_ªg
(
iﬂddr
, 
MODSEL
, 0x00);

274 
	`¥ötk
("atp: Registersáre ");

275 
i
 = 0; i < 32; i++)

276 
	`¥ötk
(" %2.2x", 
	`ªad_nibbÀ
(
iﬂddr
, 
i
));

277 
	`¥ötk
(".\n");

281 
i
 = 0; i < 8; i++)

282 
	`outb
(
mux_8012
[
i
], 
iﬂddr
 + 
PAR_DATA
);

283 
	`wrôe_ªg_high
(
iﬂddr
, 
CMR1
, 
CMR1h_RESET
);

285 
°©us
 = 
	`ªad_nibbÀ
(
iﬂddr
, 
CMR1
);

287 i‡(
√t_debug
 > 3) {

288 
	`¥ötk
(
KERN_DEBUG
 "©p: Sètu†nibbÀ wa†%#2.2x..", 
°©us
);

289 
i
 = 0; i < 32; i++)

290 
	`¥ötk
(" %2.2x", 
	`ªad_nibbÀ
(
iﬂddr
, 
i
));

291 
	`¥ötk
("\n");

294 i‡((
°©us
 & 0x78) != 0x08) {

296 
	`outb
(
ßved_˘æ_ªg
, 
iﬂddr
 + 
PAR_CONTROL
);

297  -
ENODEV
;

299 
°©us
 = 
	`ªad_nibbÀ
(
iﬂddr
, 
CMR2_h
);

300 i‡((
°©us
 & 0x78) != 0x10) {

301 
	`outb
(
ßved_˘æ_ªg
, 
iﬂddr
 + 
PAR_CONTROL
);

302  -
ENODEV
;

305 
dev
 = 
	`Æloc_ëhîdev
((
√t_loˇl
));

306 i‡(!
dev
)

307  -
ENOMEM
;

310 
	`wrôe_ªg_byã
(
iﬂddr
, 
CMR2
, 0x01);

311 
	`wrôe_ªg_high
(
iﬂddr
, 
CMR1
, 
CMR1h_RxENABLE
 | 
CMR1h_TxENABLE
);

314 i‡(
úq
[0])

315 
dev
->
úq
 = irq[0];

316 i‡(
iﬂddr
 == 0x378)

317 
dev
->
úq
 = 7;

319 
dev
->
úq
 = 5;

320 
	`wrôe_ªg_high
(
iﬂddr
, 
CMR1
, 
CMR1h_TxRxOFF
);

321 
	`wrôe_ªg
(
iﬂddr
, 
CMR2
, 
CMR2_NULL
);

323 
dev
->
ba£_addr
 = 
iﬂddr
;

326 
	`gë_node_ID
(
dev
);

328 #i‚de‡
MODULE


329 i‡(
√t_debug
)

330 
	`¥ötk
(
KERN_INFO
 "%s", 
vîsi⁄
);

333 
	`¥ötk
(
KERN_NOTICE
 "%s: Pocketádapter foundát %#3lx, IRQ %d, "

335 
dev
->
«me
, dev->
ba£_addr
, dev->
úq
, dev->
dev_addr
);

338 
	`wrôe_ªg_high
(
iﬂddr
, 
CMR1
, 
CMR1h_RESET
 | 
CMR1h_MUX
);

340 
Õ
 = 
	`√tdev_¥iv
(
dev
);

341 
Õ
->
addr_mode
 = 
CMR2h_N‹mÆ
;

342 
	`•ö_lock_öô
(&
Õ
->
lock
);

345 i‡(
xcvr
[0])

346 
dev
->
if_p‹t
 = 
xcvr
[0];

348 
dev
->
if_p‹t
 = (dev->
mem_°¨t
 & 0xf) ? (dev->mem_start & 0x7) : 4;

349 i‡(
dev
->
mem_íd
 & 0xf)

350 
√t_debug
 = 
dev
->
mem_íd
 & 7;

352 
dev
->
√tdev_›s
 = &
©p_√tdev_›s
;

353 
dev
->
w©chdog_timeo
 = 
TX_TIMEOUT
;

355 
ªs
 = 
	`ªgi°î_√tdev
(
dev
);

356 i‡(
ªs
) {

357 
	`‰ì_√tdev
(
dev
);

358  
ªs
;

361 
Õ
->
√xt_moduÀ
 = 
roŸ_©p_dev
;

362 
roŸ_©p_dev
 = 
dev
;

365 
	}
}

368 
__öô
 
	$gë_node_ID
(
√t_devi˚
 *
dev
)

370 
iﬂddr
 = 
dev
->
ba£_addr
;

371 
ß_off£t
 = 0;

372 
i
;

374 
	`wrôe_ªg
(
iﬂddr
, 
CMR2
, 
CMR2_EEPROM
);

378 i‡(
	`ì¥om_›
(
iﬂddr
, 
	`EE_READ
(0)) == 0xffff)

379 
ß_off£t
 = 15;

381 
i
 = 0; i < 3; i++)

382 ((
__be16
 *)
dev
->
dev_addr
)[
i
] =

383 
	`˝u_to_be16
(
	`ì¥om_›
(
iﬂddr
, 
	`EE_READ
(
ß_off£t
 + 
i
)));

385 
	`wrôe_ªg
(
iﬂddr
, 
CMR2
, 
CMR2_NULL
);

386 
	}
}

400 
__öô
 
	$ì¥om_›
(
iﬂddr
, 
u32
 
cmd
)

402 
ìd©a_out
 = 0;

403 
num_bôs
 = 
EE_CMD_SIZE
;

405 --
num_bôs
 >= 0) {

406 
outvÆ
 = (
cmd
 & (1<<
num_bôs
)Ë? 
EE_DATA_WRITE
 : 0;

407 
	`wrôe_ªg_high
(
iﬂddr
, 
PROM_CMD
, 
outvÆ
 | 
EE_CLK_LOW
);

408 
	`wrôe_ªg_high
(
iﬂddr
, 
PROM_CMD
, 
outvÆ
 | 
EE_CLK_HIGH
);

409 
ìd©a_out
 <<= 1;

410 i‡(
	`ªad_nibbÀ
(
iﬂddr
, 
PROM_DATA
Ë& 
EE_DATA_READ
)

411 
ìd©a_out
++;

413 
	`wrôe_ªg_high
(
iﬂddr
, 
PROM_CMD
, 
EE_CLK_LOW
 & ~
EE_CS
);

414  
ìd©a_out
;

415 
	}
}

428 
	$√t_›í
(
√t_devi˚
 *
dev
)

430 
√t_loˇl
 *
Õ
 = 
	`√tdev_¥iv
(
dev
);

431 
ªt
;

436 
ªt
 = 
	`ªque°_úq
(
dev
->
úq
, 
©p_öãºu±
, 0, dev->
«me
, dev);

437 i‡(
ªt
)

438  
ªt
;

440 
	`h¨dw¨e_öô
(
dev
);

442 
	`öô_timî
(&
Õ
->
timî
);

443 
Õ
->
timî
.
expúes
 = 
jiffõs
 + 
TIMED_CHECKER
;

444 
Õ
->
timî
.
d©a
 = ()
dev
;

445 
Õ
->
timî
.
fun˘i⁄
 = 
©p_timed_checkî
;

446 
	`add_timî
(&
Õ
->
timî
);

448 
	`√tif_°¨t_queue
(
dev
);

450 
	}
}

454 
	$h¨dw¨e_öô
(
√t_devi˚
 *
dev
)

456 
√t_loˇl
 *
Õ
 = 
	`√tdev_¥iv
(
dev
);

457 
iﬂddr
 = 
dev
->
ba£_addr
;

458 
i
;

461 
i
 = 0; i < 8; i++)

462 
	`outb
(
mux_8012
[
i
], 
iﬂddr
 + 
PAR_DATA
);

463 
	`wrôe_ªg_high
(
iﬂddr
, 
CMR1
, 
CMR1h_RESET
);

465 
i
 = 0; i < 6; i++)

466 
	`wrôe_ªg_byã
(
iﬂddr
, 
PAR0
 + 
i
, 
dev
->
dev_addr
[i]);

468 
	`wrôe_ªg_high
(
iﬂddr
, 
CMR2
, 
Õ
->
addr_mode
);

470 i‡(
√t_debug
 > 2) {

471 
	`¥ötk
(
KERN_DEBUG
 "%s: Re£t: cuºíàRx modê%d.\n", 
dev
->
«me
,

472 (
	`ªad_nibbÀ
(
iﬂddr
, 
CMR2_h
) >> 3) & 0x0f);

475 
	`wrôe_ªg
(
iﬂddr
, 
CMR2
, 
CMR2_IRQOUT
);

476 
	`wrôe_ªg_high
(
iﬂddr
, 
CMR1
, 
CMR1h_RxENABLE
 | 
CMR1h_TxENABLE
);

479 
	`outb
(
Cål_SñD©a
 + 
Cål_IRQEN
, 
iﬂddr
 + 
PAR_CONTROL
);

482 
	`wrôe_ªg
(
iﬂddr
, 
IMR
, 
ISR_RxOK
 | 
ISR_TxEº
 | 
ISR_TxOK
);

483 
	`wrôe_ªg_high
(
iﬂddr
, 
IMR
, 
ISRh_RxEº
);

485 
Õ
->
tx_unô_busy
 = 0;

486 
Õ
->
∑c_˙t_ö_tx_buf
 = 0;

487 
Õ
->
ßved_tx_size
 = 0;

488 
	}
}

490 
	$åiggî_£nd
(
iﬂddr
, 
Àngth
)

492 
	`wrôe_ªg_byã
(
iﬂddr
, 
TxCNT0
, 
Àngth
 & 0xff);

493 
	`wrôe_ªg
(
iﬂddr
, 
TxCNT1
, 
Àngth
 >> 8);

494 
	`wrôe_ªg
(
iﬂddr
, 
CMR1
, 
CMR1_Xmô
);

495 
	}
}

497 
	$wrôe_∑ckë
(
iﬂddr
, 
Àngth
, *
∑ckë
, 
∑d_Àn
, 
d©a_mode
)

499 i‡(
Àngth
 & 1)

501 
Àngth
++;

502 
∑d_Àn
++;

505 
	`outb
(
EOC
+
MAR
, 
iﬂddr
 + 
PAR_DATA
);

506 i‡((
d©a_mode
 & 1) == 0) {

508 
	`outb
(
WrAddr
+
MAR
, 
iﬂddr
 + 
PAR_DATA
);

510 
	`wrôe_byã_mode0
(
iﬂddr
, *
∑ckë
++);

511 } --
Àngth
 > 
∑d_Àn
) ;

513 
	`wrôe_byã_mode0
(
iﬂddr
, 0);

514 } --
Àngth
 > 0) ;

517 
outbyã
 = *
∑ckë
++;

519 
	`outb
(
Cål_LNibWrôe
 + 
Cål_IRQEN
, 
iﬂddr
 + 
PAR_CONTROL
);

520 
	`outb
(
WrAddr
+
MAR
, 
iﬂddr
 + 
PAR_DATA
);

522 
	`outb
((
outbyã
 & 0x0f)|0x40, 
iﬂddr
 + 
PAR_DATA
);

523 
	`outb
(
outbyã
 & 0x0f, 
iﬂddr
 + 
PAR_DATA
);

524 
outbyã
 >>= 4;

525 
	`outb
(
outbyã
 & 0x0f, 
iﬂddr
 + 
PAR_DATA
);

526 
	`outb
(
Cål_HNibWrôe
 + 
Cål_IRQEN
, 
iﬂddr
 + 
PAR_CONTROL
);

527 --
Àngth
 > 
∑d_Àn
)

528 
	`wrôe_byã_mode1
(
iﬂddr
, *
∑ckë
++);

529 --
Àngth
 > 0)

530 
	`wrôe_byã_mode1
(
iﬂddr
, 0);

533 
	`outb
(0xff, 
iﬂddr
 + 
PAR_DATA
);

534 
	`outb
(
Cål_HNibWrôe
 | 
Cål_SñD©a
 | 
Cål_IRQEN
, 
iﬂddr
 + 
PAR_CONTROL
);

535 
	}
}

537 
	$tx_timeout
(
√t_devi˚
 *
dev
)

539 
iﬂddr
 = 
dev
->
ba£_addr
;

541 
	`¥ötk
(
KERN_WARNING
 "%s: TønsmôÅimed out, %s?\n", 
dev
->
«me
,

542 
	`öb
(
iﬂddr
 + 
PAR_CONTROL
) & 0x10 ? "network cableÖroblem"

544 
dev
->
°©s
.
tx_îr‹s
++;

546 
	`h¨dw¨e_öô
(
dev
);

547 
	`√tif_å™s_upd©e
(
dev
);

548 
	`√tif_wake_queue
(
dev
);

549 
dev
->
°©s
.
tx_îr‹s
++;

550 
	}
}

552 
√tdev_tx_t
 
	$©p_£nd_∑ckë
(
sk_buff
 *
skb
,

553 
√t_devi˚
 *
dev
)

555 
√t_loˇl
 *
Õ
 = 
	`√tdev_¥iv
(
dev
);

556 
iﬂddr
 = 
dev
->
ba£_addr
;

557 
Àngth
;

558 
Êags
;

560 
Àngth
 = 
ETH_ZLEN
 < 
skb
->
Àn
 ? skb->len : ETH_ZLEN;

562 
	`√tif_°›_queue
(
dev
);

567 
	`•ö_lock_úqßve
(&
Õ
->
lock
, 
Êags
);

568 
	`wrôe_ªg
(
iﬂddr
, 
IMR
, 0);

569 
	`wrôe_ªg_high
(
iﬂddr
, 
IMR
, 0);

570 
	`•ö_u∆ock_úqª°‹e
(&
Õ
->
lock
, 
Êags
);

572 
	`wrôe_∑ckë
(
iﬂddr
, 
Àngth
, 
skb
->
d©a
,Üígth-skb->
Àn
, 
dev
->
if_p‹t
);

574 
Õ
->
∑c_˙t_ö_tx_buf
++;

575 i‡(
Õ
->
tx_unô_busy
 == 0) {

576 
	`åiggî_£nd
(
iﬂddr
, 
Àngth
);

577 
Õ
->
ßved_tx_size
 = 0;

578 
Õ
->
ª_tx
 = 0;

579 
Õ
->
tx_unô_busy
 = 1;

581 
Õ
->
ßved_tx_size
 = 
Àngth
;

583 
	`wrôe_ªg
(
iﬂddr
, 
IMR
, 
ISR_RxOK
 | 
ISR_TxEº
 | 
ISR_TxOK
);

584 
	`wrôe_ªg_high
(
iﬂddr
, 
IMR
, 
ISRh_RxEº
);

586 
	`dev_k‰ì_skb
 (
skb
);

587  
NETDEV_TX_OK
;

588 
	}
}

593 
úqªtu∫_t
 
	$©p_öãºu±
(
úq
, *
dev_ö°™˚
)

595 
√t_devi˚
 *
dev
 = 
dev_ö°™˚
;

596 
√t_loˇl
 *
Õ
;

597 
iﬂddr
;

598 
num_tx_sö˚_rx
;

599 
boguscou¡
 = 
max_öãºu±_w‹k
;

600 
h™dÀd
 = 0;

602 
iﬂddr
 = 
dev
->
ba£_addr
;

603 
Õ
 = 
	`√tdev_¥iv
(
dev
);

605 
	`•ö_lock
(&
Õ
->
lock
);

608 
	`outb
(
Cål_SñD©a
, 
iﬂddr
 + 
PAR_CONTROL
);

611 
	`wrôe_ªg
(
iﬂddr
, 
CMR2
, 
CMR2_NULL
);

612 
	`wrôe_ªg
(
iﬂddr
, 
IMR
, 0);

614 i‡(
√t_debug
 > 5Ë
	`¥ötk
(
KERN_DEBUG
 "%s: I¿öãºu± ", 
dev
->
«me
);

615 --
boguscou¡
 > 0) {

616 
°©us
 = 
	`ªad_nibbÀ
(
iﬂddr
, 
ISR
);

617 i‡(
√t_debug
 > 5Ë
	`¥ötk
("lo› sètu†%02x..", 
°©us
);

619 i‡(
°©us
 & (
ISR_RxOK
<<3)) {

620 
h™dÀd
 = 1;

621 
	`wrôe_ªg
(
iﬂddr
, 
ISR
, 
ISR_RxOK
);

623 
ªad_°©us
 = 
	`ªad_nibbÀ
(
iﬂddr
, 
CMR1
);

624 i‡(
√t_debug
 > 6)

625 
	`¥ötk
("h™dlög RxÖackë %02x..", 
ªad_°©us
);

628 i‡(
ªad_°©us
 & (
CMR1_IRQ
 << 3)) {

629 
dev
->
°©s
.
rx_ovî_îr‹s
++;

631 
	`wrôe_ªg_high
(
iﬂddr
, 
CMR2
, 
CMR2h_OFF
);

632 
	`√t_rx
(
dev
);

634 
	`wrôe_ªg_high
(
iﬂddr
, 
ISR
, 
ISRh_RxEº
);

635 
	`wrôe_ªg_high
(
iﬂddr
, 
CMR2
, 
Õ
->
addr_mode
);

636 } i‡((
ªad_°©us
 & (
CMR1_BufEnb
 << 3)) == 0) {

637 
	`√t_rx
(
dev
);

638 
num_tx_sö˚_rx
 = 0;

641 } --
boguscou¡
 > 0);

642 } i‡(
°©us
 & ((
ISR_TxEº
 + 
ISR_TxOK
)<<3)) {

643 
h™dÀd
 = 1;

644 i‡(
√t_debug
 > 6Ë
	`¥ötk
("handling Tx done..");

647 
	`wrôe_ªg
(
iﬂddr
, 
ISR
, 
ISR_TxEº
 + 
ISR_TxOK
);

648 i‡(
°©us
 & (
ISR_TxEº
<<3)) {

649 
dev
->
°©s
.
cﬁlisi⁄s
++;

650 i‡(++
Õ
->
ª_tx
 > 15) {

651 
dev
->
°©s
.
tx_ab‹ãd_îr‹s
++;

652 
	`h¨dw¨e_öô
(
dev
);

656 i‡(
√t_debug
 > 6Ë
	`¥ötk
("attemptingÅo ReTx");

657 
	`wrôe_ªg
(
iﬂddr
, 
CMR1
, 
CMR1_ReXmô
 + 
CMR1_Xmô
);

660 
dev
->
°©s
.
tx_∑ckës
++;

661 
Õ
->
∑c_˙t_ö_tx_buf
--;

662 i‡–
Õ
->
ßved_tx_size
) {

663 
	`åiggî_£nd
(
iﬂddr
, 
Õ
->
ßved_tx_size
);

664 
Õ
->
ßved_tx_size
 = 0;

665 
Õ
->
ª_tx
 = 0;

667 
Õ
->
tx_unô_busy
 = 0;

668 
	`√tif_wake_queue
(
dev
);

670 
num_tx_sö˚_rx
++;

671 } i‡(
num_tx_sö˚_rx
 > 8 &&

672 
	`time_a·î
(
jiffõs
, 
dev
->
œ°_rx
 + 
HZ
)) {

673 i‡(
√t_debug
 > 2)

674 
	`¥ötk
(
KERN_DEBUG
 "%s: MissedÖacket? No Rxáfter %d Txánd "

675 "%ld jiffõ†°©u†%02x CMR1 %02x.\n", 
dev
->
«me
,

676 
num_tx_sö˚_rx
, 
jiffõs
 - 
dev
->
œ°_rx
, 
°©us
,

677 (
	`ªad_nibbÀ
(
iﬂddr
, 
CMR1
) >> 3) & 15);

678 
dev
->
°©s
.
rx_mis£d_îr‹s
++;

679 
	`h¨dw¨e_öô
(
dev
);

680 
num_tx_sö˚_rx
 = 0;

689 
i
;

690 
i
 = 0; i < 6; i++)

691 
	`wrôe_ªg_byã
(
iﬂddr
, 
PAR0
 + 
i
, 
dev
->
dev_addr
[i]);

692 #i‡0 && 
	`deföed
(
TIMED_CHECKER
)

693 
	`mod_timî
(&
Õ
->
timî
, 
jiffõs
 + 
TIMED_CHECKER
);

698 
	`wrôe_ªg
(
iﬂddr
, 
CMR2
, 
CMR2_IRQOUT
);

700 
	`outb
(
Cål_SñD©a
 + 
Cål_IRQEN
, 
iﬂddr
 + 
PAR_CONTROL
);

702 
	`wrôe_ªg
(
iﬂddr
, 
IMR
, 
ISR_RxOK
 | 
ISR_TxEº
 | 
ISR_TxOK
);

703 
	`wrôe_ªg_high
(
iﬂddr
, 
IMR
, 
ISRh_RxEº
);

705 
	`•ö_u∆ock
(&
Õ
->
lock
);

707 i‡(
√t_debug
 > 5Ë
	`¥ötk
("exiting interrupt.\n");

708  
	`IRQ_RETVAL
(
h™dÀd
);

709 
	}
}

711 #ifde‡
TIMED_CHECKER


714 
	$©p_timed_checkî
(
d©a
)

716 
√t_devi˚
 *
dev
 = (√t_devi˚ *)
d©a
;

717 
iﬂddr
 = 
dev
->
ba£_addr
;

718 
√t_loˇl
 *
Õ
 = 
	`√tdev_¥iv
(
dev
);

719 
tickssoÁr
 = 
jiffõs
 - 
Õ
->
œ°_rx_time
;

720 
i
;

722 
	`•ö_lock
(&
Õ
->
lock
);

723 i‡(
tickssoÁr
 > 2*
HZ
) {

725 
i
 = 0; i < 6; i++)

726 
	`wrôe_ªg_byã
(
iﬂddr
, 
PAR0
 + 
i
, 
dev
->
dev_addr
[i]);

727 
Õ
->
œ°_rx_time
 = 
jiffõs
;

729 
i
 = 0; i < 6; i++)

730 i‡(
	`ªad_cmd_byã
(
iﬂddr
, 
PAR0
 + 
i
Ë!
©p_timed_dev
->
dev_addr
[i])

732 
√t_loˇl
 *
Õ
 = 
	`√tdev_¥iv
(
©p_timed_dev
);

733 
	`wrôe_ªg_byã
(
iﬂddr
, 
PAR0
 + 
i
, 
©p_timed_dev
->
dev_addr
[i]);

734 i‡(
i
 == 2)

735 
dev
->
°©s
.
tx_îr‹s
++;

736 i‡(
i
 == 3)

737 
dev
->
°©s
.
tx_dr›≥d
++;

738 i‡(
i
 == 4)

739 
dev
->
°©s
.
cﬁlisi⁄s
++;

741 
dev
->
°©s
.
rx_îr‹s
++;

745 
	`•ö_u∆ock
(&
Õ
->
lock
);

746 
Õ
->
timî
.
expúes
 = 
jiffõs
 + 
TIMED_CHECKER
;

747 
	`add_timî
(&
Õ
->
timî
);

748 
	}
}

752 
	$√t_rx
(
√t_devi˚
 *
dev
)

754 
√t_loˇl
 *
Õ
 = 
	`√tdev_¥iv
(
dev
);

755 
iﬂddr
 = 
dev
->
ba£_addr
;

756 
rx_hódî
 
rx_hód
;

759 
	`outb
(
EOC
+
MAR
, 
iﬂddr
 + 
PAR_DATA
);

760 
	`ªad_block
(
iﬂddr
, 8, (*)&
rx_hód
, 
dev
->
if_p‹t
);

761 i‡(
√t_debug
 > 5)

762 
	`¥ötk
(
KERN_DEBUG
 "Ñx_cou¡ %04x %04x %04x %04x..", 
rx_hód
.
∑d
,

763 
rx_hód
.
rx_cou¡
,Ñx_hód.
rx_°©us
,Ñx_hód.
cur_addr
);

764 i‡((
rx_hód
.
rx_°©us
 & 0x77) != 0x01) {

765 
dev
->
°©s
.
rx_îr‹s
++;

766 i‡(
rx_hód
.
rx_°©us
 & 0x0004Ë
dev
->
°©s
.
rx_‰ame_îr‹s
++;

767 i‡(
rx_hód
.
rx_°©us
 & 0x0002Ë
dev
->
°©s
.
rx_¸c_îr‹s
++;

768 i‡(
√t_debug
 > 3)

769 
	`¥ötk
(
KERN_DEBUG
 "%s: Unknown ATP RxÉrror %04x.\n",

770 
dev
->
«me
, 
rx_hód
.
rx_°©us
);

771 i‡(
rx_hód
.
rx_°©us
 & 0x0020) {

772 
dev
->
°©s
.
rx_fifo_îr‹s
++;

773 
	`wrôe_ªg_high
(
iﬂddr
, 
CMR1
, 
CMR1h_TxENABLE
);

774 
	`wrôe_ªg_high
(
iﬂddr
, 
CMR1
, 
CMR1h_RxENABLE
 | 
CMR1h_TxENABLE
);

775 } i‡(
rx_hód
.
rx_°©us
 & 0x0050)

776 
	`h¨dw¨e_öô
(
dev
);

780 
pkt_Àn
 = (
rx_hód
.
rx_cou¡
 & 0x7ff) - 4;

781 
sk_buff
 *
skb
;

783 
skb
 = 
	`√tdev_Æloc_skb
(
dev
, 
pkt_Àn
 + 2);

784 i‡(
skb
 =
NULL
) {

785 
dev
->
°©s
.
rx_dr›≥d
++;

786 
d⁄e
;

789 
	`skb_ª£rve
(
skb
, 2);

790 
	`ªad_block
(
iﬂddr
, 
pkt_Àn
, 
	`skb_put
(
skb
,pkt_Àn), 
dev
->
if_p‹t
);

791 
skb
->
¥Ÿocﬁ
 = 
	`ëh_ty≥_å™s
(skb, 
dev
);

792 
	`√tif_rx
(
skb
);

793 
dev
->
œ°_rx
 = 
jiffõs
;

794 
dev
->
°©s
.
rx_∑ckës
++;

795 
dev
->
°©s
.
rx_byãs
 +
pkt_Àn
;

797 
d⁄e
:

798 
	`wrôe_ªg
(
iﬂddr
, 
CMR1
, 
CMR1_NextPkt
);

799 
Õ
->
œ°_rx_time
 = 
jiffõs
;

800 
	}
}

802 
	$ªad_block
(
iﬂddr
, 
Àngth
, *
p
, 
d©a_mode
)

804 i‡(
d©a_mode
 <= 3) {

805 
	`outb
(
Cål_LNibRód
, 
iﬂddr
 + 
PAR_CONTROL
);

806 
	`outb
(
Àngth
 =8 ? 
RdAddr
 | 
HNib
 | 
MAR
 : RdAddr | MAR,

807 
iﬂddr
 + 
PAR_DATA
);

808 i‡(
d©a_mode
 <= 1) {

809 dÿ{ *
p
++ = 
	`ªad_byã_mode0
(
iﬂddr
); } --
Àngth
 > 0);

811 dÿ{ *
p
++ = 
	`ªad_byã_mode2
(
iﬂddr
); } --
Àngth
 > 0);

813 } i‡(
d©a_mode
 <= 5) {

814 dÿ{ *
p
++ = 
	`ªad_byã_mode4
(
iﬂddr
); } --
Àngth
 > 0);

816 dÿ{ *
p
++ = 
	`ªad_byã_mode6
(
iﬂddr
); } --
Àngth
 > 0);

819 
	`outb
(
EOC
+
HNib
+
MAR
, 
iﬂddr
 + 
PAR_DATA
);

820 
	`outb
(
Cål_SñD©a
, 
iﬂddr
 + 
PAR_CONTROL
);

821 
	}
}

825 
	$√t_˛o£
(
√t_devi˚
 *
dev
)

827 
√t_loˇl
 *
Õ
 = 
	`√tdev_¥iv
(
dev
);

828 
iﬂddr
 = 
dev
->
ba£_addr
;

830 
	`√tif_°›_queue
(
dev
);

832 
	`dñ_timî_sync
(&
Õ
->
timî
);

835 
Õ
->
addr_mode
 = 
CMR2h_OFF
;

836 
	`wrôe_ªg_high
(
iﬂddr
, 
CMR2
, 
CMR2h_OFF
);

839 
	`outb
(0x00, 
iﬂddr
 + 
PAR_CONTROL
);

840 
	`‰ì_úq
(
dev
->
úq
, dev);

843 
	`wrôe_ªg_high
(
iﬂddr
, 
CMR1
, 
CMR1h_RESET
 | 
CMR1h_MUX
);

845 
	}
}

851 
	$£t_rx_mode
(
√t_devi˚
 *
dev
)

853 
√t_loˇl
 *
Õ
 = 
	`√tdev_¥iv
(
dev
);

854 
iﬂddr
 = 
dev
->
ba£_addr
;

856 i‡(!
	`√tdev_mc_em±y
(
dev
Ë|| (dev->
Êags
 & (
IFF_ALLMULTI
|
IFF_PROMISC
)))

857 
Õ
->
addr_mode
 = 
CMR2h_PROMISC
;

859 
Õ
->
addr_mode
 = 
CMR2h_N‹mÆ
;

860 
	`wrôe_ªg_high
(
iﬂddr
, 
CMR2
, 
Õ
->
addr_mode
);

861 
	}
}

863 
__öô
 
	$©p_öô_moduÀ
() {

864 i‡(
debug
)

865 
	`¥ötk
(
KERN_INFO
 "%s", 
vîsi⁄
);

866  
	`©p_öô
();

867 
	}
}

869 
__exô
 
	$©p_˛ónup_moduÀ
() {

870 
√t_devi˚
 *
√xt_dev
;

872 
roŸ_©p_dev
) {

873 
√t_loˇl
 *
©p_loˇl
 = 
	`√tdev_¥iv
(
roŸ_©p_dev
);

874 
√xt_dev
 = 
©p_loˇl
->
√xt_moduÀ
;

875 
	`uƒegi°î_√tdev
(
roŸ_©p_dev
);

877 
	`‰ì_√tdev
(
roŸ_©p_dev
);

878 
roŸ_©p_dev
 = 
√xt_dev
;

880 
	}
}

882 
moduÀ_öô
(
©p_öô_moduÀ
);

883 
moduÀ_exô
(
©p_˛ónup_moduÀ
);

	@atp.h

4 
	~<löux/if_ëhî.h
>

5 
	~<löux/ty≥s.h
>

8 
	srx_hódî
 {

9 
ush‹t
 
	m∑d
;

10 
ush‹t
 
	mrx_cou¡
;

11 
ush‹t
 
	mrx_°©us
;

12 
ush‹t
 
	mcur_addr
;

15 
	#PAR_DATA
 0

	)

16 
	#PAR_STATUS
 1

	)

17 
	#PAR_CONTROL
 2

	)

19 
	#Cål_LNibRód
 0x08

	)

20 
	#Cål_HNibRód
 0

	)

21 
	#Cål_LNibWrôe
 0x08

	)

22 
	#Cål_HNibWrôe
 0

	)

23 
	#Cål_SñD©a
 0x04

	)

24 
	#Cål_IRQEN
 0x10

	)

26 
	#EOW
 0xE0

	)

27 
	#EOC
 0xE0

	)

28 
	#WrAddr
 0x40

	)

29 
	#RdAddr
 0xC0

	)

30 
	#HNib
 0x10

	)

32 
	e∑ge0_ªgs
 {

36 
	mPAR0
 = 0, 
	mPAR1
 = 1, 
	mPAR2
 = 2, 
	mPAR3
 = 3, 
	mPAR4
 = 4, 
	mPAR5
 = 5,

37 
	mTxCNT0
 = 6, 
	mTxCNT1
 = 7,

38 
	mTxSTAT
 = 8, 
	mRxSTAT
 = 9,

39 
	mISR
 = 10, 
	mIMR
 = 11,

40 
	mCMR1
 = 12,

41 
	mCMR2
 = 13,

42 
	mMODSEL
 = 14,

43 
	mMAR
 = 14,

44 
	mCMR2_h
 = 0x1d,

47 
	eì∑ge_ªgs
 {

48 
	mPROM_CMD
 = 6,

49 
	mPROM_DATA
 = 7

52 
	#ISR_TxOK
 0x01

	)

53 
	#ISR_RxOK
 0x04

	)

54 
	#ISR_TxEº
 0x02

	)

55 
	#ISRh_RxEº
 0x11

	)

57 
	#CMR1h_MUX
 0x08

	)

58 
	#CMR1h_RESET
 0x04

	)

59 
	#CMR1h_RxENABLE
 0x02

	)

60 
	#CMR1h_TxENABLE
 0x01

	)

61 
	#CMR1h_TxRxOFF
 0x00

	)

62 
	#CMR1_ReXmô
 0x08

	)

63 
	#CMR1_Xmô
 0x04

	)

64 
	#CMR1_IRQ
 0x02

	)

65 
	#CMR1_BufEnb
 0x01

	)

66 
	#CMR1_NextPkt
 0x01

	)

68 
	#CMR2_NULL
 8

	)

69 
	#CMR2_IRQOUT
 9

	)

70 
	#CMR2_RAMTEST
 10

	)

71 
	#CMR2_EEPROM
 12

	)

73 
	#CMR2h_OFF
 0

	)

74 
	#CMR2h_Physiˇl
 1

	)

75 
	#CMR2h_N‹mÆ
 2

	)

76 
	#CMR2h_PROMISC
 3

	)

81 
ölöe
 
	$öbyã
(
p‹t
)

83 
_v
;

85 
__asm__
 
	`__vﬁ©ûe__
 ("öb %w1,%b0" : "˜" (
_v
Ë: "d" (
p‹t
));

86  
_v
;

87 
	}
}

92 
ölöe
 
	$ªad_nibbÀ
(
p‹t
, 
off£t
)

94 
ªtvÆ
;

96 
	`outb
(
EOC
+
off£t
, 
p‹t
 + 
PAR_DATA
);

97 
	`outb
(
RdAddr
+
off£t
, 
p‹t
 + 
PAR_DATA
);

98 
	`öbyã
(
p‹t
 + 
PAR_STATUS
);

99 
ªtvÆ
 = 
	`öbyã
(
p‹t
 + 
PAR_STATUS
);

100 
	`outb
(
EOC
+
off£t
, 
p‹t
 + 
PAR_DATA
);

102  
ªtvÆ
;

103 
	}
}

107 
ölöe
 
	$ªad_byã_mode0
(
iﬂddr
)

109 
low_nib
;

111 
	`outb
(
Cål_LNibRód
, 
iﬂddr
 + 
PAR_CONTROL
);

112 
	`öbyã
(
iﬂddr
 + 
PAR_STATUS
);

113 
low_nib
 = (
	`öbyã
(
iﬂddr
 + 
PAR_STATUS
) >> 3) & 0x0f;

114 
	`outb
(
Cål_HNibRód
, 
iﬂddr
 + 
PAR_CONTROL
);

115 
	`öbyã
(
iﬂddr
 + 
PAR_STATUS
);

116 
	`öbyã
(
iﬂddr
 + 
PAR_STATUS
);

117  
low_nib
 | ((
	`öbyã
(
iﬂddr
 + 
PAR_STATUS
) << 1) & 0xf0);

118 
	}
}

121 
ölöe
 
	$ªad_byã_mode2
(
iﬂddr
)

123 
low_nib
;

125 
	`outb
(
Cål_LNibRód
, 
iﬂddr
 + 
PAR_CONTROL
);

126 
	`öbyã
(
iﬂddr
 + 
PAR_STATUS
);

127 
low_nib
 = (
	`öbyã
(
iﬂddr
 + 
PAR_STATUS
) >> 3) & 0x0f;

128 
	`outb
(
Cål_HNibRód
, 
iﬂddr
 + 
PAR_CONTROL
);

129 
	`öbyã
(
iﬂddr
 + 
PAR_STATUS
);

130  
low_nib
 | ((
	`öbyã
(
iﬂddr
 + 
PAR_STATUS
) << 1) & 0xf0);

131 
	}
}

134 
ölöe
 
	$ªad_byã_mode4
(
iﬂddr
)

136 
low_nib
;

138 
	`outb
(
RdAddr
 | 
MAR
, 
iﬂddr
 + 
PAR_DATA
);

139 
low_nib
 = (
	`öbyã
(
iﬂddr
 + 
PAR_STATUS
) >> 3) & 0x0f;

140 
	`outb
(
RdAddr
 | 
HNib
 | 
MAR
, 
iﬂddr
 + 
PAR_DATA
);

141  
low_nib
 | ((
	`öbyã
(
iﬂddr
 + 
PAR_STATUS
) << 1) & 0xf0);

142 
	}
}

145 
ölöe
 
	$ªad_byã_mode6
(
iﬂddr
)

147 
low_nib
;

149 
	`outb
(
RdAddr
 | 
MAR
, 
iﬂddr
 + 
PAR_DATA
);

150 
	`öbyã
(
iﬂddr
 + 
PAR_STATUS
);

151 
low_nib
 = (
	`öbyã
(
iﬂddr
 + 
PAR_STATUS
) >> 3) & 0x0f;

152 
	`outb
(
RdAddr
 | 
HNib
 | 
MAR
, 
iﬂddr
 + 
PAR_DATA
);

153 
	`öbyã
(
iﬂddr
 + 
PAR_STATUS
);

154  
low_nib
 | ((
	`öbyã
(
iﬂddr
 + 
PAR_STATUS
) << 1) & 0xf0);

155 
	}
}

157 
ölöe
 

158 
	$wrôe_ªg
(
p‹t
, 
ªg
, 
vÆue
)

160 
outvÆ
;

162 
	`outb
(
EOC
 | 
ªg
, 
p‹t
 + 
PAR_DATA
);

163 
outvÆ
 = 
WrAddr
 | 
ªg
;

164 
	`outb
(
outvÆ
, 
p‹t
 + 
PAR_DATA
);

165 
	`outb
(
outvÆ
, 
p‹t
 + 
PAR_DATA
);

167 
outvÆ
 &= 0xf0;

168 
outvÆ
 |
vÆue
;

169 
	`outb
(
outvÆ
, 
p‹t
 + 
PAR_DATA
);

170 
outvÆ
 &= 0x1f;

171 
	`outb
(
outvÆ
, 
p‹t
 + 
PAR_DATA
);

172 
	`outb
(
outvÆ
, 
p‹t
 + 
PAR_DATA
);

174 
	`outb
(
EOC
 | 
outvÆ
, 
p‹t
 + 
PAR_DATA
);

175 
	}
}

177 
ölöe
 

178 
	$wrôe_ªg_high
(
p‹t
, 
ªg
, 
vÆue
)

180 
outvÆ
 = 
EOC
 | 
HNib
 | 
ªg
;

182 
	`outb
(
outvÆ
, 
p‹t
 + 
PAR_DATA
);

183 
outvÆ
 &
WrAddr
 | 
HNib
 | 0x0f;

184 
	`outb
(
outvÆ
, 
p‹t
 + 
PAR_DATA
);

185 
	`outb
(
outvÆ
, 
p‹t
 + 
PAR_DATA
);

187 
outvÆ
 = 
WrAddr
 | 
HNib
 | 
vÆue
;

188 
	`outb
(
outvÆ
, 
p‹t
 + 
PAR_DATA
);

189 
outvÆ
 &
HNib
 | 0x0f;

190 
	`outb
(
outvÆ
, 
p‹t
 + 
PAR_DATA
);

191 
	`outb
(
outvÆ
, 
p‹t
 + 
PAR_DATA
);

193 
	`outb
(
EOC
 | 
HNib
 | 
outvÆ
, 
p‹t
 + 
PAR_DATA
);

194 
	}
}

197 
ölöe
 

198 
	$wrôe_ªg_byã
(
p‹t
, 
ªg
, 
vÆue
)

200 
outvÆ
;

202 
	`outb
(
EOC
 | 
ªg
, 
p‹t
 + 
PAR_DATA
);

203 
outvÆ
 = 
WrAddr
 | 
ªg
;

204 
	`outb
(
outvÆ
, 
p‹t
 + 
PAR_DATA
);

205 
	`outb
(
outvÆ
, 
p‹t
 + 
PAR_DATA
);

207 
	`outb
((
outvÆ
 & 0xf0Ë| (
vÆue
 & 0x0f), 
p‹t
 + 
PAR_DATA
);

208 
	`outb
(
vÆue
 & 0x0f, 
p‹t
 + 
PAR_DATA
);

209 
vÆue
 >>= 4;

210 
	`outb
(
vÆue
, 
p‹t
 + 
PAR_DATA
);

211 
	`outb
(0x10 | 
vÆue
, 
p‹t
 + 
PAR_DATA
);

212 
	`outb
(0x10 | 
vÆue
, 
p‹t
 + 
PAR_DATA
);

214 
	`outb
(
EOC
 | 
vÆue
, 
p‹t
 + 
PAR_DATA
);

215 
	}
}

223 
ölöe
 
	$wrôe_byã_mode0
(
iﬂddr
, 
vÆue
)

225 
	`outb
(
vÆue
 & 0x0f, 
iﬂddr
 + 
PAR_DATA
);

226 
	`outb
((
vÆue
>>4Ë| 0x10, 
iﬂddr
 + 
PAR_DATA
);

227 
	}
}

229 
ölöe
 
	$wrôe_byã_mode1
(
iﬂddr
, 
vÆue
)

231 
	`outb
(
vÆue
 & 0x0f, 
iﬂddr
 + 
PAR_DATA
);

232 
	`outb
(
Cål_IRQEN
 | 
Cål_LNibWrôe
, 
iﬂddr
 + 
PAR_CONTROL
);

233 
	`outb
((
vÆue
>>4Ë| 0x10, 
iﬂddr
 + 
PAR_DATA
);

234 
	`outb
(
Cål_IRQEN
 | 
Cål_HNibWrôe
, 
iﬂddr
 + 
PAR_CONTROL
);

235 
	}
}

238 
ölöe
 
	$wrôe_w‹d_mode0
(
iﬂddr
, 
vÆue
)

240 
	`outb
(
vÆue
 & 0x0f, 
iﬂddr
 + 
PAR_DATA
);

241 
vÆue
 >>= 4;

242 
	`outb
((
vÆue
 & 0x0fË| 0x10, 
iﬂddr
 + 
PAR_DATA
);

243 
vÆue
 >>= 4;

244 
	`outb
(
vÆue
 & 0x0f, 
iﬂddr
 + 
PAR_DATA
);

245 
vÆue
 >>= 4;

246 
	`outb
((
vÆue
 & 0x0fË| 0x10, 
iﬂddr
 + 
PAR_DATA
);

247 
	}
}

250 
	#EE_SHIFT_CLK
 0x04

	)

251 
	#EE_CS
 0x02

	)

252 
	#EE_CLK_HIGH
 0x12

	)

253 
	#EE_CLK_LOW
 0x16

	)

254 
	#EE_DATA_WRITE
 0x01

	)

255 
	#EE_DATA_READ
 0x08

	)

258 
	#ì¥om_dñay
(
ticks
) \

259 dÿ{ 
_i
 = 40; --_ò> 0Ë{ 
__SLOW_DOWN_IO
; } } 0)

	)

262 
	#EE_WRITE_CMD
(
off£t
Ë(((5 << 6Ë+ (off£t)Ë<< 17)

	)

263 
	#EE_READ
(
off£t
Ë(((6 << 6Ë+ (off£t)Ë<< 17)

	)

264 
	#EE_ERASE
(
off£t
Ë(((7 << 6Ë+ (off£t)Ë<< 17)

	)

265 
	#EE_CMD_SIZE
 27

	)

	@r8169-old.c

11 
	~<löux/moduÀ.h
>

12 
	~<löux/moduÀ∑øm.h
>

13 
	~<löux/pci.h
>

14 
	~<löux/√tdevi˚.h
>

15 
	~<löux/ëhîdevi˚.h
>

16 
	~<löux/dñay.h
>

17 
	~<löux/ëhtoﬁ.h
>

18 
	~<löux/mii.h
>

19 
	~<löux/if_vœn.h
>

20 
	~<löux/¸c32.h
>

21 
	~<löux/ö.h
>

22 
	~<löux/ù.h
>

23 
	~<löux/t˝.h
>

24 
	~<löux/öãºu±.h
>

25 
	~<löux/dma-m≠pög.h
>

26 
	~<löux/pm_ru¡ime.h
>

27 
	~<löux/fúmw¨e.h
>

28 
	~<löux/pci-a•m.h
>

29 
	~<löux/¥e„tch.h
>

30 
	~<löux/ùv6.h
>

31 
	~<√t/ù6_checksum.h
>

33 
	~<asm/io.h
>

34 
	~<asm/úq.h
>

36 
	#RTL8169_VERSION
 "2.3LK-NAPI"

	)

37 
	#MODULENAME
 "r8169"

	)

38 
	#PFX
 
MODULENAME
 ": "

	)

40 
	#FIRMWARE_8168D_1
 "πl_nic/πl8168d-1.fw"

	)

41 
	#FIRMWARE_8168D_2
 "πl_nic/πl8168d-2.fw"

	)

42 
	#FIRMWARE_8168E_1
 "πl_nic/πl8168e-1.fw"

	)

43 
	#FIRMWARE_8168E_2
 "πl_nic/πl8168e-2.fw"

	)

44 
	#FIRMWARE_8168E_3
 "πl_nic/πl8168e-3.fw"

	)

45 
	#FIRMWARE_8168F_1
 "πl_nic/πl8168f-1.fw"

	)

46 
	#FIRMWARE_8168F_2
 "πl_nic/πl8168f-2.fw"

	)

47 
	#FIRMWARE_8105E_1
 "πl_nic/πl8105e-1.fw"

	)

48 
	#FIRMWARE_8402_1
 "πl_nic/πl8402-1.fw"

	)

49 
	#FIRMWARE_8411_1
 "πl_nic/πl8411-1.fw"

	)

50 
	#FIRMWARE_8411_2
 "πl_nic/πl8411-2.fw"

	)

51 
	#FIRMWARE_8106E_1
 "πl_nic/πl8106e-1.fw"

	)

52 
	#FIRMWARE_8106E_2
 "πl_nic/πl8106e-2.fw"

	)

53 
	#FIRMWARE_8168G_2
 "πl_nic/πl8168g-2.fw"

	)

54 
	#FIRMWARE_8168G_3
 "πl_nic/πl8168g-3.fw"

	)

55 
	#FIRMWARE_8168H_1
 "πl_nic/πl8168h-1.fw"

	)

56 
	#FIRMWARE_8168H_2
 "πl_nic/πl8168h-2.fw"

	)

57 
	#FIRMWARE_8107E_1
 "πl_nic/πl8107e-1.fw"

	)

58 
	#FIRMWARE_8107E_2
 "πl_nic/πl8107e-2.fw"

	)

60 #ifde‡
RTL8169_DEBUG


61 
	#as£π
(
ex¥
) \

62 i‡(!(
ex¥
)) { \

63 
	`¥ötk
( "Assertion failed! %s,%s,%s,line=%d\n", \

64 #ex¥,
__FILE__
,
__func__
,
__LINE__
); \

65 }

	)

66 
	#d¥ötk
(
fmt
, 
¨gs
...) \

67 dÿ{ 
	`¥ötk
(
KERN_DEBUG
 
PFX
 
fmt
, ## 
¨gs
); } 0)

	)

69 
	#as£π
(
ex¥
Ëdÿ{} 0)

	)

70 
	#d¥ötk
(
fmt
, 
¨gs
...Ëdÿ{} 0)

	)

73 
	#R8169_MSG_DEFAULT
 \

74 (
NETIF_MSG_DRV
 | 
NETIF_MSG_PROBE
 | 
NETIF_MSG_IFUP
 | 
NETIF_MSG_IFDOWN
)

	)

76 
	#TX_SLOTS_AVAIL
(
ç
) \

77 (
ç
->
dúty_tx
 + 
NUM_TX_DESC
 -Åp->
cur_tx
)

	)

80 
	#TX_FRAGS_READY_FOR
(
ç
,
ƒ_‰ags
) \

81 (
	`TX_SLOTS_AVAIL
(
ç
Ë>(
ƒ_‰ags
 + 1))

	)

85 c⁄° 
	gmu…iˇ°_fûãr_limô
 = 32;

87 
	#MAX_READ_REQUEST_SHIFT
 12

	)

88 
	#TX_DMA_BURST
 7

	)

89 
	#I¡îFømeG≠
 0x03

	)

91 
	#R8169_REGS_SIZE
 256

	)

92 
	#R8169_NAPI_WEIGHT
 64

	)

93 
	#NUM_TX_DESC
 64

	)

94 
	#NUM_RX_DESC
 256U

	)

95 
	#R8169_TX_RING_BYTES
 (
NUM_TX_DESC
 * (
TxDesc
))

	)

96 
	#R8169_RX_RING_BYTES
 (
NUM_RX_DESC
 * (
RxDesc
))

	)

98 
	#RTL8169_TX_TIMEOUT
 (6*
HZ
)

	)

99 
	#RTL8169_PHY_TIMEOUT
 (10*
HZ
)

	)

102 
	#RTL_W8
(
ç
, 
ªg
, 
vÆ8
Ë
	`wrôeb
((vÆ8),Åp->
mmio_addr
 + (ªg))

	)

103 
	#RTL_W16
(
ç
, 
ªg
, 
vÆ16
Ë
	`wrôew
((vÆ16),Åp->
mmio_addr
 + (ªg))

	)

104 
	#RTL_W32
(
ç
, 
ªg
, 
vÆ32
Ë
	`wrôñ
((vÆ32),Åp->
mmio_addr
 + (ªg))

	)

105 
	#RTL_R8
(
ç
, 
ªg
Ë
	`ªadb
—p->
mmio_addr
 + (ªg))

	)

106 
	#RTL_R16
(
ç
, 
ªg
Ë
	`ªadw
—p->
mmio_addr
 + (ªg))

	)

107 
	#RTL_R32
(
ç
, 
ªg
Ë
	`ªadl
—p->
mmio_addr
 + (ªg))

	)

109 
	emac_vîsi⁄
 {

110 
	mRTL_GIGA_MAC_VER_01
 = 0,

111 
	mRTL_GIGA_MAC_VER_02
,

112 
	mRTL_GIGA_MAC_VER_03
,

113 
	mRTL_GIGA_MAC_VER_04
,

114 
	mRTL_GIGA_MAC_VER_05
,

115 
	mRTL_GIGA_MAC_VER_06
,

116 
	mRTL_GIGA_MAC_VER_07
,

117 
	mRTL_GIGA_MAC_VER_08
,

118 
	mRTL_GIGA_MAC_VER_09
,

119 
	mRTL_GIGA_MAC_VER_10
,

120 
	mRTL_GIGA_MAC_VER_11
,

121 
	mRTL_GIGA_MAC_VER_12
,

122 
	mRTL_GIGA_MAC_VER_13
,

123 
	mRTL_GIGA_MAC_VER_14
,

124 
	mRTL_GIGA_MAC_VER_15
,

125 
	mRTL_GIGA_MAC_VER_16
,

126 
	mRTL_GIGA_MAC_VER_17
,

127 
	mRTL_GIGA_MAC_VER_18
,

128 
	mRTL_GIGA_MAC_VER_19
,

129 
	mRTL_GIGA_MAC_VER_20
,

130 
	mRTL_GIGA_MAC_VER_21
,

131 
	mRTL_GIGA_MAC_VER_22
,

132 
	mRTL_GIGA_MAC_VER_23
,

133 
	mRTL_GIGA_MAC_VER_24
,

134 
	mRTL_GIGA_MAC_VER_25
,

135 
	mRTL_GIGA_MAC_VER_26
,

136 
	mRTL_GIGA_MAC_VER_27
,

137 
	mRTL_GIGA_MAC_VER_28
,

138 
	mRTL_GIGA_MAC_VER_29
,

139 
	mRTL_GIGA_MAC_VER_30
,

140 
	mRTL_GIGA_MAC_VER_31
,

141 
	mRTL_GIGA_MAC_VER_32
,

142 
	mRTL_GIGA_MAC_VER_33
,

143 
	mRTL_GIGA_MAC_VER_34
,

144 
	mRTL_GIGA_MAC_VER_35
,

145 
	mRTL_GIGA_MAC_VER_36
,

146 
	mRTL_GIGA_MAC_VER_37
,

147 
	mRTL_GIGA_MAC_VER_38
,

148 
	mRTL_GIGA_MAC_VER_39
,

149 
	mRTL_GIGA_MAC_VER_40
,

150 
	mRTL_GIGA_MAC_VER_41
,

151 
	mRTL_GIGA_MAC_VER_42
,

152 
	mRTL_GIGA_MAC_VER_43
,

153 
	mRTL_GIGA_MAC_VER_44
,

154 
	mRTL_GIGA_MAC_VER_45
,

155 
	mRTL_GIGA_MAC_VER_46
,

156 
	mRTL_GIGA_MAC_VER_47
,

157 
	mRTL_GIGA_MAC_VER_48
,

158 
	mRTL_GIGA_MAC_VER_49
,

159 
	mRTL_GIGA_MAC_VER_50
,

160 
	mRTL_GIGA_MAC_VER_51
,

161 
	mRTL_GIGA_MAC_NONE
 = 0xff,

164 
	eπl_tx_desc_vîsi⁄
 {

165 
	mRTL_TD_0
 = 0,

166 
	mRTL_TD_1
 = 1,

169 
	#JUMBO_1K
 
ETH_DATA_LEN


	)

170 
	#JUMBO_4K
 (4*1024 - 
ETH_HLEN
 - 2)

	)

171 
	#JUMBO_6K
 (6*1024 - 
ETH_HLEN
 - 2)

	)

172 
	#JUMBO_7K
 (7*1024 - 
ETH_HLEN
 - 2)

	)

173 
	#JUMBO_9K
 (9*1024 - 
ETH_HLEN
 - 2)

	)

175 
	#_R
(
NAME
,
TD
,
FW
,
SZ
,
B
) { \

176 .
«me
 = 
NAME
, \

177 .
txd_vîsi⁄
 = 
TD
, \

178 .
fw_«me
 = 
FW
, \

179 .
jumbo_max
 = 
SZ
, \

180 .
jumbo_tx_csum
 = 
B
 \

181 }

	)

184 c⁄° *
	m«me
;

185 
πl_tx_desc_vîsi⁄
 
	mtxd_vîsi⁄
;

186 c⁄° *
	mfw_«me
;

187 
u16
 
	mjumbo_max
;

188 
boﬁ
 
	mjumbo_tx_csum
;

189 } 
	gπl_chù_öfos
[] = {

191 [
RTL_GIGA_MAC_VER_01
] =

192 
_R
("RTL8169", 
RTL_TD_0
, 
NULL
, 
JUMBO_7K
, 
åue
),

193 [
RTL_GIGA_MAC_VER_02
] =

194 
_R
("RTL8169s", 
RTL_TD_0
, 
NULL
, 
JUMBO_7K
, 
åue
),

195 [
RTL_GIGA_MAC_VER_03
] =

196 
_R
("RTL8110s", 
RTL_TD_0
, 
NULL
, 
JUMBO_7K
, 
åue
),

197 [
RTL_GIGA_MAC_VER_04
] =

198 
_R
("RTL8169sb/8110sb", 
RTL_TD_0
, 
NULL
, 
JUMBO_7K
, 
åue
),

199 [
RTL_GIGA_MAC_VER_05
] =

200 
_R
("RTL8169sc/8110sc", 
RTL_TD_0
, 
NULL
, 
JUMBO_7K
, 
åue
),

201 [
RTL_GIGA_MAC_VER_06
] =

202 
_R
("RTL8169sc/8110sc", 
RTL_TD_0
, 
NULL
, 
JUMBO_7K
, 
åue
),

204 [
RTL_GIGA_MAC_VER_07
] =

205 
_R
("RTL8102e", 
RTL_TD_1
, 
NULL
, 
JUMBO_1K
, 
åue
),

206 [
RTL_GIGA_MAC_VER_08
] =

207 
_R
("RTL8102e", 
RTL_TD_1
, 
NULL
, 
JUMBO_1K
, 
åue
),

208 [
RTL_GIGA_MAC_VER_09
] =

209 
_R
("RTL8102e", 
RTL_TD_1
, 
NULL
, 
JUMBO_1K
, 
åue
),

210 [
RTL_GIGA_MAC_VER_10
] =

211 
_R
("RTL8101e", 
RTL_TD_0
, 
NULL
, 
JUMBO_1K
, 
åue
),

212 [
RTL_GIGA_MAC_VER_11
] =

213 
_R
("RTL8168b/8111b", 
RTL_TD_0
, 
NULL
, 
JUMBO_4K
, 
Ál£
),

214 [
RTL_GIGA_MAC_VER_12
] =

215 
_R
("RTL8168b/8111b", 
RTL_TD_0
, 
NULL
, 
JUMBO_4K
, 
Ál£
),

216 [
RTL_GIGA_MAC_VER_13
] =

217 
_R
("RTL8101e", 
RTL_TD_0
, 
NULL
, 
JUMBO_1K
, 
åue
),

218 [
RTL_GIGA_MAC_VER_14
] =

219 
_R
("RTL8100e", 
RTL_TD_0
, 
NULL
, 
JUMBO_1K
, 
åue
),

220 [
RTL_GIGA_MAC_VER_15
] =

221 
_R
("RTL8100e", 
RTL_TD_0
, 
NULL
, 
JUMBO_1K
, 
åue
),

222 [
RTL_GIGA_MAC_VER_16
] =

223 
_R
("RTL8101e", 
RTL_TD_0
, 
NULL
, 
JUMBO_1K
, 
åue
),

224 [
RTL_GIGA_MAC_VER_17
] =

225 
_R
("RTL8168b/8111b", 
RTL_TD_0
, 
NULL
, 
JUMBO_4K
, 
Ál£
),

226 [
RTL_GIGA_MAC_VER_18
] =

227 
_R
("RTL8168˝/8111˝", 
RTL_TD_1
, 
NULL
, 
JUMBO_6K
, 
Ál£
),

228 [
RTL_GIGA_MAC_VER_19
] =

229 
_R
("RTL8168c/8111c", 
RTL_TD_1
, 
NULL
, 
JUMBO_6K
, 
Ál£
),

230 [
RTL_GIGA_MAC_VER_20
] =

231 
_R
("RTL8168c/8111c", 
RTL_TD_1
, 
NULL
, 
JUMBO_6K
, 
Ál£
),

232 [
RTL_GIGA_MAC_VER_21
] =

233 
_R
("RTL8168c/8111c", 
RTL_TD_1
, 
NULL
, 
JUMBO_6K
, 
Ál£
),

234 [
RTL_GIGA_MAC_VER_22
] =

235 
_R
("RTL8168c/8111c", 
RTL_TD_1
, 
NULL
, 
JUMBO_6K
, 
Ál£
),

236 [
RTL_GIGA_MAC_VER_23
] =

237 
_R
("RTL8168˝/8111˝", 
RTL_TD_1
, 
NULL
, 
JUMBO_6K
, 
Ál£
),

238 [
RTL_GIGA_MAC_VER_24
] =

239 
_R
("RTL8168˝/8111˝", 
RTL_TD_1
, 
NULL
, 
JUMBO_6K
, 
Ál£
),

240 [
RTL_GIGA_MAC_VER_25
] =

241 
_R
("RTL8168d/8111d", 
RTL_TD_1
, 
FIRMWARE_8168D_1
,

242 
JUMBO_9K
, 
Ál£
),

243 [
RTL_GIGA_MAC_VER_26
] =

244 
_R
("RTL8168d/8111d", 
RTL_TD_1
, 
FIRMWARE_8168D_2
,

245 
JUMBO_9K
, 
Ál£
),

246 [
RTL_GIGA_MAC_VER_27
] =

247 
_R
("RTL8168dp/8111dp", 
RTL_TD_1
, 
NULL
, 
JUMBO_9K
, 
Ál£
),

248 [
RTL_GIGA_MAC_VER_28
] =

249 
_R
("RTL8168dp/8111dp", 
RTL_TD_1
, 
NULL
, 
JUMBO_9K
, 
Ál£
),

250 [
RTL_GIGA_MAC_VER_29
] =

251 
_R
("RTL8105e", 
RTL_TD_1
, 
FIRMWARE_8105E_1
,

252 
JUMBO_1K
, 
åue
),

253 [
RTL_GIGA_MAC_VER_30
] =

254 
_R
("RTL8105e", 
RTL_TD_1
, 
FIRMWARE_8105E_1
,

255 
JUMBO_1K
, 
åue
),

256 [
RTL_GIGA_MAC_VER_31
] =

257 
_R
("RTL8168dp/8111dp", 
RTL_TD_1
, 
NULL
, 
JUMBO_9K
, 
Ál£
),

258 [
RTL_GIGA_MAC_VER_32
] =

259 
_R
("RTL8168e/8111e", 
RTL_TD_1
, 
FIRMWARE_8168E_1
,

260 
JUMBO_9K
, 
Ál£
),

261 [
RTL_GIGA_MAC_VER_33
] =

262 
_R
("RTL8168e/8111e", 
RTL_TD_1
, 
FIRMWARE_8168E_2
,

263 
JUMBO_9K
, 
Ál£
),

264 [
RTL_GIGA_MAC_VER_34
] =

265 
_R
("RTL8168evl/8111evl",
RTL_TD_1
, 
FIRMWARE_8168E_3
,

266 
JUMBO_9K
, 
Ál£
),

267 [
RTL_GIGA_MAC_VER_35
] =

268 
_R
("RTL8168f/8111f", 
RTL_TD_1
, 
FIRMWARE_8168F_1
,

269 
JUMBO_9K
, 
Ál£
),

270 [
RTL_GIGA_MAC_VER_36
] =

271 
_R
("RTL8168f/8111f", 
RTL_TD_1
, 
FIRMWARE_8168F_2
,

272 
JUMBO_9K
, 
Ál£
),

273 [
RTL_GIGA_MAC_VER_37
] =

274 
_R
("RTL8402", 
RTL_TD_1
, 
FIRMWARE_8402_1
,

275 
JUMBO_1K
, 
åue
),

276 [
RTL_GIGA_MAC_VER_38
] =

277 
_R
("RTL8411", 
RTL_TD_1
, 
FIRMWARE_8411_1
,

278 
JUMBO_9K
, 
Ál£
),

279 [
RTL_GIGA_MAC_VER_39
] =

280 
_R
("RTL8106e", 
RTL_TD_1
, 
FIRMWARE_8106E_1
,

281 
JUMBO_1K
, 
åue
),

282 [
RTL_GIGA_MAC_VER_40
] =

283 
_R
("RTL8168g/8111g", 
RTL_TD_1
, 
FIRMWARE_8168G_2
,

284 
JUMBO_9K
, 
Ál£
),

285 [
RTL_GIGA_MAC_VER_41
] =

286 
_R
("RTL8168g/8111g", 
RTL_TD_1
, 
NULL
, 
JUMBO_9K
, 
Ál£
),

287 [
RTL_GIGA_MAC_VER_42
] =

288 
_R
("RTL8168g/8111g", 
RTL_TD_1
, 
FIRMWARE_8168G_3
,

289 
JUMBO_9K
, 
Ál£
),

290 [
RTL_GIGA_MAC_VER_43
] =

291 
_R
("RTL8106e", 
RTL_TD_1
, 
FIRMWARE_8106E_2
,

292 
JUMBO_1K
, 
åue
),

293 [
RTL_GIGA_MAC_VER_44
] =

294 
_R
("RTL8411", 
RTL_TD_1
, 
FIRMWARE_8411_2
,

295 
JUMBO_9K
, 
Ál£
),

296 [
RTL_GIGA_MAC_VER_45
] =

297 
_R
("RTL8168h/8111h", 
RTL_TD_1
, 
FIRMWARE_8168H_1
,

298 
JUMBO_9K
, 
Ál£
),

299 [
RTL_GIGA_MAC_VER_46
] =

300 
_R
("RTL8168h/8111h", 
RTL_TD_1
, 
FIRMWARE_8168H_2
,

301 
JUMBO_9K
, 
Ál£
),

302 [
RTL_GIGA_MAC_VER_47
] =

303 
_R
("RTL8107e", 
RTL_TD_1
, 
FIRMWARE_8107E_1
,

304 
JUMBO_1K
, 
Ál£
),

305 [
RTL_GIGA_MAC_VER_48
] =

306 
_R
("RTL8107e", 
RTL_TD_1
, 
FIRMWARE_8107E_2
,

307 
JUMBO_1K
, 
Ál£
),

308 [
RTL_GIGA_MAC_VER_49
] =

309 
_R
("RTL8168ï/8111ï", 
RTL_TD_1
, 
NULL
,

310 
JUMBO_9K
, 
Ál£
),

311 [
RTL_GIGA_MAC_VER_50
] =

312 
_R
("RTL8168ï/8111ï", 
RTL_TD_1
, 
NULL
,

313 
JUMBO_9K
, 
Ál£
),

314 [
RTL_GIGA_MAC_VER_51
] =

315 
_R
("RTL8168ï/8111ï", 
RTL_TD_1
, 
NULL
,

316 
JUMBO_9K
, 
Ál£
),

318 #unde‡
_R


320 
	ecfg_vîsi⁄
 {

321 
	mRTL_CFG_0
 = 0x00,

322 
	mRTL_CFG_1
,

323 
	mRTL_CFG_2


326 c⁄° 
pci_devi˚_id
 
	gπl8169_pci_tbl
[] = {

327 { 
PCI_DEVICE
(
PCI_VENDOR_ID_REALTEK
, 0x8129), 0, 0, 
RTL_CFG_0
 },

328 { 
PCI_DEVICE
(
PCI_VENDOR_ID_REALTEK
, 0x8136), 0, 0, 
RTL_CFG_2
 },

329 { 
PCI_DEVICE
(
PCI_VENDOR_ID_REALTEK
, 0x8161), 0, 0, 
RTL_CFG_1
 },

330 { 
PCI_DEVICE
(
PCI_VENDOR_ID_REALTEK
, 0x8167), 0, 0, 
RTL_CFG_0
 },

331 { 
PCI_DEVICE
(
PCI_VENDOR_ID_REALTEK
, 0x8168), 0, 0, 
RTL_CFG_1
 },

332 { 
PCI_DEVICE
(
PCI_VENDOR_ID_REALTEK
, 0x8169), 0, 0, 
RTL_CFG_0
 },

333 { 
PCI_VENDOR_ID_DLINK
, 0x4300,

334 
PCI_VENDOR_ID_DLINK
, 0x4b10, 0, 0, 
RTL_CFG_1
 },

335 { 
PCI_DEVICE
(
PCI_VENDOR_ID_DLINK
, 0x4300), 0, 0, 
RTL_CFG_0
 },

336 { 
PCI_DEVICE
(
PCI_VENDOR_ID_DLINK
, 0x4302), 0, 0, 
RTL_CFG_0
 },

337 { 
PCI_DEVICE
(
PCI_VENDOR_ID_AT
, 0xc107), 0, 0, 
RTL_CFG_0
 },

338 { 
PCI_DEVICE
(0x16ec, 0x0116), 0, 0, 
RTL_CFG_0
 },

339 { 
PCI_VENDOR_ID_LINKSYS
, 0x1032,

340 
PCI_ANY_ID
, 0x0024, 0, 0, 
RTL_CFG_0
 },

342 
PCI_ANY_ID
, 0x2410, 0, 0, 
RTL_CFG_2
 },

346 
MODULE_DEVICE_TABLE
(
pci
, 
πl8169_pci_tbl
);

348 
	grx_buf_sz
 = 16383;

349 
	gu£_dac
 = -1;

351 
u32
 
	mmsg_íabÀ
;

352 } 
	gdebug
 = { -1 };

354 
	eπl_ªgi°îs
 {

355 
	mMAC0
 = 0,

356 
	mMAC4
 = 4,

357 
	mMAR0
 = 8,

358 
	mCou¡îAddrLow
 = 0x10,

359 
	mCou¡îAddrHigh
 = 0x14,

360 
	mTxDescSèπAddrLow
 = 0x20,

361 
	mTxDescSèπAddrHigh
 = 0x24,

362 
	mTxHDescSèπAddrLow
 = 0x28,

363 
	mTxHDescSèπAddrHigh
 = 0x2c,

364 
	mFLASH
 = 0x30,

365 
	mERSR
 = 0x36,

366 
	mChùCmd
 = 0x37,

367 
	mTxPﬁl
 = 0x38,

368 
	mI¡rMask
 = 0x3c,

369 
	mI¡rSètus
 = 0x3e,

371 
	mTxC⁄fig
 = 0x40,

372 
	#TXCFG_AUTO_FIFO
 (1 << 7Ë

	)

373 
	#TXCFG_EMPTY
 (1 << 11Ë

	)

375 
	mRxC⁄fig
 = 0x44,

376 
	#RX128_INT_EN
 (1 << 15Ë

	)

377 
	#RX_MULTI_EN
 (1 << 14Ë

	)

378 
	#RXCFG_FIFO_SHIFT
 13

	)

380 
	#RX_FIFO_THRESH
 (7 << 
RXCFG_FIFO_SHIFT
)

	)

381 
	#RX_EARLY_OFF
 (1 << 11)

	)

382 
	#RXCFG_DMA_SHIFT
 8

	)

384 
	#RX_DMA_BURST
 (7 << 
RXCFG_DMA_SHIFT
)

	)

386 
	mRxMis£d
 = 0x4c,

387 
	mCfg9346
 = 0x50,

388 
	mC⁄fig0
 = 0x51,

389 
	mC⁄fig1
 = 0x52,

390 
	mC⁄fig2
 = 0x53,

391 
	#PME_SIGNAL
 (1 << 5Ë

	)

393 
	mC⁄fig3
 = 0x54,

394 
	mC⁄fig4
 = 0x55,

395 
	mC⁄fig5
 = 0x56,

396 
	mMu…iI¡r
 = 0x5c,

397 
	mPHYAR
 = 0x60,

398 
	mPHY°©us
 = 0x6c,

399 
	mRxMaxSize
 = 0xda,

400 
	mCPlusCmd
 = 0xe0,

401 
	mI¡rMôig©e
 = 0xe2,

403 
	#RTL_COALESCE_MASK
 0x0f

	)

404 
	#RTL_COALESCE_SHIFT
 4

	)

405 
	#RTL_COALESCE_T_MAX
 (
RTL_COALESCE_MASK
)

	)

406 
	#RTL_COALESCE_FRAME_MAX
 (
RTL_COALESCE_MASK
 << 2)

	)

408 
	mRxDescAddrLow
 = 0xe4,

409 
	mRxDescAddrHigh
 = 0xe8,

410 
	mE¨lyTxThªs
 = 0xec,

412 
	#NoE¨lyTx
 0x3‡

	)

414 
	mMaxTxPackëSize
 = 0xec,

416 
	#TxPackëMax
 (8064 >> 7)

	)

417 
	#E¨lySize
 0x27

	)

419 
	mFuncEvít
 = 0xf0,

420 
	mFuncEvítMask
 = 0xf4,

421 
	mFuncPª£tSèã
 = 0xf8,

422 
	mIBCR0
 = 0xf8,

423 
	mIBCR2
 = 0xf9,

424 
	mIBIMR0
 = 0xfa,

425 
	mIBISR0
 = 0xfb,

426 
	mFuncF‹˚Evít
 = 0xfc,

429 
	eπl8110_ªgi°îs
 {

430 
	mTBICSR
 = 0x64,

431 
	mTBI_ANAR
 = 0x68,

432 
	mTBI_LPAR
 = 0x6a,

435 
	eπl8168_8101_ªgi°îs
 {

436 
	mCSIDR
 = 0x64,

437 
	mCSIAR
 = 0x68,

438 
	#CSIAR_FLAG
 0x80000000

	)

439 
	#CSIAR_WRITE_CMD
 0x80000000

	)

440 
	#CSIAR_BYTE_ENABLE
 0x0f

	)

441 
	#CSIAR_BYTE_ENABLE_SHIFT
 12

	)

442 
	#CSIAR_ADDR_MASK
 0x0fff

	)

443 
	#CSIAR_FUNC_CARD
 0x00000000

	)

444 
	#CSIAR_FUNC_SDIO
 0x00010000

	)

445 
	#CSIAR_FUNC_NIC
 0x00020000

	)

446 
	#CSIAR_FUNC_NIC2
 0x00010000

	)

447 
	mPMCH
 = 0x6f,

448 
	mEPHYAR
 = 0x80,

449 
	#EPHYAR_FLAG
 0x80000000

	)

450 
	#EPHYAR_WRITE_CMD
 0x80000000

	)

451 
	#EPHYAR_REG_MASK
 0x1f

	)

452 
	#EPHYAR_REG_SHIFT
 16

	)

453 
	#EPHYAR_DATA_MASK
 0xffff

	)

454 
	mDLLPR
 = 0xd0,

455 
	#PFM_EN
 (1 << 6)

	)

456 
	#TX_10M_PS_EN
 (1 << 7)

	)

457 
	mDBG_REG
 = 0xd1,

458 
	#FIX_NAK_1
 (1 << 4)

	)

459 
	#FIX_NAK_2
 (1 << 3)

	)

460 
	mTWSI
 = 0xd2,

461 
	mMCU
 = 0xd3,

462 
	#NOW_IS_OOB
 (1 << 7)

	)

463 
	#TX_EMPTY
 (1 << 5)

	)

464 
	#RX_EMPTY
 (1 << 4)

	)

465 
	#RXTX_EMPTY
 (
TX_EMPTY
 | 
RX_EMPTY
)

	)

466 
	#EN_NDP
 (1 << 3)

	)

467 
	#EN_OOB_RESET
 (1 << 2)

	)

468 
	#LINK_LIST_RDY
 (1 << 1)

	)

469 
	mEFUSEAR
 = 0xdc,

470 
	#EFUSEAR_FLAG
 0x80000000

	)

471 
	#EFUSEAR_WRITE_CMD
 0x80000000

	)

472 
	#EFUSEAR_READ_CMD
 0x00000000

	)

473 
	#EFUSEAR_REG_MASK
 0x03ff

	)

474 
	#EFUSEAR_REG_SHIFT
 8

	)

475 
	#EFUSEAR_DATA_MASK
 0xff

	)

476 
	mMISC_1
 = 0xf2,

477 
	#PFM_D3COLD_EN
 (1 << 6)

	)

480 
	eπl8168_ªgi°îs
 {

481 
	mLED_FREQ
 = 0x1a,

482 
	mEEE_LED
 = 0x1b,

483 
	mERIDR
 = 0x70,

484 
	mERIAR
 = 0x74,

485 
	#ERIAR_FLAG
 0x80000000

	)

486 
	#ERIAR_WRITE_CMD
 0x80000000

	)

487 
	#ERIAR_READ_CMD
 0x00000000

	)

488 
	#ERIAR_ADDR_BYTE_ALIGN
 4

	)

489 
	#ERIAR_TYPE_SHIFT
 16

	)

490 
	#ERIAR_EXGMAC
 (0x00 << 
ERIAR_TYPE_SHIFT
)

	)

491 
	#ERIAR_MSIX
 (0x01 << 
ERIAR_TYPE_SHIFT
)

	)

492 
	#ERIAR_ASF
 (0x02 << 
ERIAR_TYPE_SHIFT
)

	)

493 
	#ERIAR_OOB
 (0x02 << 
ERIAR_TYPE_SHIFT
)

	)

494 
	#ERIAR_MASK_SHIFT
 12

	)

495 
	#ERIAR_MASK_0001
 (0x1 << 
ERIAR_MASK_SHIFT
)

	)

496 
	#ERIAR_MASK_0011
 (0x3 << 
ERIAR_MASK_SHIFT
)

	)

497 
	#ERIAR_MASK_0100
 (0x4 << 
ERIAR_MASK_SHIFT
)

	)

498 
	#ERIAR_MASK_0101
 (0x5 << 
ERIAR_MASK_SHIFT
)

	)

499 
	#ERIAR_MASK_1111
 (0x‡<< 
ERIAR_MASK_SHIFT
)

	)

500 
	mEPHY_RXER_NUM
 = 0x7c,

501 
	mOCPDR
 = 0xb0,

502 
	#OCPDR_WRITE_CMD
 0x80000000

	)

503 
	#OCPDR_READ_CMD
 0x00000000

	)

504 
	#OCPDR_REG_MASK
 0x7f

	)

505 
	#OCPDR_GPHY_REG_SHIFT
 16

	)

506 
	#OCPDR_DATA_MASK
 0xffff

	)

507 
	mOCPAR
 = 0xb4,

508 
	#OCPAR_FLAG
 0x80000000

	)

509 
	#OCPAR_GPHY_WRITE_CMD
 0x8000f060

	)

510 
	#OCPAR_GPHY_READ_CMD
 0x0000f060

	)

511 
	mGPHY_OCP
 = 0xb8,

512 
	mRDSAR1
 = 0xd0,

513 
	mMISC
 = 0xf0,

514 
	#TXPLA_RST
 (1 << 29)

	)

515 
	#DISABLE_LAN_EN
 (1 << 23Ë

	)

516 
	#PWM_EN
 (1 << 22)

	)

517 
	#RXDV_GATED_EN
 (1 << 19)

	)

518 
	#EARLY_TALLY_EN
 (1 << 16)

	)

521 
	eπl_ªgi°î_c⁄ã¡
 {

523 
	mSYSEº
 = 0x8000,

524 
	mPCSTimeout
 = 0x4000,

525 
	mSWI¡
 = 0x0100,

526 
	mTxDescU«vaû
 = 0x0080,

527 
	mRxFIFOOvî
 = 0x0040,

528 
	mLökChg
 = 0x0020,

529 
	mRxOvîÊow
 = 0x0010,

530 
	mTxEº
 = 0x0008,

531 
	mTxOK
 = 0x0004,

532 
	mRxEº
 = 0x0002,

533 
	mRxOK
 = 0x0001,

536 
	mRxBOVF
 = (1 << 24),

537 
	mRxFOVF
 = (1 << 23),

538 
	mRxRWT
 = (1 << 22),

539 
	mRxRES
 = (1 << 21),

540 
	mRxRUNT
 = (1 << 20),

541 
	mRxCRC
 = (1 << 19),

544 
	mSt›Req
 = 0x80,

545 
	mCmdRe£t
 = 0x10,

546 
	mCmdRxEnb
 = 0x08,

547 
	mCmdTxEnb
 = 0x04,

548 
	mRxBufEm±y
 = 0x01,

551 
	mHPQ
 = 0x80,

552 
	mNPQ
 = 0x40,

553 
	mFSWI¡
 = 0x01,

556 
	mCfg9346_Lock
 = 0x00,

557 
	mCfg9346_U∆ock
 = 0xc0,

560 
	mAc˚±Eº
 = 0x20,

561 
	mAc˚±Ru¡
 = 0x10,

562 
	mAc˚±Brﬂdˇ°
 = 0x08,

563 
	mAc˚±Mu…iˇ°
 = 0x04,

564 
	mAc˚±MyPhys
 = 0x02,

565 
	mAc˚±AŒPhys
 = 0x01,

566 
	#RX_CONFIG_ACCEPT_MASK
 0x3f

	)

569 
	mTxI¡îFømeG≠Shi·
 = 24,

570 
	mTxDMAShi·
 = 8,

573 
	mLEDS1
 = (1 << 7),

574 
	mLEDS0
 = (1 << 6),

575 
	mS≥ed_down
 = (1 << 4),

576 
	mMEMMAP
 = (1 << 3),

577 
	mIOMAP
 = (1 << 2),

578 
	mVPD
 = (1 << 1),

579 
	mPME«bÀ
 = (1 << 0),

582 
	mClkReqEn
 = (1 << 7),

583 
	mMSIE«bÀ
 = (1 << 5),

584 
	mPCI_Clock_66MHz
 = 0x01,

585 
	mPCI_Clock_33MHz
 = 0x00,

588 
	mMagicPackë
 = (1 << 5),

589 
	mLökUp
 = (1 << 4),

590 
	mJumbo_En0
 = (1 << 2),

591 
	mRdy_to_L23
 = (1 << 1),

592 
	mBóc⁄_í
 = (1 << 0),

595 
	mJumbo_En1
 = (1 << 1),

598 
	mBWF
 = (1 << 6),

599 
	mMWF
 = (1 << 5),

600 
	mUWF
 = (1 << 4),

601 
	mSpi_í
 = (1 << 3),

602 
	mL™Wake
 = (1 << 1),

603 
	mPMESètus
 = (1 << 0),

604 
	mASPM_í
 = (1 << 0),

607 
	mTBIRe£t
 = 0x80000000,

608 
	mTBILo›back
 = 0x40000000,

609 
	mTBINwE«bÀ
 = 0x20000000,

610 
	mTBINwRe°¨t
 = 0x10000000,

611 
	mTBILökOk
 = 0x02000000,

612 
	mTBINwCom∂ëe
 = 0x01000000,

615 
	mE«bÀBi°
 = (1 << 15),

616 
	mMac_dbgo_€
 = (1 << 14),

617 
	mN‹mÆ_mode
 = (1 << 13),

618 
	mF‹˚_hÆf_dup
 = (1 << 12),

619 
	mF‹˚_rxÊow_í
 = (1 << 11),

620 
	mF‹˚_txÊow_í
 = (1 << 10),

621 
	mCx∂_dbg_£l
 = (1 << 9),

622 
	mASF
 = (1 << 8),

623 
	mPktC¡rDißbÀ
 = (1 << 7),

624 
	mMac_dbgo_£l
 = 0x001c,

625 
	mRxVœn
 = (1 << 6),

626 
	mRxChkSum
 = (1 << 5),

627 
	mPCIDAC
 = (1 << 4),

628 
	mPCIMulRW
 = (1 << 3),

629 
	mINTT_0
 = 0x0000,

630 
	mINTT_1
 = 0x0001,

631 
	mINTT_2
 = 0x0002,

632 
	mINTT_3
 = 0x0003,

635 
	mTBI_E«bÀ
 = 0x80,

636 
	mTxFlowCål
 = 0x40,

637 
	mRxFlowCål
 = 0x20,

638 
	m_1000bpsF
 = 0x10,

639 
	m_100bps
 = 0x08,

640 
	m_10bps
 = 0x04,

641 
	mLökSètus
 = 0x02,

642 
	mFuŒDup
 = 0x01,

645 
	mTBILökOK
 = 0x02000000,

648 
	mCou¡îRe£t
 = 0x1,

651 
	mCou¡îDump
 = 0x8,

654 
	mMagicPackë_v2
 = (1 << 16),

657 
	eπl_desc_bô
 {

659 
	mDescOwn
 = (1 << 31),

660 
	mRögEnd
 = (1 << 30),

661 
	mFú°Føg
 = (1 << 29),

662 
	mLa°Føg
 = (1 << 28),

666 
	eπl_tx_desc_bô
 {

668 
	mTD_LSO
 = (1 << 27),

669 
	#TD_MSS_MAX
 0x07ffu

	)

672 
	mTxVœnTag
 = (1 << 17),

676 
	eπl_tx_desc_bô_0
 {

678 
	#TD0_MSS_SHIFT
 16

	)

679 
	mTD0_TCP_CS
 = (1 << 16),

680 
	mTD0_UDP_CS
 = (1 << 17),

681 
	mTD0_IP_CS
 = (1 << 18),

685 
	eπl_tx_desc_bô_1
 {

687 
	mTD1_GTSENV4
 = (1 << 26),

688 
	mTD1_GTSENV6
 = (1 << 25),

689 
	#GTTCPHO_SHIFT
 18

	)

690 
	#GTTCPHO_MAX
 0x7fU

	)

693 
	#TCPHO_SHIFT
 18

	)

694 
	#TCPHO_MAX
 0x3ffU

	)

695 
	#TD1_MSS_SHIFT
 18

	)

696 
	mTD1_IPv6_CS
 = (1 << 28),

697 
	mTD1_IPv4_CS
 = (1 << 29),

698 
	mTD1_TCP_CS
 = (1 << 30),

699 
	mTD1_UDP_CS
 = (1 << 31),

702 
	eπl_rx_desc_bô
 {

704 
	mPID1
 = (1 << 18),

705 
	mPID0
 = (1 << 17),

707 
	#RxPrŸoUDP
 (
PID1
)

	)

708 
	#RxPrŸoTCP
 (
PID0
)

	)

709 
	#RxPrŸoIP
 (
PID1
 | 
PID0
)

	)

710 
	#RxPrŸoMask
 
RxPrŸoIP


	)

712 
	mIPFaû
 = (1 << 16),

713 
	mUDPFaû
 = (1 << 15),

714 
	mTCPFaû
 = (1 << 14),

715 
	mRxVœnTag
 = (1 << 16),

718 
	#RsvdMask
 0x3fffc000

	)

720 
	sTxDesc
 {

721 
__À32
 
	m›ts1
;

722 
__À32
 
	m›ts2
;

723 
__À64
 
	maddr
;

726 
	sRxDesc
 {

727 
__À32
 
	m›ts1
;

728 
__À32
 
	m›ts2
;

729 
__À64
 
	maddr
;

732 
	srög_öfo
 {

733 
sk_buff
 *
	mskb
;

734 
u32
 
	mÀn
;

735 
u8
 
	m__∑d
[(*Ë- (
u32
)];

738 
	sπl8169_cou¡îs
 {

739 
__À64
 
	mtx_∑ckës
;

740 
__À64
 
	mrx_∑ckës
;

741 
__À64
 
	mtx_îr‹s
;

742 
__À32
 
	mrx_îr‹s
;

743 
__À16
 
	mrx_mis£d
;

744 
__À16
 
	mÆign_îr‹s
;

745 
__À32
 
	mtx_⁄e_cﬁlisi⁄
;

746 
__À32
 
	mtx_mu…i_cﬁlisi⁄
;

747 
__À64
 
	mrx_uniˇ°
;

748 
__À64
 
	mrx_brﬂdˇ°
;

749 
__À32
 
	mrx_mu…iˇ°
;

750 
__À16
 
	mtx_ab‹ãd
;

751 
__À16
 
	mtx_undîun
;

754 
	sπl8169_tc_off£ts
 {

755 
boﬁ
 
	möôed
;

756 
__À64
 
	mtx_îr‹s
;

757 
__À32
 
	mtx_mu…i_cﬁlisi⁄
;

758 
__À16
 
	mtx_ab‹ãd
;

761 
	eπl_Êag
 {

762 
	mRTL_FLAG_TASK_ENABLED
,

763 
	mRTL_FLAG_TASK_SLOW_PENDING
,

764 
	mRTL_FLAG_TASK_RESET_PENDING
,

765 
	mRTL_FLAG_TASK_PHY_PENDING
,

766 
	mRTL_FLAG_MAX


769 
	sπl8169_°©s
 {

770 
u64
 
	m∑ckës
;

771 
u64
 
	mbyãs
;

772 
u64_°©s_sync
 
	msyn˝
;

775 
	sπl8169_¥iv©e
 {

776 
__iomem
 *
	mmmio_addr
;

777 
pci_dev
 *
	mpci_dev
;

778 
√t_devi˚
 *
	mdev
;

779 
«pi_°ru˘
 
	m«pi
;

780 
u32
 
	mmsg_íabÀ
;

781 
u16
 
	mtxd_vîsi⁄
;

782 
u16
 
	mmac_vîsi⁄
;

783 
u32
 
	mcur_rx
;

784 
u32
 
	mcur_tx
;

785 
u32
 
	mdúty_tx
;

786 
πl8169_°©s
 
	mrx_°©s
;

787 
πl8169_°©s
 
	mtx_°©s
;

788 
TxDesc
 *
	mTxDescAºay
;

789 
RxDesc
 *
	mRxDescAºay
;

790 
dma_addr_t
 
	mTxPhyAddr
;

791 
dma_addr_t
 
	mRxPhyAddr
;

792 *
	mRx_d©abuff
[
NUM_RX_DESC
];

793 
rög_öfo
 
	mtx_skb
[
NUM_TX_DESC
];

794 
timî_li°
 
	mtimî
;

795 
u16
 
	m˝_cmd
;

797 
u16
 
	mevít_¶ow
;

798 c⁄° 
πl_cﬂÀs˚_öfo
 *
	mcﬂÀs˚_öfo
;

800 
	smdio_›s
 {

801 (*
	mwrôe
)(
	mπl8169_¥iv©e
 *, , );

802 (*
	mªad
)(
	mπl8169_¥iv©e
 *, );

803 } 
	mmdio_›s
;

805 
	s∂l_powî_›s
 {

806 (*
	mdown
)(
	mπl8169_¥iv©e
 *);

807 (*
	mup
)(
	mπl8169_¥iv©e
 *);

808 } 
	m∂l_powî_›s
;

810 
	sjumbo_›s
 {

811 (*
	míabÀ
)(
	mπl8169_¥iv©e
 *);

812 (*
	mdißbÀ
)(
	mπl8169_¥iv©e
 *);

813 } 
	mjumbo_›s
;

815 
	scsi_›s
 {

816 (*
	mwrôe
)(
	mπl8169_¥iv©e
 *, , );

817 
u32
 (*
ªad
)(
	mπl8169_¥iv©e
 *, );

818 } 
	mcsi_›s
;

820 (*
	m£t_•ìd
)(
	m√t_devi˚
 *, 
u8
 
	m™eg
, 
u16
 
	m•
, u8 
	mdpx
, 
u32
 
	madv
);

821 (*
	mgë_lök_k£âögs
)(
	m√t_devi˚
 *,

822 
	mëhtoﬁ_lök_k£âögs
 *);

823 (*
	mphy_ª£t_íabÀ
)(
πl8169_¥iv©e
 *
	mç
);

824 (*
	mhw_°¨t
)(
	m√t_devi˚
 *);

825 (*
	mphy_ª£t_≥ndög
)(
πl8169_¥iv©e
 *
	mç
);

826 (*
	mlök_ok
)(
πl8169_¥iv©e
 *
	mç
);

827 (*
	mdo_io˘l
)(
πl8169_¥iv©e
 *
	mç
, 
mii_io˘l_d©a
 *
	md©a
, 
	mcmd
);

828 
boﬁ
 (*
tso_csum
)(
	mπl8169_¥iv©e
 *, 
	msk_buff
 *, 
	mu32
 *);

831 
DECLARE_BITMAP
(
Êags
, 
RTL_FLAG_MAX
);

832 
muãx
 
	mmuãx
;

833 
w‹k_°ru˘
 
	mw‹k
;

834 } 
	mwk
;

836 
	m„©uªs
;

838 
mii_if_öfo
 
	mmii
;

839 
dma_addr_t
 
	mcou¡îs_phys_addr
;

840 
πl8169_cou¡îs
 *
	mcou¡îs
;

841 
πl8169_tc_off£ts
 
	mtc_off£t
;

842 
u32
 
	mßved_wﬁ›ts
;

843 
u32
 
	m›ts1_mask
;

845 
	sπl_fw
 {

846 c⁄° 
fúmw¨e
 *
	mfw
;

848 
	#RTL_VER_SIZE
 32

	)

850 
	mvîsi⁄
[
RTL_VER_SIZE
];

852 
	sπl_fw_phy_a˘i⁄
 {

853 
__À32
 *
	mcode
;

854 
size_t
 
	msize
;

855 } 
	mphy_a˘i⁄
;

856 } *
	mπl_fw
;

857 
	#RTL_FIRMWARE_UNKNOWN
 
	`ERR_PTR
(-
EAGAIN
)

	)

859 
u32
 
	mo˝_ba£
;

862 
MODULE_AUTHOR
("RealtekándÅhe LinuxÑ8169 crew <netdev@vger.kernel.org>");

863 
MODULE_DESCRIPTION
("RealTek RTL-8169 Gigabit Ethernet driver");

864 
moduÀ_∑øm
(
u£_dac
, , 0);

865 
MODULE_PARM_DESC
(
u£_dac
, "Enable PCI DAC. Unsafe on 32 bit PCI slot.");

866 
moduÀ_∑øm_«med
(
debug
, debug.
msg_íabÀ
, , 0);

867 
MODULE_PARM_DESC
(
debug
, "Debug verbosityÜevel (0=none, ..., 16=all)");

868 
MODULE_LICENSE
("GPL");

869 
MODULE_VERSION
(
RTL8169_VERSION
);

870 
MODULE_FIRMWARE
(
FIRMWARE_8168D_1
);

871 
MODULE_FIRMWARE
(
FIRMWARE_8168D_2
);

872 
MODULE_FIRMWARE
(
FIRMWARE_8168E_1
);

873 
MODULE_FIRMWARE
(
FIRMWARE_8168E_2
);

874 
MODULE_FIRMWARE
(
FIRMWARE_8168E_3
);

875 
MODULE_FIRMWARE
(
FIRMWARE_8105E_1
);

876 
MODULE_FIRMWARE
(
FIRMWARE_8168F_1
);

877 
MODULE_FIRMWARE
(
FIRMWARE_8168F_2
);

878 
MODULE_FIRMWARE
(
FIRMWARE_8402_1
);

879 
MODULE_FIRMWARE
(
FIRMWARE_8411_1
);

880 
MODULE_FIRMWARE
(
FIRMWARE_8411_2
);

881 
MODULE_FIRMWARE
(
FIRMWARE_8106E_1
);

882 
MODULE_FIRMWARE
(
FIRMWARE_8106E_2
);

883 
MODULE_FIRMWARE
(
FIRMWARE_8168G_2
);

884 
MODULE_FIRMWARE
(
FIRMWARE_8168G_3
);

885 
MODULE_FIRMWARE
(
FIRMWARE_8168H_1
);

886 
MODULE_FIRMWARE
(
FIRMWARE_8168H_2
);

887 
MODULE_FIRMWARE
(
FIRMWARE_8107E_1
);

888 
MODULE_FIRMWARE
(
FIRMWARE_8107E_2
);

890 
ölöe
 
devi˚
 *
	$ç_to_dev
(
πl8169_¥iv©e
 *
ç
)

892  &
ç
->
pci_dev
->
dev
;

893 
	}
}

895 
	$πl_lock_w‹k
(
πl8169_¥iv©e
 *
ç
)

897 
	`muãx_lock
(&
ç
->
wk
.
muãx
);

898 
	}
}

900 
	$πl_u∆ock_w‹k
(
πl8169_¥iv©e
 *
ç
)

902 
	`muãx_u∆ock
(&
ç
->
wk
.
muãx
);

903 
	}
}

905 
	$πl_tx_≥rf‹m™˚_twók
(
πl8169_¥iv©e
 *
ç
, 
u16
 
f‹˚
)

907 
	`pcõ_ˇ∑bûôy_˛ór_™d_£t_w‹d
(
ç
->
pci_dev
, 
PCI_EXP_DEVCTL
,

908 
PCI_EXP_DEVCTL_READRQ
, 
f‹˚
);

909 
	}
}

911 
	sπl_c⁄d
 {

912 
boﬁ
 (*
check
)(
	mπl8169_¥iv©e
 *);

913 c⁄° *
	mmsg
;

916 
	$πl_udñay
(
d
)

918 
	`udñay
(
d
);

919 
	}
}

921 
boﬁ
 
	$πl_lo›_waô
(
πl8169_¥iv©e
 *
ç
, c⁄° 
πl_c⁄d
 *
c
,

922 (*
dñay
)(), 
d
, 
n
,

923 
boﬁ
 
high
)

925 
i
;

927 
i
 = 0; i < 
n
; i++) {

928 
	`dñay
(
d
);

929 i‡(
c
->
	`check
(
ç
Ë=
high
)

930  
åue
;

932 
	`√tif_îr
(
ç
, 
drv
,Åp->
dev
, "%s == %d (loop: %d, delay: %d).\n",

933 
c
->
msg
, !
high
, 
n
, 
d
);

934  
Ál£
;

935 
	}
}

937 
boﬁ
 
	$πl_udñay_lo›_waô_high
(
πl8169_¥iv©e
 *
ç
,

938 c⁄° 
πl_c⁄d
 *
c
,

939 
d
, 
n
)

941  
	`πl_lo›_waô
(
ç
, 
c
, 
πl_udñay
, 
d
, 
n
, 
åue
);

942 
	}
}

944 
boﬁ
 
	$πl_udñay_lo›_waô_low
(
πl8169_¥iv©e
 *
ç
,

945 c⁄° 
πl_c⁄d
 *
c
,

946 
d
, 
n
)

948  
	`πl_lo›_waô
(
ç
, 
c
, 
πl_udñay
, 
d
, 
n
, 
Ál£
);

949 
	}
}

951 
boﬁ
 
	$πl_m¶ìp_lo›_waô_high
(
πl8169_¥iv©e
 *
ç
,

952 c⁄° 
πl_c⁄d
 *
c
,

953 
d
, 
n
)

955  
	`πl_lo›_waô
(
ç
, 
c
, 
m¶ìp
, 
d
, 
n
, 
åue
);

956 
	}
}

958 
boﬁ
 
	$πl_m¶ìp_lo›_waô_low
(
πl8169_¥iv©e
 *
ç
,

959 c⁄° 
πl_c⁄d
 *
c
,

960 
d
, 
n
)

962  
	`πl_lo›_waô
(
ç
, 
c
, 
m¶ìp
, 
d
, 
n
, 
Ál£
);

963 
	}
}

965 
	#DECLARE_RTL_COND
(
«me
) \

966 
boﬁ
 
«me
 ## 
	`_check
(
πl8169_¥iv©e
 *); \

968 c⁄° 
πl_c⁄d
 
«me
 = { \

969 .
check
 = 
«me
 ## 
_check
, \

970 .
msg
 = #name \

973 
boﬁ
 
«me
 ## 
	`_check
(
πl8169_¥iv©e
 *
ç
)

	)

975 
boﬁ
 
	$πl_o˝_ªg_Áûuª
(
πl8169_¥iv©e
 *
ç
, 
u32
 
ªg
)

977 i‡(
ªg
 & 0xffff0001) {

978 
	`√tif_îr
(
ç
, 
drv
,Åp->
dev
, "InvÆid o˝Ñeg %x!\n", 
ªg
);

979  
åue
;

981  
Ál£
;

982 
	}
}

984 
	$DECLARE_RTL_COND
(
πl_o˝_gphy_c⁄d
)

986  
	`RTL_R32
(
ç
, 
GPHY_OCP
Ë& 
OCPAR_FLAG
;

987 
	}
}

989 
	$r8168_phy_o˝_wrôe
(
πl8169_¥iv©e
 *
ç
, 
u32
 
ªg
, u32 
d©a
)

991 i‡(
	`πl_o˝_ªg_Áûuª
(
ç
, 
ªg
))

994 
	`RTL_W32
(
ç
, 
GPHY_OCP
, 
OCPAR_FLAG
 | (
ªg
 << 15Ë| 
d©a
);

996 
	`πl_udñay_lo›_waô_low
(
ç
, &
πl_o˝_gphy_c⁄d
, 25, 10);

997 
	}
}

999 
u16
 
	$r8168_phy_o˝_ªad
(
πl8169_¥iv©e
 *
ç
, 
u32
 
ªg
)

1001 i‡(
	`πl_o˝_ªg_Áûuª
(
ç
, 
ªg
))

1004 
	`RTL_W32
(
ç
, 
GPHY_OCP
, 
ªg
 << 15);

1006  
	`πl_udñay_lo›_waô_high
(
ç
, &
πl_o˝_gphy_c⁄d
, 25, 10) ?

1007 (
	`RTL_R32
(
ç
, 
GPHY_OCP
) & 0xffff) : ~0;

1008 
	}
}

1010 
	$r8168_mac_o˝_wrôe
(
πl8169_¥iv©e
 *
ç
, 
u32
 
ªg
, u32 
d©a
)

1012 i‡(
	`πl_o˝_ªg_Áûuª
(
ç
, 
ªg
))

1015 
	`RTL_W32
(
ç
, 
OCPDR
, 
OCPAR_FLAG
 | (
ªg
 << 15Ë| 
d©a
);

1016 
	}
}

1018 
u16
 
	$r8168_mac_o˝_ªad
(
πl8169_¥iv©e
 *
ç
, 
u32
 
ªg
)

1020 i‡(
	`πl_o˝_ªg_Áûuª
(
ç
, 
ªg
))

1023 
	`RTL_W32
(
ç
, 
OCPDR
, 
ªg
 << 15);

1025  
	`RTL_R32
(
ç
, 
OCPDR
);

1026 
	}
}

1028 
	#OCP_STD_PHY_BASE
 0xa400

	)

1030 
	$r8168g_mdio_wrôe
(
πl8169_¥iv©e
 *
ç
, 
ªg
, 
vÆue
)

1032 i‡(
ªg
 == 0x1f) {

1033 
ç
->
o˝_ba£
 = 
vÆue
 ? vÆuê<< 4 : 
OCP_STD_PHY_BASE
;

1037 i‡(
ç
->
o˝_ba£
 !
OCP_STD_PHY_BASE
)

1038 
ªg
 -= 0x10;

1040 
	`r8168_phy_o˝_wrôe
(
ç
,Åp->
o˝_ba£
 + 
ªg
 * 2, 
vÆue
);

1041 
	}
}

1043 
	$r8168g_mdio_ªad
(
πl8169_¥iv©e
 *
ç
, 
ªg
)

1045 i‡(
ç
->
o˝_ba£
 !
OCP_STD_PHY_BASE
)

1046 
ªg
 -= 0x10;

1048  
	`r8168_phy_o˝_ªad
(
ç
,Åp->
o˝_ba£
 + 
ªg
 * 2);

1049 
	}
}

1051 
	$mac_mcu_wrôe
(
πl8169_¥iv©e
 *
ç
, 
ªg
, 
vÆue
)

1053 i‡(
ªg
 == 0x1f) {

1054 
ç
->
o˝_ba£
 = 
vÆue
 << 4;

1058 
	`r8168_mac_o˝_wrôe
(
ç
,Åp->
o˝_ba£
 + 
ªg
, 
vÆue
);

1059 
	}
}

1061 
	$mac_mcu_ªad
(
πl8169_¥iv©e
 *
ç
, 
ªg
)

1063  
	`r8168_mac_o˝_ªad
(
ç
,Åp->
o˝_ba£
 + 
ªg
);

1064 
	}
}

1066 
	$DECLARE_RTL_COND
(
πl_phy¨_c⁄d
)

1068  
	`RTL_R32
(
ç
, 
PHYAR
) & 0x80000000;

1069 
	}
}

1071 
	$r8169_mdio_wrôe
(
πl8169_¥iv©e
 *
ç
, 
ªg
, 
vÆue
)

1073 
	`RTL_W32
(
ç
, 
PHYAR
, 0x80000000 | (
ªg
 & 0x1fË<< 16 | (
vÆue
 & 0xffff));

1075 
	`πl_udñay_lo›_waô_low
(
ç
, &
πl_phy¨_c⁄d
, 25, 20);

1080 
	`udñay
(20);

1081 
	}
}

1083 
	$r8169_mdio_ªad
(
πl8169_¥iv©e
 *
ç
, 
ªg
)

1085 
vÆue
;

1087 
	`RTL_W32
(
ç
, 
PHYAR
, 0x0 | (
ªg
 & 0x1f) << 16);

1089 
vÆue
 = 
	`πl_udñay_lo›_waô_high
(
ç
, &
πl_phy¨_c⁄d
, 25, 20) ?

1090 
	`RTL_R32
(
ç
, 
PHYAR
) & 0xffff : ~0;

1096 
	`udñay
(20);

1098  
vÆue
;

1099 
	}
}

1101 
	$DECLARE_RTL_COND
(
πl_o˝¨_c⁄d
)

1103  
	`RTL_R32
(
ç
, 
OCPAR
Ë& 
OCPAR_FLAG
;

1104 
	}
}

1106 
	$r8168dp_1_mdio_ac˚ss
(
πl8169_¥iv©e
 *
ç
, 
ªg
, 
u32
 
d©a
)

1108 
	`RTL_W32
(
ç
, 
OCPDR
, 
d©a
 | ((
ªg
 & 
OCPDR_REG_MASK
Ë<< 
OCPDR_GPHY_REG_SHIFT
));

1109 
	`RTL_W32
(
ç
, 
OCPAR
, 
OCPAR_GPHY_WRITE_CMD
);

1110 
	`RTL_W32
(
ç
, 
EPHY_RXER_NUM
, 0);

1112 
	`πl_udñay_lo›_waô_low
(
ç
, &
πl_o˝¨_c⁄d
, 1000, 100);

1113 
	}
}

1115 
	$r8168dp_1_mdio_wrôe
(
πl8169_¥iv©e
 *
ç
, 
ªg
, 
vÆue
)

1117 
	`r8168dp_1_mdio_ac˚ss
(
ç
, 
ªg
,

1118 
OCPDR_WRITE_CMD
 | (
vÆue
 & 
OCPDR_DATA_MASK
));

1119 
	}
}

1121 
	$r8168dp_1_mdio_ªad
(
πl8169_¥iv©e
 *
ç
, 
ªg
)

1123 
	`r8168dp_1_mdio_ac˚ss
(
ç
, 
ªg
, 
OCPDR_READ_CMD
);

1125 
	`mdñay
(1);

1126 
	`RTL_W32
(
ç
, 
OCPAR
, 
OCPAR_GPHY_READ_CMD
);

1127 
	`RTL_W32
(
ç
, 
EPHY_RXER_NUM
, 0);

1129  
	`πl_udñay_lo›_waô_high
(
ç
, &
πl_o˝¨_c⁄d
, 1000, 100) ?

1130 
	`RTL_R32
(
ç
, 
OCPDR
Ë& 
OCPDR_DATA_MASK
 : ~0;

1131 
	}
}

1133 
	#R8168DP_1_MDIO_ACCESS_BIT
 0x00020000

	)

1135 
	$r8168dp_2_mdio_°¨t
(
πl8169_¥iv©e
 *
ç
)

1137 
	`RTL_W32
(
ç
, 0xd0, 
	`RTL_R32
—p, 0xd0Ë& ~
R8168DP_1_MDIO_ACCESS_BIT
);

1138 
	}
}

1140 
	$r8168dp_2_mdio_°›
(
πl8169_¥iv©e
 *
ç
)

1142 
	`RTL_W32
(
ç
, 0xd0, 
	`RTL_R32
—p, 0xd0Ë| 
R8168DP_1_MDIO_ACCESS_BIT
);

1143 
	}
}

1145 
	$r8168dp_2_mdio_wrôe
(
πl8169_¥iv©e
 *
ç
, 
ªg
, 
vÆue
)

1147 
	`r8168dp_2_mdio_°¨t
(
ç
);

1149 
	`r8169_mdio_wrôe
(
ç
, 
ªg
, 
vÆue
);

1151 
	`r8168dp_2_mdio_°›
(
ç
);

1152 
	}
}

1154 
	$r8168dp_2_mdio_ªad
(
πl8169_¥iv©e
 *
ç
, 
ªg
)

1156 
vÆue
;

1158 
	`r8168dp_2_mdio_°¨t
(
ç
);

1160 
vÆue
 = 
	`r8169_mdio_ªad
(
ç
, 
ªg
);

1162 
	`r8168dp_2_mdio_°›
(
ç
);

1164  
vÆue
;

1165 
	}
}

1167 
	$πl_wrôïhy
(
πl8169_¥iv©e
 *
ç
, 
loˇti⁄
, 
u32
 
vÆ
)

1169 
ç
->
mdio_›s
.
	`wrôe
—p, 
loˇti⁄
, 
vÆ
);

1170 
	}
}

1172 
	$πl_ªadphy
(
πl8169_¥iv©e
 *
ç
, 
loˇti⁄
)

1174  
ç
->
mdio_›s
.
	`ªad
—p, 
loˇti⁄
);

1175 
	}
}

1177 
	$πl_∑tchphy
(
πl8169_¥iv©e
 *
ç
, 
ªg_addr
, 
vÆue
)

1179 
	`πl_wrôïhy
(
ç
, 
ªg_addr
, 
	`πl_ªadphy
—p,Ñeg_addrË| 
vÆue
);

1180 
	}
}

1182 
	$πl_w0w1_phy
(
πl8169_¥iv©e
 *
ç
, 
ªg_addr
, 
p
, 
m
)

1184 
vÆ
;

1186 
vÆ
 = 
	`πl_ªadphy
(
ç
, 
ªg_addr
);

1187 
	`πl_wrôïhy
(
ç
, 
ªg_addr
, (
vÆ
 & ~
m
Ë| 
p
);

1188 
	}
}

1190 
	$πl_mdio_wrôe
(
√t_devi˚
 *
dev
, 
phy_id
, 
loˇti⁄
,

1191 
vÆ
)

1193 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

1195 
	`πl_wrôïhy
(
ç
, 
loˇti⁄
, 
vÆ
);

1196 
	}
}

1198 
	$πl_mdio_ªad
(
√t_devi˚
 *
dev
, 
phy_id
, 
loˇti⁄
)

1200 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

1202  
	`πl_ªadphy
(
ç
, 
loˇti⁄
);

1203 
	}
}

1205 
	$DECLARE_RTL_COND
(
πl_ïhy¨_c⁄d
)

1207  
	`RTL_R32
(
ç
, 
EPHYAR
Ë& 
EPHYAR_FLAG
;

1208 
	}
}

1210 
	$πl_ïhy_wrôe
(
πl8169_¥iv©e
 *
ç
, 
ªg_addr
, 
vÆue
)

1212 
	`RTL_W32
(
ç
, 
EPHYAR
, 
EPHYAR_WRITE_CMD
 | (
vÆue
 & 
EPHYAR_DATA_MASK
) |

1213 (
ªg_addr
 & 
EPHYAR_REG_MASK
Ë<< 
EPHYAR_REG_SHIFT
);

1215 
	`πl_udñay_lo›_waô_low
(
ç
, &
πl_ïhy¨_c⁄d
, 10, 100);

1217 
	`udñay
(10);

1218 
	}
}

1220 
u16
 
	$πl_ïhy_ªad
(
πl8169_¥iv©e
 *
ç
, 
ªg_addr
)

1222 
	`RTL_W32
(
ç
, 
EPHYAR
, (
ªg_addr
 & 
EPHYAR_REG_MASK
Ë<< 
EPHYAR_REG_SHIFT
);

1224  
	`πl_udñay_lo›_waô_high
(
ç
, &
πl_ïhy¨_c⁄d
, 10, 100) ?

1225 
	`RTL_R32
(
ç
, 
EPHYAR
Ë& 
EPHYAR_DATA_MASK
 : ~0;

1226 
	}
}

1228 
	$DECLARE_RTL_COND
(
πl_îür_c⁄d
)

1230  
	`RTL_R32
(
ç
, 
ERIAR
Ë& 
ERIAR_FLAG
;

1231 
	}
}

1233 
	$πl_îi_wrôe
(
πl8169_¥iv©e
 *
ç
, 
addr
, 
u32
 
mask
,

1234 
u32
 
vÆ
, 
ty≥
)

1236 
	`BUG_ON
((
addr
 & 3Ë|| (
mask
 == 0));

1237 
	`RTL_W32
(
ç
, 
ERIDR
, 
vÆ
);

1238 
	`RTL_W32
(
ç
, 
ERIAR
, 
ERIAR_WRITE_CMD
 | 
ty≥
 | 
mask
 | 
addr
);

1240 
	`πl_udñay_lo›_waô_low
(
ç
, &
πl_îür_c⁄d
, 100, 100);

1241 
	}
}

1243 
u32
 
	$πl_îi_ªad
(
πl8169_¥iv©e
 *
ç
, 
addr
, 
ty≥
)

1245 
	`RTL_W32
(
ç
, 
ERIAR
, 
ERIAR_READ_CMD
 | 
ty≥
 | 
ERIAR_MASK_1111
 | 
addr
);

1247  
	`πl_udñay_lo›_waô_high
(
ç
, &
πl_îür_c⁄d
, 100, 100) ?

1248 
	`RTL_R32
(
ç
, 
ERIDR
) : ~0;

1249 
	}
}

1251 
	$πl_w0w1_îi
(
πl8169_¥iv©e
 *
ç
, 
addr
, 
u32
 
mask
, u32 
p
,

1252 
u32
 
m
, 
ty≥
)

1254 
u32
 
vÆ
;

1256 
vÆ
 = 
	`πl_îi_ªad
(
ç
, 
addr
, 
ty≥
);

1257 
	`πl_îi_wrôe
(
ç
, 
addr
, 
mask
, (
vÆ
 & ~
m
Ë| 
p
, 
ty≥
);

1258 
	}
}

1260 
u32
 
	$r8168dp_o˝_ªad
(
πl8169_¥iv©e
 *
ç
, 
u8
 
mask
, 
u16
 
ªg
)

1262 
	`RTL_W32
(
ç
, 
OCPAR
, ((
u32
)
mask
 & 0x0fË<< 12 | (
ªg
 & 0x0fff));

1263  
	`πl_udñay_lo›_waô_high
(
ç
, &
πl_o˝¨_c⁄d
, 100, 20) ?

1264 
	`RTL_R32
(
ç
, 
OCPDR
) : ~0;

1265 
	}
}

1267 
u32
 
	$r8168ï_o˝_ªad
(
πl8169_¥iv©e
 *
ç
, 
u8
 
mask
, 
u16
 
ªg
)

1269  
	`πl_îi_ªad
(
ç
, 
ªg
, 
ERIAR_OOB
);

1270 
	}
}

1272 
u32
 
	$o˝_ªad
(
πl8169_¥iv©e
 *
ç
, 
u8
 
mask
, 
u16
 
ªg
)

1274 
ç
->
mac_vîsi⁄
) {

1275 
RTL_GIGA_MAC_VER_27
:

1276 
RTL_GIGA_MAC_VER_28
:

1277 
RTL_GIGA_MAC_VER_31
:

1278  
	`r8168dp_o˝_ªad
(
ç
, 
mask
, 
ªg
);

1279 
RTL_GIGA_MAC_VER_49
:

1280 
RTL_GIGA_MAC_VER_50
:

1281 
RTL_GIGA_MAC_VER_51
:

1282  
	`r8168ï_o˝_ªad
(
ç
, 
mask
, 
ªg
);

1284 
	`BUG
();

1287 
	}
}

1289 
	$r8168dp_o˝_wrôe
(
πl8169_¥iv©e
 *
ç
, 
u8
 
mask
, 
u16
 
ªg
,

1290 
u32
 
d©a
)

1292 
	`RTL_W32
(
ç
, 
OCPDR
, 
d©a
);

1293 
	`RTL_W32
(
ç
, 
OCPAR
, 
OCPAR_FLAG
 | ((
u32
)
mask
 & 0x0fË<< 12 | (
ªg
 & 0x0fff));

1294 
	`πl_udñay_lo›_waô_low
(
ç
, &
πl_o˝¨_c⁄d
, 100, 20);

1295 
	}
}

1297 
	$r8168ï_o˝_wrôe
(
πl8169_¥iv©e
 *
ç
, 
u8
 
mask
, 
u16
 
ªg
,

1298 
u32
 
d©a
)

1300 
	`πl_îi_wrôe
(
ç
, 
ªg
, ((
u32
)
mask
 & 0x0fË<< 
ERIAR_MASK_SHIFT
,

1301 
d©a
, 
ERIAR_OOB
);

1302 
	}
}

1304 
	$o˝_wrôe
(
πl8169_¥iv©e
 *
ç
, 
u8
 
mask
, 
u16
 
ªg
, 
u32
 
d©a
)

1306 
ç
->
mac_vîsi⁄
) {

1307 
RTL_GIGA_MAC_VER_27
:

1308 
RTL_GIGA_MAC_VER_28
:

1309 
RTL_GIGA_MAC_VER_31
:

1310 
	`r8168dp_o˝_wrôe
(
ç
, 
mask
, 
ªg
, 
d©a
);

1312 
RTL_GIGA_MAC_VER_49
:

1313 
RTL_GIGA_MAC_VER_50
:

1314 
RTL_GIGA_MAC_VER_51
:

1315 
	`r8168ï_o˝_wrôe
(
ç
, 
mask
, 
ªg
, 
d©a
);

1318 
	`BUG
();

1321 
	}
}

1323 
	$πl8168_oob_nŸify
(
πl8169_¥iv©e
 *
ç
, 
u8
 
cmd
)

1325 
	`πl_îi_wrôe
(
ç
, 0xe8, 
ERIAR_MASK_0001
, 
cmd
, 
ERIAR_EXGMAC
);

1327 
	`o˝_wrôe
(
ç
, 0x1, 0x30, 0x00000001);

1328 
	}
}

1330 
	#OOB_CMD_RESET
 0x00

	)

1331 
	#OOB_CMD_DRIVER_START
 0x05

	)

1332 
	#OOB_CMD_DRIVER_STOP
 0x06

	)

1334 
u16
 
	$πl8168_gë_o˝_ªg
(
πl8169_¥iv©e
 *
ç
)

1336  (
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_31
) ? 0xb8 : 0x10;

1337 
	}
}

1339 
	$DECLARE_RTL_COND
(
πl_o˝_ªad_c⁄d
)

1341 
u16
 
ªg
;

1343 
ªg
 = 
	`πl8168_gë_o˝_ªg
(
ç
);

1345  
	`o˝_ªad
(
ç
, 0x0f, 
ªg
) & 0x00000800;

1346 
	}
}

1348 
	$DECLARE_RTL_COND
(
πl_ï_o˝_ªad_c⁄d
)

1350  
	`o˝_ªad
(
ç
, 0x0f, 0x124) & 0x00000001;

1351 
	}
}

1353 
	$DECLARE_RTL_COND
(
πl_o˝_tx_c⁄d
)

1355  
	`RTL_R8
(
ç
, 
IBISR0
) & 0x20;

1356 
	}
}

1358 
	$πl8168ï_°›_cmac
(
πl8169_¥iv©e
 *
ç
)

1360 
	`RTL_W8
(
ç
, 
IBCR2
, 
	`RTL_R8
(tp, IBCR2) & ~0x01);

1361 
	`πl_m¶ìp_lo›_waô_high
(
ç
, &
πl_o˝_tx_c⁄d
, 50, 2000);

1362 
	`RTL_W8
(
ç
, 
IBISR0
, 
	`RTL_R8
(tp, IBISR0) | 0x20);

1363 
	`RTL_W8
(
ç
, 
IBCR0
, 
	`RTL_R8
(tp, IBCR0) & ~0x01);

1364 
	}
}

1366 
	$πl8168dp_drivî_°¨t
(
πl8169_¥iv©e
 *
ç
)

1368 
	`πl8168_oob_nŸify
(
ç
, 
OOB_CMD_DRIVER_START
);

1369 
	`πl_m¶ìp_lo›_waô_high
(
ç
, &
πl_o˝_ªad_c⁄d
, 10, 10);

1370 
	}
}

1372 
	$πl8168ï_drivî_°¨t
(
πl8169_¥iv©e
 *
ç
)

1374 
	`o˝_wrôe
(
ç
, 0x01, 0x180, 
OOB_CMD_DRIVER_START
);

1375 
	`o˝_wrôe
(
ç
, 0x01, 0x30, 
	`o˝_ªad
(tp, 0x01, 0x30) | 0x01);

1376 
	`πl_m¶ìp_lo›_waô_high
(
ç
, &
πl_ï_o˝_ªad_c⁄d
, 10, 10);

1377 
	}
}

1379 
	$πl8168_drivî_°¨t
(
πl8169_¥iv©e
 *
ç
)

1381 
ç
->
mac_vîsi⁄
) {

1382 
RTL_GIGA_MAC_VER_27
:

1383 
RTL_GIGA_MAC_VER_28
:

1384 
RTL_GIGA_MAC_VER_31
:

1385 
	`πl8168dp_drivî_°¨t
(
ç
);

1387 
RTL_GIGA_MAC_VER_49
:

1388 
RTL_GIGA_MAC_VER_50
:

1389 
RTL_GIGA_MAC_VER_51
:

1390 
	`πl8168ï_drivî_°¨t
(
ç
);

1393 
	`BUG
();

1396 
	}
}

1398 
	$πl8168dp_drivî_°›
(
πl8169_¥iv©e
 *
ç
)

1400 
	`πl8168_oob_nŸify
(
ç
, 
OOB_CMD_DRIVER_STOP
);

1401 
	`πl_m¶ìp_lo›_waô_low
(
ç
, &
πl_o˝_ªad_c⁄d
, 10, 10);

1402 
	}
}

1404 
	$πl8168ï_drivî_°›
(
πl8169_¥iv©e
 *
ç
)

1406 
	`πl8168ï_°›_cmac
(
ç
);

1407 
	`o˝_wrôe
(
ç
, 0x01, 0x180, 
OOB_CMD_DRIVER_STOP
);

1408 
	`o˝_wrôe
(
ç
, 0x01, 0x30, 
	`o˝_ªad
(tp, 0x01, 0x30) | 0x01);

1409 
	`πl_m¶ìp_lo›_waô_low
(
ç
, &
πl_ï_o˝_ªad_c⁄d
, 10, 10);

1410 
	}
}

1412 
	$πl8168_drivî_°›
(
πl8169_¥iv©e
 *
ç
)

1414 
ç
->
mac_vîsi⁄
) {

1415 
RTL_GIGA_MAC_VER_27
:

1416 
RTL_GIGA_MAC_VER_28
:

1417 
RTL_GIGA_MAC_VER_31
:

1418 
	`πl8168dp_drivî_°›
(
ç
);

1420 
RTL_GIGA_MAC_VER_49
:

1421 
RTL_GIGA_MAC_VER_50
:

1422 
RTL_GIGA_MAC_VER_51
:

1423 
	`πl8168ï_drivî_°›
(
ç
);

1426 
	`BUG
();

1429 
	}
}

1431 
boﬁ
 
	$r8168dp_check_dash
(
πl8169_¥iv©e
 *
ç
)

1433 
u16
 
ªg
 = 
	`πl8168_gë_o˝_ªg
(
ç
);

1435  !!(
	`o˝_ªad
(
ç
, 0x0f, 
ªg
) & 0x00008000);

1436 
	}
}

1438 
boﬁ
 
	$r8168ï_check_dash
(
πl8169_¥iv©e
 *
ç
)

1440  !!(
	`o˝_ªad
(
ç
, 0x0f, 0x128) & 0x00000001);

1441 
	}
}

1443 
boﬁ
 
	$r8168_check_dash
(
πl8169_¥iv©e
 *
ç
)

1445 
ç
->
mac_vîsi⁄
) {

1446 
RTL_GIGA_MAC_VER_27
:

1447 
RTL_GIGA_MAC_VER_28
:

1448 
RTL_GIGA_MAC_VER_31
:

1449  
	`r8168dp_check_dash
(
ç
);

1450 
RTL_GIGA_MAC_VER_49
:

1451 
RTL_GIGA_MAC_VER_50
:

1452 
RTL_GIGA_MAC_VER_51
:

1453  
	`r8168ï_check_dash
(
ç
);

1455  
Ál£
;

1457 
	}
}

1459 
	sexgmac_ªg
 {

1460 
u16
 
	maddr
;

1461 
u16
 
	mmask
;

1462 
u32
 
	mvÆ
;

1465 
	$πl_wrôe_exgmac_b©ch
(
πl8169_¥iv©e
 *
ç
,

1466 c⁄° 
exgmac_ªg
 *
r
, 
Àn
)

1468 
Àn
-- > 0) {

1469 
	`πl_îi_wrôe
(
ç
, 
r
->
addr
,Ñ->
mask
,Ñ->
vÆ
, 
ERIAR_EXGMAC
);

1470 
r
++;

1472 
	}
}

1474 
	$DECLARE_RTL_COND
(
πl_efu£¨_c⁄d
)

1476  
	`RTL_R32
(
ç
, 
EFUSEAR
Ë& 
EFUSEAR_FLAG
;

1477 
	}
}

1479 
u8
 
	$πl8168d_efu£_ªad
(
πl8169_¥iv©e
 *
ç
, 
ªg_addr
)

1481 
	`RTL_W32
(
ç
, 
EFUSEAR
, (
ªg_addr
 & 
EFUSEAR_REG_MASK
Ë<< 
EFUSEAR_REG_SHIFT
);

1483  
	`πl_udñay_lo›_waô_high
(
ç
, &
πl_efu£¨_c⁄d
, 100, 300) ?

1484 
	`RTL_R32
(
ç
, 
EFUSEAR
Ë& 
EFUSEAR_DATA_MASK
 : ~0;

1485 
	}
}

1487 
u16
 
	$πl_gë_evíts
(
πl8169_¥iv©e
 *
ç
)

1489  
	`RTL_R16
(
ç
, 
I¡rSètus
);

1490 
	}
}

1492 
	$πl_ack_evíts
(
πl8169_¥iv©e
 *
ç
, 
u16
 
bôs
)

1494 
	`RTL_W16
(
ç
, 
I¡rSètus
, 
bôs
);

1495 
	`mmiowb
();

1496 
	}
}

1498 
	$πl_úq_dißbÀ
(
πl8169_¥iv©e
 *
ç
)

1500 
	`RTL_W16
(
ç
, 
I¡rMask
, 0);

1501 
	`mmiowb
();

1502 
	}
}

1504 
	$πl_úq_íabÀ
(
πl8169_¥iv©e
 *
ç
, 
u16
 
bôs
)

1506 
	`RTL_W16
(
ç
, 
I¡rMask
, 
bôs
);

1507 
	}
}

1509 
	#RTL_EVENT_NAPI_RX
 (
RxOK
 | 
RxEº
)

	)

1510 
	#RTL_EVENT_NAPI_TX
 (
TxOK
 | 
TxEº
)

	)

1511 
	#RTL_EVENT_NAPI
 (
RTL_EVENT_NAPI_RX
 | 
RTL_EVENT_NAPI_TX
)

	)

1513 
	$πl_úq_íabÀ_Æl
(
πl8169_¥iv©e
 *
ç
)

1515 
	`πl_úq_íabÀ
(
ç
, 
RTL_EVENT_NAPI
 |Åp->
evít_¶ow
);

1516 
	}
}

1518 
	$πl8169_úq_mask_™d_ack
(
πl8169_¥iv©e
 *
ç
)

1520 
	`πl_úq_dißbÀ
(
ç
);

1521 
	`πl_ack_evíts
(
ç
, 
RTL_EVENT_NAPI
 |Åp->
evít_¶ow
);

1522 
	`RTL_R8
(
ç
, 
ChùCmd
);

1523 
	}
}

1525 
	$πl8169_tbi_ª£t_≥ndög
(
πl8169_¥iv©e
 *
ç
)

1527  
	`RTL_R32
(
ç
, 
TBICSR
Ë& 
TBIRe£t
;

1528 
	}
}

1530 
	$πl8169_xmii_ª£t_≥ndög
(
πl8169_¥iv©e
 *
ç
)

1532  
	`πl_ªadphy
(
ç
, 
MII_BMCR
Ë& 
BMCR_RESET
;

1533 
	}
}

1535 
	$πl8169_tbi_lök_ok
(
πl8169_¥iv©e
 *
ç
)

1537  
	`RTL_R32
(
ç
, 
TBICSR
Ë& 
TBILökOk
;

1538 
	}
}

1540 
	$πl8169_xmii_lök_ok
(
πl8169_¥iv©e
 *
ç
)

1542  
	`RTL_R8
(
ç
, 
PHY°©us
Ë& 
LökSètus
;

1543 
	}
}

1545 
	$πl8169_tbi_ª£t_íabÀ
(
πl8169_¥iv©e
 *
ç
)

1547 
	`RTL_W32
(
ç
, 
TBICSR
, 
	`RTL_R32
—p, TBICSRË| 
TBIRe£t
);

1548 
	}
}

1550 
	$πl8169_xmii_ª£t_íabÀ
(
πl8169_¥iv©e
 *
ç
)

1552 
vÆ
;

1554 
vÆ
 = 
	`πl_ªadphy
(
ç
, 
MII_BMCR
Ë| 
BMCR_RESET
;

1555 
	`πl_wrôïhy
(
ç
, 
MII_BMCR
, 
vÆ
 & 0xffff);

1556 
	}
}

1558 
	$πl_lök_chg_∑tch
(
πl8169_¥iv©e
 *
ç
)

1560 
√t_devi˚
 *
dev
 = 
ç
->dev;

1562 i‡(!
	`√tif_ru¬ög
(
dev
))

1565 i‡(
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_34
 ||

1566 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_38
) {

1567 i‡(
	`RTL_R8
(
ç
, 
PHY°©us
Ë& 
_1000bpsF
) {

1568 
	`πl_îi_wrôe
(
ç
, 0x1bc, 
ERIAR_MASK_1111
, 0x00000011,

1569 
ERIAR_EXGMAC
);

1570 
	`πl_îi_wrôe
(
ç
, 0x1dc, 
ERIAR_MASK_1111
, 0x00000005,

1571 
ERIAR_EXGMAC
);

1572 } i‡(
	`RTL_R8
(
ç
, 
PHY°©us
Ë& 
_100bps
) {

1573 
	`πl_îi_wrôe
(
ç
, 0x1bc, 
ERIAR_MASK_1111
, 0x0000001f,

1574 
ERIAR_EXGMAC
);

1575 
	`πl_îi_wrôe
(
ç
, 0x1dc, 
ERIAR_MASK_1111
, 0x00000005,

1576 
ERIAR_EXGMAC
);

1578 
	`πl_îi_wrôe
(
ç
, 0x1bc, 
ERIAR_MASK_1111
, 0x0000001f,

1579 
ERIAR_EXGMAC
);

1580 
	`πl_îi_wrôe
(
ç
, 0x1dc, 
ERIAR_MASK_1111
, 0x0000003f,

1581 
ERIAR_EXGMAC
);

1584 
	`πl_w0w1_îi
(
ç
, 0xdc, 
ERIAR_MASK_0001
, 0x00, 0x01,

1585 
ERIAR_EXGMAC
);

1586 
	`πl_w0w1_îi
(
ç
, 0xdc, 
ERIAR_MASK_0001
, 0x01, 0x00,

1587 
ERIAR_EXGMAC
);

1588 } i‡(
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_35
 ||

1589 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_36
) {

1590 i‡(
	`RTL_R8
(
ç
, 
PHY°©us
Ë& 
_1000bpsF
) {

1591 
	`πl_îi_wrôe
(
ç
, 0x1bc, 
ERIAR_MASK_1111
, 0x00000011,

1592 
ERIAR_EXGMAC
);

1593 
	`πl_îi_wrôe
(
ç
, 0x1dc, 
ERIAR_MASK_1111
, 0x00000005,

1594 
ERIAR_EXGMAC
);

1596 
	`πl_îi_wrôe
(
ç
, 0x1bc, 
ERIAR_MASK_1111
, 0x0000001f,

1597 
ERIAR_EXGMAC
);

1598 
	`πl_îi_wrôe
(
ç
, 0x1dc, 
ERIAR_MASK_1111
, 0x0000003f,

1599 
ERIAR_EXGMAC
);

1601 } i‡(
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_37
) {

1602 i‡(
	`RTL_R8
(
ç
, 
PHY°©us
Ë& 
_10bps
) {

1603 
	`πl_îi_wrôe
(
ç
, 0x1d0, 
ERIAR_MASK_0011
, 0x4d02,

1604 
ERIAR_EXGMAC
);

1605 
	`πl_îi_wrôe
(
ç
, 0x1dc, 
ERIAR_MASK_0011
, 0x0060,

1606 
ERIAR_EXGMAC
);

1608 
	`πl_îi_wrôe
(
ç
, 0x1d0, 
ERIAR_MASK_0011
, 0x0000,

1609 
ERIAR_EXGMAC
);

1612 
	}
}

1614 
	$πl8169_check_lök_°©us
(
√t_devi˚
 *
dev
,

1615 
πl8169_¥iv©e
 *
ç
)

1617 
devi˚
 *
d
 = 
	`ç_to_dev
(
ç
);

1619 i‡(
ç
->
	`lök_ok
(tp)) {

1620 
	`πl_lök_chg_∑tch
(
ç
);

1622 
	`pm_ªque°_ªsume
(
d
);

1623 
	`√tif_ˇºõr_⁄
(
dev
);

1624 i‡(
	`√t_øãlimô
())

1625 
	`√tif_öfo
(
ç
, 
ifup
, 
dev
, "link up\n");

1627 
	`√tif_ˇºõr_off
(
dev
);

1628 
	`√tif_öfo
(
ç
, 
ifdown
, 
dev
, "link down\n");

1629 
	`pm_ru¡ime_idÀ
(
d
);

1631 
	}
}

1633 
	#WAKE_ANY
 (
WAKE_PHY
 | 
WAKE_MAGIC
 | 
WAKE_UCAST
 | 
WAKE_BCAST
 | 
WAKE_MCAST
)

	)

1635 
u32
 
	$__πl8169_gë_wﬁ
(
πl8169_¥iv©e
 *
ç
)

1637 
u8
 
›ti⁄s
;

1638 
u32
 
wﬁ›ts
 = 0;

1640 
›ti⁄s
 = 
	`RTL_R8
(
ç
, 
C⁄fig1
);

1641 i‡(!(
›ti⁄s
 & 
PME«bÀ
))

1644 
›ti⁄s
 = 
	`RTL_R8
(
ç
, 
C⁄fig3
);

1645 i‡(
›ti⁄s
 & 
LökUp
)

1646 
wﬁ›ts
 |
WAKE_PHY
;

1647 
ç
->
mac_vîsi⁄
) {

1648 
RTL_GIGA_MAC_VER_34
:

1649 
RTL_GIGA_MAC_VER_35
:

1650 
RTL_GIGA_MAC_VER_36
:

1651 
RTL_GIGA_MAC_VER_37
:

1652 
RTL_GIGA_MAC_VER_38
:

1653 
RTL_GIGA_MAC_VER_40
:

1654 
RTL_GIGA_MAC_VER_41
:

1655 
RTL_GIGA_MAC_VER_42
:

1656 
RTL_GIGA_MAC_VER_43
:

1657 
RTL_GIGA_MAC_VER_44
:

1658 
RTL_GIGA_MAC_VER_45
:

1659 
RTL_GIGA_MAC_VER_46
:

1660 
RTL_GIGA_MAC_VER_47
:

1661 
RTL_GIGA_MAC_VER_48
:

1662 
RTL_GIGA_MAC_VER_49
:

1663 
RTL_GIGA_MAC_VER_50
:

1664 
RTL_GIGA_MAC_VER_51
:

1665 i‡(
	`πl_îi_ªad
(
ç
, 0xdc, 
ERIAR_EXGMAC
Ë& 
MagicPackë_v2
)

1666 
wﬁ›ts
 |
WAKE_MAGIC
;

1669 i‡(
›ti⁄s
 & 
MagicPackë
)

1670 
wﬁ›ts
 |
WAKE_MAGIC
;

1674 
›ti⁄s
 = 
	`RTL_R8
(
ç
, 
C⁄fig5
);

1675 i‡(
›ti⁄s
 & 
UWF
)

1676 
wﬁ›ts
 |
WAKE_UCAST
;

1677 i‡(
›ti⁄s
 & 
BWF
)

1678 
wﬁ›ts
 |
WAKE_BCAST
;

1679 i‡(
›ti⁄s
 & 
MWF
)

1680 
wﬁ›ts
 |
WAKE_MCAST
;

1682  
wﬁ›ts
;

1683 
	}
}

1685 
	$πl8169_gë_wﬁ
(
√t_devi˚
 *
dev
, 
ëhtoﬁ_wﬁöfo
 *
wﬁ
)

1687 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

1688 
devi˚
 *
d
 = 
	`ç_to_dev
(
ç
);

1690 
	`pm_ru¡ime_gë_n‹esume
(
d
);

1692 
	`πl_lock_w‹k
(
ç
);

1694 
wﬁ
->
suµ‹ãd
 = 
WAKE_ANY
;

1695 i‡(
	`pm_ru¡ime_a˘ive
(
d
))

1696 
wﬁ
->
wﬁ›ts
 = 
	`__πl8169_gë_wﬁ
(
ç
);

1698 
wﬁ
->
wﬁ›ts
 = 
ç
->
ßved_wﬁ›ts
;

1700 
	`πl_u∆ock_w‹k
(
ç
);

1702 
	`pm_ru¡ime_put_noidÀ
(
d
);

1703 
	}
}

1705 
	$__πl8169_£t_wﬁ
(
πl8169_¥iv©e
 *
ç
, 
u32
 
wﬁ›ts
)

1707 
i
, 
tmp
;

1709 
u32
 
›t
;

1710 
u16
 
ªg
;

1711 
u8
 
mask
;

1712 } 
cfg
[] = {

1713 { 
WAKE_PHY
, 
C⁄fig3
, 
LökUp
 },

1714 { 
WAKE_UCAST
, 
C⁄fig5
, 
UWF
 },

1715 { 
WAKE_BCAST
, 
C⁄fig5
, 
BWF
 },

1716 { 
WAKE_MCAST
, 
C⁄fig5
, 
MWF
 },

1717 { 
WAKE_ANY
, 
C⁄fig5
, 
L™Wake
 },

1718 { 
WAKE_MAGIC
, 
C⁄fig3
, 
MagicPackë
 }

1720 
u8
 
›ti⁄s
;

1722 
	`RTL_W8
(
ç
, 
Cfg9346
, 
Cfg9346_U∆ock
);

1724 
ç
->
mac_vîsi⁄
) {

1725 
RTL_GIGA_MAC_VER_34
:

1726 
RTL_GIGA_MAC_VER_35
:

1727 
RTL_GIGA_MAC_VER_36
:

1728 
RTL_GIGA_MAC_VER_37
:

1729 
RTL_GIGA_MAC_VER_38
:

1730 
RTL_GIGA_MAC_VER_40
:

1731 
RTL_GIGA_MAC_VER_41
:

1732 
RTL_GIGA_MAC_VER_42
:

1733 
RTL_GIGA_MAC_VER_43
:

1734 
RTL_GIGA_MAC_VER_44
:

1735 
RTL_GIGA_MAC_VER_45
:

1736 
RTL_GIGA_MAC_VER_46
:

1737 
RTL_GIGA_MAC_VER_47
:

1738 
RTL_GIGA_MAC_VER_48
:

1739 
RTL_GIGA_MAC_VER_49
:

1740 
RTL_GIGA_MAC_VER_50
:

1741 
RTL_GIGA_MAC_VER_51
:

1742 
tmp
 = 
	`ARRAY_SIZE
(
cfg
) - 1;

1743 i‡(
wﬁ›ts
 & 
WAKE_MAGIC
)

1744 
	`πl_w0w1_îi
(
ç
,

1746 
ERIAR_MASK_0100
,

1747 
MagicPackë_v2
,

1749 
ERIAR_EXGMAC
);

1751 
	`πl_w0w1_îi
(
ç
,

1753 
ERIAR_MASK_0100
,

1755 
MagicPackë_v2
,

1756 
ERIAR_EXGMAC
);

1759 
tmp
 = 
	`ARRAY_SIZE
(
cfg
);

1763 
i
 = 0; i < 
tmp
; i++) {

1764 
›ti⁄s
 = 
	`RTL_R8
(
ç
, 
cfg
[
i
].
ªg
Ë& ~cfg[i].
mask
;

1765 i‡(
wﬁ›ts
 & 
cfg
[
i
].
›t
)

1766 
›ti⁄s
 |
cfg
[
i
].
mask
;

1767 
	`RTL_W8
(
ç
, 
cfg
[
i
].
ªg
, 
›ti⁄s
);

1770 
ç
->
mac_vîsi⁄
) {

1771 
RTL_GIGA_MAC_VER_01
 ... 
RTL_GIGA_MAC_VER_17
:

1772 
›ti⁄s
 = 
	`RTL_R8
(
ç
, 
C⁄fig1
Ë& ~
PME«bÀ
;

1773 i‡(
wﬁ›ts
)

1774 
›ti⁄s
 |
PME«bÀ
;

1775 
	`RTL_W8
(
ç
, 
C⁄fig1
, 
›ti⁄s
);

1778 
›ti⁄s
 = 
	`RTL_R8
(
ç
, 
C⁄fig2
Ë& ~
PME_SIGNAL
;

1779 i‡(
wﬁ›ts
)

1780 
›ti⁄s
 |
PME_SIGNAL
;

1781 
	`RTL_W8
(
ç
, 
C⁄fig2
, 
›ti⁄s
);

1785 
	`RTL_W8
(
ç
, 
Cfg9346
, 
Cfg9346_Lock
);

1786 
	}
}

1788 
	$πl8169_£t_wﬁ
(
√t_devi˚
 *
dev
, 
ëhtoﬁ_wﬁöfo
 *
wﬁ
)

1790 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

1791 
devi˚
 *
d
 = 
	`ç_to_dev
(
ç
);

1793 
	`pm_ru¡ime_gë_n‹esume
(
d
);

1795 
	`πl_lock_w‹k
(
ç
);

1797 i‡(
	`pm_ru¡ime_a˘ive
(
d
))

1798 
	`__πl8169_£t_wﬁ
(
ç
, 
wﬁ
->
wﬁ›ts
);

1800 
ç
->
ßved_wﬁ›ts
 = 
wﬁ
->
wﬁ›ts
;

1802 
	`πl_u∆ock_w‹k
(
ç
);

1804 
	`devi˚_£t_wakeup_íabÀ
(
d
, 
wﬁ
->
wﬁ›ts
);

1806 
	`pm_ru¡ime_put_noidÀ
(
d
);

1809 
	}
}

1811 c⁄° *
	$πl_lookup_fúmw¨e_«me
(
πl8169_¥iv©e
 *
ç
)

1813  
πl_chù_öfos
[
ç
->
mac_vîsi⁄
].
fw_«me
;

1814 
	}
}

1816 
	$πl8169_gë_drvöfo
(
√t_devi˚
 *
dev
,

1817 
ëhtoﬁ_drvöfo
 *
öfo
)

1819 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

1820 
πl_fw
 *πl_fw = 
ç
->rtl_fw;

1822 
	`°æ˝y
(
öfo
->
drivî
, 
MODULENAME
, (info->driver));

1823 
	`°æ˝y
(
öfo
->
vîsi⁄
, 
RTL8169_VERSION
, (info->version));

1824 
	`°æ˝y
(
öfo
->
bus_öfo
, 
	`pci_«me
(
ç
->
pci_dev
), (info->bus_info));

1825 
	`BUILD_BUG_ON
((
öfo
->
fw_vîsi⁄
Ë< (
πl_fw
->
vîsi⁄
));

1826 i‡(!
	`IS_ERR_OR_NULL
(
πl_fw
))

1827 
	`°æ˝y
(
öfo
->
fw_vîsi⁄
, 
πl_fw
->
vîsi⁄
,

1828 (
öfo
->
fw_vîsi⁄
));

1829 
	}
}

1831 
	$πl8169_gë_ªgs_Àn
(
√t_devi˚
 *
dev
)

1833  
R8169_REGS_SIZE
;

1834 
	}
}

1836 
	$πl8169_£t_•ìd_tbi
(
√t_devi˚
 *
dev
,

1837 
u8
 
aut⁄eg
, 
u16
 
•ìd
, u8 
du∂ex
, 
u32
 
ign‹ed
)

1839 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

1840 
ªt
 = 0;

1841 
u32
 
ªg
;

1843 
ªg
 = 
	`RTL_R32
(
ç
, 
TBICSR
);

1844 i‡((
aut⁄eg
 =
AUTONEG_DISABLE
Ë&& (
•ìd
 =
SPEED_1000
) &&

1845 (
du∂ex
 =
DUPLEX_FULL
)) {

1846 
	`RTL_W32
(
ç
, 
TBICSR
, 
ªg
 & ~(
TBINwE«bÀ
 | 
TBINwRe°¨t
));

1847 } i‡(
aut⁄eg
 =
AUTONEG_ENABLE
)

1848 
	`RTL_W32
(
ç
, 
TBICSR
, 
ªg
 | 
TBINwE«bÀ
 | 
TBINwRe°¨t
);

1850 
	`√tif_w¨n
(
ç
, 
lök
, 
dev
,

1852 
ªt
 = -
EOPNOTSUPP
;

1855  
ªt
;

1856 
	}
}

1858 
	$πl8169_£t_•ìd_xmii
(
√t_devi˚
 *
dev
,

1859 
u8
 
aut⁄eg
, 
u16
 
•ìd
, u8 
du∂ex
, 
u32
 
adv
)

1861 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

1862 
giga_˘æ
, 
bm¸
;

1863 
rc
 = -
EINVAL
;

1865 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

1867 i‡(
aut⁄eg
 =
AUTONEG_ENABLE
) {

1868 
auto_√go
;

1870 
auto_√go
 = 
	`πl_ªadphy
(
ç
, 
MII_ADVERTISE
);

1871 
auto_√go
 &~(
ADVERTISE_10HALF
 | 
ADVERTISE_10FULL
 |

1872 
ADVERTISE_100HALF
 | 
ADVERTISE_100FULL
);

1874 i‡(
adv
 & 
ADVERTISED_10ba£T_HÆf
)

1875 
auto_√go
 |
ADVERTISE_10HALF
;

1876 i‡(
adv
 & 
ADVERTISED_10ba£T_FuŒ
)

1877 
auto_√go
 |
ADVERTISE_10FULL
;

1878 i‡(
adv
 & 
ADVERTISED_100ba£T_HÆf
)

1879 
auto_√go
 |
ADVERTISE_100HALF
;

1880 i‡(
adv
 & 
ADVERTISED_100ba£T_FuŒ
)

1881 
auto_√go
 |
ADVERTISE_100FULL
;

1883 
auto_√go
 |
ADVERTISE_PAUSE_CAP
 | 
ADVERTISE_PAUSE_ASYM
;

1885 
giga_˘æ
 = 
	`πl_ªadphy
(
ç
, 
MII_CTRL1000
);

1886 
giga_˘æ
 &~(
ADVERTISE_1000FULL
 | 
ADVERTISE_1000HALF
);

1889 i‡(
ç
->
mii
.
suµ‹ts_gmii
) {

1890 i‡(
adv
 & 
ADVERTISED_1000ba£T_HÆf
)

1891 
giga_˘æ
 |
ADVERTISE_1000HALF
;

1892 i‡(
adv
 & 
ADVERTISED_1000ba£T_FuŒ
)

1893 
giga_˘æ
 |
ADVERTISE_1000FULL
;

1894 } i‡(
adv
 & (
ADVERTISED_1000ba£T_HÆf
 |

1895 
ADVERTISED_1000ba£T_FuŒ
)) {

1896 
	`√tif_öfo
(
ç
, 
lök
, 
dev
,

1898 
out
;

1901 
bm¸
 = 
BMCR_ANENABLE
 | 
BMCR_ANRESTART
;

1903 
	`πl_wrôïhy
(
ç
, 
MII_ADVERTISE
, 
auto_√go
);

1904 
	`πl_wrôïhy
(
ç
, 
MII_CTRL1000
, 
giga_˘æ
);

1906 i‡(
•ìd
 =
SPEED_10
)

1907 
bm¸
 = 0;

1908 i‡(
•ìd
 =
SPEED_100
)

1909 
bm¸
 = 
BMCR_SPEED100
;

1911 
out
;

1913 i‡(
du∂ex
 =
DUPLEX_FULL
)

1914 
bm¸
 |
BMCR_FULLDPLX
;

1917 
	`πl_wrôïhy
(
ç
, 
MII_BMCR
, 
bm¸
);

1919 i‡(
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_02
 ||

1920 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_03
) {

1921 i‡((
•ìd
 =
SPEED_100
Ë&& (
aut⁄eg
 !
AUTONEG_ENABLE
)) {

1922 
	`πl_wrôïhy
(
ç
, 0x17, 0x2138);

1923 
	`πl_wrôïhy
(
ç
, 0x0e, 0x0260);

1925 
	`πl_wrôïhy
(
ç
, 0x17, 0x2108);

1926 
	`πl_wrôïhy
(
ç
, 0x0e, 0x0000);

1930 
rc
 = 0;

1931 
out
:

1932  
rc
;

1933 
	}
}

1935 
	$πl8169_£t_•ìd
(
√t_devi˚
 *
dev
,

1936 
u8
 
aut⁄eg
, 
u16
 
•ìd
, u8 
du∂ex
, 
u32
 
advîtisög
)

1938 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

1939 
ªt
;

1941 
ªt
 = 
ç
->
	`£t_•ìd
(
dev
, 
aut⁄eg
, 
•ìd
, 
du∂ex
, 
advîtisög
);

1942 i‡(
ªt
 < 0)

1943 
out
;

1945 i‡(
	`√tif_ru¬ög
(
dev
Ë&& (
aut⁄eg
 =
AUTONEG_ENABLE
) &&

1946 (
advîtisög
 & 
ADVERTISED_1000ba£T_FuŒ
) &&

1947 !
	`pci_is_pcõ
(
ç
->
pci_dev
)) {

1948 
	`mod_timî
(&
ç
->
timî
, 
jiffõs
 + 
RTL8169_PHY_TIMEOUT
);

1950 
out
:

1951  
ªt
;

1952 
	}
}

1954 
√tdev_„©uªs_t
 
	$πl8169_fix_„©uªs
(
√t_devi˚
 *
dev
,

1955 
√tdev_„©uªs_t
 
„©uªs
)

1957 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

1959 i‡(
dev
->
mtu
 > 
TD_MSS_MAX
)

1960 
„©uªs
 &~
NETIF_F_ALL_TSO
;

1962 i‡(
dev
->
mtu
 > 
JUMBO_1K
 &&

1963 !
πl_chù_öfos
[
ç
->
mac_vîsi⁄
].
jumbo_tx_csum
)

1964 
„©uªs
 &~
NETIF_F_IP_CSUM
;

1966  
„©uªs
;

1967 
	}
}

1969 
	$__πl8169_£t_„©uªs
(
√t_devi˚
 *
dev
,

1970 
√tdev_„©uªs_t
 
„©uªs
)

1972 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

1973 
u32
 
rx_c⁄fig
;

1975 
rx_c⁄fig
 = 
	`RTL_R32
(
ç
, 
RxC⁄fig
);

1976 i‡(
„©uªs
 & 
NETIF_F_RXALL
)

1977 
rx_c⁄fig
 |(
Ac˚±Eº
 | 
Ac˚±Ru¡
);

1979 
rx_c⁄fig
 &~(
Ac˚±Eº
 | 
Ac˚±Ru¡
);

1981 
	`RTL_W32
(
ç
, 
RxC⁄fig
, 
rx_c⁄fig
);

1983 i‡(
„©uªs
 & 
NETIF_F_RXCSUM
)

1984 
ç
->
˝_cmd
 |
RxChkSum
;

1986 
ç
->
˝_cmd
 &~
RxChkSum
;

1988 i‡(
„©uªs
 & 
NETIF_F_HW_VLAN_CTAG_RX
)

1989 
ç
->
˝_cmd
 |
RxVœn
;

1991 
ç
->
˝_cmd
 &~
RxVœn
;

1993 
ç
->
˝_cmd
 |
	`RTL_R16
—p, 
CPlusCmd
Ë& ~(
RxVœn
 | 
RxChkSum
);

1995 
	`RTL_W16
(
ç
, 
CPlusCmd
,Åp->
˝_cmd
);

1996 
	`RTL_R16
(
ç
, 
CPlusCmd
);

1997 
	}
}

1999 
	$πl8169_£t_„©uªs
(
√t_devi˚
 *
dev
,

2000 
√tdev_„©uªs_t
 
„©uªs
)

2002 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

2004 
„©uªs
 &
NETIF_F_RXALL
 | 
NETIF_F_RXCSUM
 | 
NETIF_F_HW_VLAN_CTAG_RX
;

2006 
	`πl_lock_w‹k
(
ç
);

2007 i‡(
„©uªs
 ^ 
dev
->features)

2008 
	`__πl8169_£t_„©uªs
(
dev
, 
„©uªs
);

2009 
	`πl_u∆ock_w‹k
(
ç
);

2012 
	}
}

2015 
ölöe
 
u32
 
	$πl8169_tx_vœn_èg
(
sk_buff
 *
skb
)

2017  (
	`skb_vœn_èg_¥e£¡
(
skb
)) ?

2018 
TxVœnTag
 | 
	`swab16
(
	`skb_vœn_èg_gë
(
skb
)) : 0x00;

2019 
	}
}

2021 
	$πl8169_rx_vœn_èg
(
RxDesc
 *
desc
, 
sk_buff
 *
skb
)

2023 
u32
 
›ts2
 = 
	`À32_to_˝u
(
desc
->opts2);

2025 i‡(
›ts2
 & 
RxVœnTag
)

2026 
	`__vœn_hwac˚l_put_èg
(
skb
, 
	`ht⁄s
(
ETH_P_8021Q
), 
	`swab16
(
›ts2
 & 0xffff));

2027 
	}
}

2029 
	$πl8169_gë_lök_k£âögs_tbi
(
√t_devi˚
 *
dev
,

2030 
ëhtoﬁ_lök_k£âögs
 *
cmd
)

2032 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

2033 
u32
 
°©us
;

2034 
u32
 
suµ‹ãd
, 
advîtisög
;

2036 
suµ‹ãd
 =

2037 
SUPPORTED_1000ba£T_FuŒ
 | 
SUPPORTED_Aut⁄eg
 | 
SUPPORTED_FIBRE
;

2038 
cmd
->
ba£
.
p‹t
 = 
PORT_FIBRE
;

2040 
°©us
 = 
	`RTL_R32
(
ç
, 
TBICSR
);

2041 
advîtisög
 = (
°©us
 & 
TBINwE«bÀ
Ë? 
ADVERTISED_Aut⁄eg
 : 0;

2042 
cmd
->
ba£
.
aut⁄eg
 = !!(
°©us
 & 
TBINwE«bÀ
);

2044 
cmd
->
ba£
.
•ìd
 = 
SPEED_1000
;

2045 
cmd
->
ba£
.
du∂ex
 = 
DUPLEX_FULL
;

2047 
	`ëhtoﬁ_c⁄vît_Àgacy_u32_to_lök_mode
(
cmd
->
lök_modes
.
suµ‹ãd
,

2048 
suµ‹ãd
);

2049 
	`ëhtoﬁ_c⁄vît_Àgacy_u32_to_lök_mode
(
cmd
->
lök_modes
.
advîtisög
,

2050 
advîtisög
);

2053 
	}
}

2055 
	$πl8169_gë_lök_k£âögs_xmii
(
√t_devi˚
 *
dev
,

2056 
ëhtoﬁ_lök_k£âögs
 *
cmd
)

2058 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

2060 
	`mii_ëhtoﬁ_gë_lök_k£âögs
(&
ç
->
mii
, 
cmd
);

2063 
	}
}

2065 
	$πl8169_gë_lök_k£âögs
(
√t_devi˚
 *
dev
,

2066 
ëhtoﬁ_lök_k£âögs
 *
cmd
)

2068 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

2069 
rc
;

2071 
	`πl_lock_w‹k
(
ç
);

2072 
rc
 = 
ç
->
	`gë_lök_k£âögs
(
dev
, 
cmd
);

2073 
	`πl_u∆ock_w‹k
(
ç
);

2075  
rc
;

2076 
	}
}

2078 
	$πl8169_£t_lök_k£âögs
(
√t_devi˚
 *
dev
,

2079 c⁄° 
ëhtoﬁ_lök_k£âögs
 *
cmd
)

2081 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

2082 
rc
;

2083 
u32
 
advîtisög
;

2085 i‡(!
	`ëhtoﬁ_c⁄vît_lök_mode_to_Àgacy_u32
(&
advîtisög
,

2086 
cmd
->
lök_modes
.
advîtisög
))

2087  -
EINVAL
;

2089 
	`dñ_timî_sync
(&
ç
->
timî
);

2091 
	`πl_lock_w‹k
(
ç
);

2092 
rc
 = 
	`πl8169_£t_•ìd
(
dev
, 
cmd
->
ba£
.
aut⁄eg
, cmd->ba£.
•ìd
,

2093 
cmd
->
ba£
.
du∂ex
, 
advîtisög
);

2094 
	`πl_u∆ock_w‹k
(
ç
);

2096  
rc
;

2097 
	}
}

2099 
	$πl8169_gë_ªgs
(
√t_devi˚
 *
dev
, 
ëhtoﬁ_ªgs
 *
ªgs
,

2100 *
p
)

2102 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

2103 
u32
 
__iomem
 *
d©a
 = 
ç
->
mmio_addr
;

2104 
u32
 *
dw
 = 
p
;

2105 
i
;

2107 
	`πl_lock_w‹k
(
ç
);

2108 
i
 = 0; i < 
R8169_REGS_SIZE
; i += 4)

2109 
	`mem˝y_‰omio
(
dw
++, 
d©a
++, 4);

2110 
	`πl_u∆ock_w‹k
(
ç
);

2111 
	}
}

2113 
u32
 
	$πl8169_gë_msgÀvñ
(
√t_devi˚
 *
dev
)

2115 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

2117  
ç
->
msg_íabÀ
;

2118 
	}
}

2120 
	$πl8169_£t_msgÀvñ
(
√t_devi˚
 *
dev
, 
u32
 
vÆue
)

2122 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

2124 
ç
->
msg_íabÀ
 = 
vÆue
;

2125 
	}
}

2127 c⁄° 
	gπl8169_g°rögs
[][
ETH_GSTRING_LEN
] = {

2143 
	$πl8169_gë_s£t_cou¡
(
√t_devi˚
 *
dev
, 
s£t
)

2145 
s£t
) {

2146 
ETH_SS_STATS
:

2147  
	`ARRAY_SIZE
(
πl8169_g°rögs
);

2149  -
EOPNOTSUPP
;

2151 
	}
}

2153 
	$DECLARE_RTL_COND
(
πl_cou¡îs_c⁄d
)

2155  
	`RTL_R32
(
ç
, 
Cou¡îAddrLow
Ë& (
Cou¡îRe£t
 | 
Cou¡îDump
);

2156 
	}
}

2158 
boﬁ
 
	$πl8169_do_cou¡îs
(
√t_devi˚
 *
dev
, 
u32
 
cou¡î_cmd
)

2160 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

2161 
dma_addr_t
 
∑ddr
 = 
ç
->
cou¡îs_phys_addr
;

2162 
u32
 
cmd
;

2164 
	`RTL_W32
(
ç
, 
Cou¡îAddrHigh
, (
u64
)
∑ddr
 >> 32);

2165 
	`RTL_R32
(
ç
, 
Cou¡îAddrHigh
);

2166 
cmd
 = (
u64
)
∑ddr
 & 
	`DMA_BIT_MASK
(32);

2167 
	`RTL_W32
(
ç
, 
Cou¡îAddrLow
, 
cmd
);

2168 
	`RTL_W32
(
ç
, 
Cou¡îAddrLow
, 
cmd
 | 
cou¡î_cmd
);

2170  
	`πl_udñay_lo›_waô_low
(
ç
, &
πl_cou¡îs_c⁄d
, 10, 1000);

2171 
	}
}

2173 
boﬁ
 
	$πl8169_ª£t_cou¡îs
(
√t_devi˚
 *
dev
)

2175 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

2181 i‡(
ç
->
mac_vîsi⁄
 < 
RTL_GIGA_MAC_VER_19
)

2182  
åue
;

2184  
	`πl8169_do_cou¡îs
(
dev
, 
Cou¡îRe£t
);

2185 
	}
}

2187 
boﬁ
 
	$πl8169_upd©e_cou¡îs
(
√t_devi˚
 *
dev
)

2189 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

2195 i‡((
	`RTL_R8
(
ç
, 
ChùCmd
Ë& 
CmdRxEnb
) == 0)

2196  
åue
;

2198  
	`πl8169_do_cou¡îs
(
dev
, 
Cou¡îDump
);

2199 
	}
}

2201 
boﬁ
 
	$πl8169_öô_cou¡î_off£ts
(
√t_devi˚
 *
dev
)

2203 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

2204 
πl8169_cou¡îs
 *
cou¡îs
 = 
ç
->counters;

2205 
boﬁ
 
ªt
 = 
Ál£
;

2222 i‡(
ç
->
tc_off£t
.
öôed
)

2223  
åue
;

2226 i‡(
	`πl8169_ª£t_cou¡îs
(
dev
))

2227 
ªt
 = 
åue
;

2229 i‡(
	`πl8169_upd©e_cou¡îs
(
dev
))

2230 
ªt
 = 
åue
;

2232 
ç
->
tc_off£t
.
tx_îr‹s
 = 
cou¡îs
->tx_errors;

2233 
ç
->
tc_off£t
.
tx_mu…i_cﬁlisi⁄
 = 
cou¡îs
->tx_multi_collision;

2234 
ç
->
tc_off£t
.
tx_ab‹ãd
 = 
cou¡îs
->tx_aborted;

2235 
ç
->
tc_off£t
.
öôed
 = 
åue
;

2237  
ªt
;

2238 
	}
}

2240 
	$πl8169_gë_ëhtoﬁ_°©s
(
√t_devi˚
 *
dev
,

2241 
ëhtoﬁ_°©s
 *
°©s
, 
u64
 *
d©a
)

2243 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

2244 
devi˚
 *
d
 = 
	`ç_to_dev
(
ç
);

2245 
πl8169_cou¡îs
 *
cou¡îs
 = 
ç
->counters;

2247 
	`ASSERT_RTNL
();

2249 
	`pm_ru¡ime_gë_n‹esume
(
d
);

2251 i‡(
	`pm_ru¡ime_a˘ive
(
d
))

2252 
	`πl8169_upd©e_cou¡îs
(
dev
);

2254 
	`pm_ru¡ime_put_noidÀ
(
d
);

2256 
d©a
[0] = 
	`À64_to_˝u
(
cou¡îs
->
tx_∑ckës
);

2257 
d©a
[1] = 
	`À64_to_˝u
(
cou¡îs
->
rx_∑ckës
);

2258 
d©a
[2] = 
	`À64_to_˝u
(
cou¡îs
->
tx_îr‹s
);

2259 
d©a
[3] = 
	`À32_to_˝u
(
cou¡îs
->
rx_îr‹s
);

2260 
d©a
[4] = 
	`À16_to_˝u
(
cou¡îs
->
rx_mis£d
);

2261 
d©a
[5] = 
	`À16_to_˝u
(
cou¡îs
->
Æign_îr‹s
);

2262 
d©a
[6] = 
	`À32_to_˝u
(
cou¡îs
->
tx_⁄e_cﬁlisi⁄
);

2263 
d©a
[7] = 
	`À32_to_˝u
(
cou¡îs
->
tx_mu…i_cﬁlisi⁄
);

2264 
d©a
[8] = 
	`À64_to_˝u
(
cou¡îs
->
rx_uniˇ°
);

2265 
d©a
[9] = 
	`À64_to_˝u
(
cou¡îs
->
rx_brﬂdˇ°
);

2266 
d©a
[10] = 
	`À32_to_˝u
(
cou¡îs
->
rx_mu…iˇ°
);

2267 
d©a
[11] = 
	`À16_to_˝u
(
cou¡îs
->
tx_ab‹ãd
);

2268 
d©a
[12] = 
	`À16_to_˝u
(
cou¡îs
->
tx_undîun
);

2269 
	}
}

2271 
	$πl8169_gë_°rögs
(
√t_devi˚
 *
dev
, 
u32
 
°rög£t
, 
u8
 *
d©a
)

2273 
°rög£t
) {

2274 
ETH_SS_STATS
:

2275 
	`mem˝y
(
d©a
, *
πl8169_g°rögs
, (rtl8169_gstrings));

2278 
	}
}

2280 
	$πl8169_nway_ª£t
(
√t_devi˚
 *
dev
)

2282 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

2284  
	`mii_nway_ª°¨t
(&
ç
->
mii
);

2285 
	}
}

2316 
	sπl_cﬂÀs˚_sˇÀ
 {

2318 
u32
 
	mn£cs
[2];

2322 
	sπl_cﬂÀs˚_öfo
 {

2323 
u32
 
	m•ìd
;

2324 
πl_cﬂÀs˚_sˇÀ
 
	msˇÀv
[4];

2328 
	#rxtx_x1822
(
r
, 
t
) { \

2329 {{(
r
), (
t
)}}, \

2330 {{(
r
)*8, (
t
)*8}}, \

2331 {{(
r
)*8*2, (
t
)*8*2}}, \

2332 {{(
r
)*8*2*2, (
t
)*8*2*2}}, \

2333 }

	)

2334 c⁄° 
πl_cﬂÀs˚_öfo
 
	gπl_cﬂÀs˚_öfo_8169
[] = {

2336 { 
SPEED_10
, 
rxtx_x1822
(40960, 40960) },

2337 { 
SPEED_100
, 
rxtx_x1822
( 2560, 2560) },

2338 { 
SPEED_1000
, 
rxtx_x1822
( 320, 320) },

2342 c⁄° 
πl_cﬂÀs˚_öfo
 
	gπl_cﬂÀs˚_öfo_8168_8136
[] = {

2344 { 
SPEED_10
, 
rxtx_x1822
(40960, 40960) },

2345 { 
SPEED_100
, 
rxtx_x1822
( 2560, 2560) },

2346 { 
SPEED_1000
, 
rxtx_x1822
( 5000, 5000) },

2349 #unde‡
rxtx_x1822


2352 c⁄° 
πl_cﬂÀs˚_öfo
 *
	$πl_cﬂÀs˚_öfo
(
√t_devi˚
 *
dev
)

2354 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

2355 
ëhtoﬁ_lök_k£âögs
 
ecmd
;

2356 c⁄° 
πl_cﬂÀs˚_öfo
 *
ci
;

2357 
rc
;

2359 
rc
 = 
	`πl8169_gë_lök_k£âögs
(
dev
, &
ecmd
);

2360 i‡(
rc
 < 0)

2361  
	`ERR_PTR
(
rc
);

2363 
ci
 = 
ç
->
cﬂÀs˚_öfo
; ci->
•ìd
 != 0; ci++) {

2364 i‡(
ecmd
.
ba£
.
•ìd
 =
ci
->speed) {

2365  
ci
;

2369  
	`ERR_PTR
(-
ELNRNG
);

2370 
	}
}

2372 
	$πl_gë_cﬂÀs˚
(
√t_devi˚
 *
dev
, 
ëhtoﬁ_cﬂÀs˚
 *
ec
)

2374 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

2375 c⁄° 
πl_cﬂÀs˚_öfo
 *
ci
;

2376 c⁄° 
πl_cﬂÀs˚_sˇÀ
 *
sˇÀ
;

2378 
u32
 *
max_‰ames
;

2379 
u32
 *
u£cs
;

2380 } 
cﬂl_£âögs
 [] = {

2381 { &
ec
->
rx_max_cﬂÀs˚d_‰ames
, &ec->
rx_cﬂÀs˚_u£cs
 },

2382 { &
ec
->
tx_max_cﬂÀs˚d_‰ames
, &ec->
tx_cﬂÀs˚_u£cs
 }

2383 }, *
p
 = 
cﬂl_£âögs
;

2384 
i
;

2385 
u16
 
w
;

2387 
	`mem£t
(
ec
, 0, (*ec));

2390 
ci
 = 
	`πl_cﬂÀs˚_öfo
(
dev
);

2391 i‡(
	`IS_ERR
(
ci
))

2392  
	`PTR_ERR
(
ci
);

2394 
sˇÀ
 = &
ci
->
sˇÀv
[
	`RTL_R16
(
ç
, 
CPlusCmd
) & 3];

2397 
w
 = 
	`RTL_R16
(
ç
, 
I¡rMôig©e
); w; w >>
RTL_COALESCE_SHIFT
, 
p
++) {

2398 *
p
->
max_‰ames
 = (
w
 & 
RTL_COALESCE_MASK
) << 2;

2399 
w
 >>
RTL_COALESCE_SHIFT
;

2400 *
p
->
u£cs
 = 
w
 & 
RTL_COALESCE_MASK
;

2403 
i
 = 0; i < 2; i++) {

2404 
p
 = 
cﬂl_£âögs
 + 
i
;

2405 *
p
->
u£cs
 = (*p->u£c†* 
sˇÀ
->
n£cs
[
i
]) / 1000;

2411 i‡(!*
p
->
u£cs
 && !*p->
max_‰ames
)

2412 *
p
->
max_‰ames
 = 1;

2416 
	}
}

2419 c⁄° 
πl_cﬂÀs˚_sˇÀ
 *
	$πl_cﬂÀs˚_choo£_sˇÀ
(

2420 
√t_devi˚
 *
dev
, 
u32
 
n£c
, 
u16
 *
˝01
)

2422 c⁄° 
πl_cﬂÀs˚_öfo
 *
ci
;

2423 
u16
 
i
;

2425 
ci
 = 
	`πl_cﬂÀs˚_öfo
(
dev
);

2426 i‡(
	`IS_ERR
(
ci
))

2427  
	`ERR_CAST
(
ci
);

2429 
i
 = 0; i < 4; i++) {

2430 
u32
 
rxtx_maxsˇÀ
 = 
	`max
(
ci
->
sˇÀv
[
i
].
n£cs
[0],

2431 
ci
->
sˇÀv
[
i
].
n£cs
[1]);

2432 i‡(
n£c
 <
rxtx_maxsˇÀ
 * 
RTL_COALESCE_T_MAX
) {

2433 *
˝01
 = 
i
;

2434  &
ci
->
sˇÀv
[
i
];

2438  
	`ERR_PTR
(-
EINVAL
);

2439 
	}
}

2441 
	$πl_£t_cﬂÀs˚
(
√t_devi˚
 *
dev
, 
ëhtoﬁ_cﬂÀs˚
 *
ec
)

2443 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

2444 c⁄° 
πl_cﬂÀs˚_sˇÀ
 *
sˇÀ
;

2446 
u32
 
‰ames
;

2447 
u32
 
u£cs
;

2448 } 
cﬂl_£âögs
 [] = {

2449 { 
ec
->
rx_max_cﬂÀs˚d_‰ames
,Éc->
rx_cﬂÀs˚_u£cs
 },

2450 { 
ec
->
tx_max_cﬂÀs˚d_‰ames
,Éc->
tx_cﬂÀs˚_u£cs
 }

2451 }, *
p
 = 
cﬂl_£âögs
;

2452 
u16
 
w
 = 0, 
˝01
;

2453 
i
;

2455 
sˇÀ
 = 
	`πl_cﬂÀs˚_choo£_sˇÀ
(
dev
,

2456 
	`max
(
p
[0].
u£cs
,Ö[1].u£csË* 1000, &
˝01
);

2457 i‡(
	`IS_ERR
(
sˇÀ
))

2458  
	`PTR_ERR
(
sˇÀ
);

2460 
i
 = 0; i < 2; i++, 
p
++) {

2461 
u32
 
unôs
;

2475 i‡(
p
->
‰ames
 == 1) {

2476 
p
->
‰ames
 = 0;

2479 
unôs
 = 
p
->
u£cs
 * 1000 / 
sˇÀ
->
n£cs
[
i
];

2480 i‡(
p
->
‰ames
 > 
RTL_COALESCE_FRAME_MAX
 ||Ö->frames % 4)

2481  -
EINVAL
;

2483 
w
 <<
RTL_COALESCE_SHIFT
;

2484 
w
 |
unôs
;

2485 
w
 <<
RTL_COALESCE_SHIFT
;

2486 
w
 |
p
->
‰ames
 >> 2;

2489 
	`πl_lock_w‹k
(
ç
);

2491 
	`RTL_W16
(
ç
, 
I¡rMôig©e
, 
	`swab16
(
w
));

2493 
ç
->
˝_cmd
 = (ç->˝_cmd & ~3Ë| 
˝01
;

2494 
	`RTL_W16
(
ç
, 
CPlusCmd
,Åp->
˝_cmd
);

2495 
	`RTL_R16
(
ç
, 
CPlusCmd
);

2497 
	`πl_u∆ock_w‹k
(
ç
);

2500 
	}
}

2502 c⁄° 
ëhtoﬁ_›s
 
	gπl8169_ëhtoﬁ_›s
 = {

2503 .
gë_drvöfo
 = 
πl8169_gë_drvöfo
,

2504 .
	ggë_ªgs_Àn
 = 
πl8169_gë_ªgs_Àn
,

2505 .
	ggë_lök
 = 
ëhtoﬁ_›_gë_lök
,

2506 .
	ggë_cﬂÀs˚
 = 
πl_gë_cﬂÀs˚
,

2507 .
	g£t_cﬂÀs˚
 = 
πl_£t_cﬂÀs˚
,

2508 .
	ggë_msgÀvñ
 = 
πl8169_gë_msgÀvñ
,

2509 .
	g£t_msgÀvñ
 = 
πl8169_£t_msgÀvñ
,

2510 .
	ggë_ªgs
 = 
πl8169_gë_ªgs
,

2511 .
	ggë_wﬁ
 = 
πl8169_gë_wﬁ
,

2512 .
	g£t_wﬁ
 = 
πl8169_£t_wﬁ
,

2513 .
	ggë_°rögs
 = 
πl8169_gë_°rögs
,

2514 .
	ggë_s£t_cou¡
 = 
πl8169_gë_s£t_cou¡
,

2515 .
	ggë_ëhtoﬁ_°©s
 = 
πl8169_gë_ëhtoﬁ_°©s
,

2516 .
	ggë_ts_öfo
 = 
ëhtoﬁ_›_gë_ts_öfo
,

2517 .
	gnway_ª£t
 = 
πl8169_nway_ª£t
,

2518 .
	ggë_lök_k£âögs
 = 
πl8169_gë_lök_k£âögs
,

2519 .
	g£t_lök_k£âögs
 = 
πl8169_£t_lök_k£âögs
,

2522 
	$πl8169_gë_mac_vîsi⁄
(
πl8169_¥iv©e
 *
ç
,

2523 
√t_devi˚
 *
dev
, 
u8
 
deÁu…_vîsi⁄
)

2536 c⁄° 
	sπl_mac_öfo
 {

2537 
u32
 
mask
;

2538 
u32
 
vÆ
;

2539 
mac_vîsi⁄
;

2540 } 
mac_öfo
[] = {

2542 { 0x7cf00000, 0x50200000, 
RTL_GIGA_MAC_VER_51
 },

2543 { 0x7cf00000, 0x50100000, 
RTL_GIGA_MAC_VER_50
 },

2544 { 0x7cf00000, 0x50000000, 
RTL_GIGA_MAC_VER_49
 },

2547 { 0x7cf00000, 0x54100000, 
RTL_GIGA_MAC_VER_46
 },

2548 { 0x7cf00000, 0x54000000, 
RTL_GIGA_MAC_VER_45
 },

2551 { 0x7cf00000, 0x5c800000, 
RTL_GIGA_MAC_VER_44
 },

2552 { 0x7cf00000, 0x50900000, 
RTL_GIGA_MAC_VER_42
 },

2553 { 0x7cf00000, 0x4c100000, 
RTL_GIGA_MAC_VER_41
 },

2554 { 0x7cf00000, 0x4c000000, 
RTL_GIGA_MAC_VER_40
 },

2557 { 0x7c800000, 0x48800000, 
RTL_GIGA_MAC_VER_38
 },

2558 { 0x7cf00000, 0x48100000, 
RTL_GIGA_MAC_VER_36
 },

2559 { 0x7cf00000, 0x48000000, 
RTL_GIGA_MAC_VER_35
 },

2562 { 0x7c800000, 0x2c800000, 
RTL_GIGA_MAC_VER_34
 },

2563 { 0x7cf00000, 0x2c200000, 
RTL_GIGA_MAC_VER_33
 },

2564 { 0x7cf00000, 0x2c100000, 
RTL_GIGA_MAC_VER_32
 },

2565 { 0x7c800000, 0x2c000000, 
RTL_GIGA_MAC_VER_33
 },

2568 { 0x7cf00000, 0x28300000, 
RTL_GIGA_MAC_VER_26
 },

2569 { 0x7cf00000, 0x28100000, 
RTL_GIGA_MAC_VER_25
 },

2570 { 0x7c800000, 0x28000000, 
RTL_GIGA_MAC_VER_26
 },

2573 { 0x7cf00000, 0x28800000, 
RTL_GIGA_MAC_VER_27
 },

2574 { 0x7cf00000, 0x28a00000, 
RTL_GIGA_MAC_VER_28
 },

2575 { 0x7cf00000, 0x28b00000, 
RTL_GIGA_MAC_VER_31
 },

2578 { 0x7cf00000, 0x3cb00000, 
RTL_GIGA_MAC_VER_24
 },

2579 { 0x7cf00000, 0x3c900000, 
RTL_GIGA_MAC_VER_23
 },

2580 { 0x7cf00000, 0x3c800000, 
RTL_GIGA_MAC_VER_18
 },

2581 { 0x7c800000, 0x3c800000, 
RTL_GIGA_MAC_VER_24
 },

2582 { 0x7cf00000, 0x3c000000, 
RTL_GIGA_MAC_VER_19
 },

2583 { 0x7cf00000, 0x3c200000, 
RTL_GIGA_MAC_VER_20
 },

2584 { 0x7cf00000, 0x3c300000, 
RTL_GIGA_MAC_VER_21
 },

2585 { 0x7cf00000, 0x3c400000, 
RTL_GIGA_MAC_VER_22
 },

2586 { 0x7c800000, 0x3c000000, 
RTL_GIGA_MAC_VER_22
 },

2589 { 0x7cf00000, 0x38000000, 
RTL_GIGA_MAC_VER_12
 },

2590 { 0x7cf00000, 0x38500000, 
RTL_GIGA_MAC_VER_17
 },

2591 { 0x7c800000, 0x38000000, 
RTL_GIGA_MAC_VER_17
 },

2592 { 0x7c800000, 0x30000000, 
RTL_GIGA_MAC_VER_11
 },

2595 { 0x7cf00000, 0x44900000, 
RTL_GIGA_MAC_VER_39
 },

2596 { 0x7c800000, 0x44800000, 
RTL_GIGA_MAC_VER_39
 },

2597 { 0x7c800000, 0x44000000, 
RTL_GIGA_MAC_VER_37
 },

2598 { 0x7cf00000, 0x40b00000, 
RTL_GIGA_MAC_VER_30
 },

2599 { 0x7cf00000, 0x40a00000, 
RTL_GIGA_MAC_VER_30
 },

2600 { 0x7cf00000, 0x40900000, 
RTL_GIGA_MAC_VER_29
 },

2601 { 0x7c800000, 0x40800000, 
RTL_GIGA_MAC_VER_30
 },

2602 { 0x7cf00000, 0x34a00000, 
RTL_GIGA_MAC_VER_09
 },

2603 { 0x7cf00000, 0x24a00000, 
RTL_GIGA_MAC_VER_09
 },

2604 { 0x7cf00000, 0x34900000, 
RTL_GIGA_MAC_VER_08
 },

2605 { 0x7cf00000, 0x24900000, 
RTL_GIGA_MAC_VER_08
 },

2606 { 0x7cf00000, 0x34800000, 
RTL_GIGA_MAC_VER_07
 },

2607 { 0x7cf00000, 0x24800000, 
RTL_GIGA_MAC_VER_07
 },

2608 { 0x7cf00000, 0x34000000, 
RTL_GIGA_MAC_VER_13
 },

2609 { 0x7cf00000, 0x34300000, 
RTL_GIGA_MAC_VER_10
 },

2610 { 0x7cf00000, 0x34200000, 
RTL_GIGA_MAC_VER_16
 },

2611 { 0x7c800000, 0x34800000, 
RTL_GIGA_MAC_VER_09
 },

2612 { 0x7c800000, 0x24800000, 
RTL_GIGA_MAC_VER_09
 },

2613 { 0x7c800000, 0x34000000, 
RTL_GIGA_MAC_VER_16
 },

2615 { 0xfc800000, 0x38800000, 
RTL_GIGA_MAC_VER_15
 },

2616 { 0xfc800000, 0x30800000, 
RTL_GIGA_MAC_VER_14
 },

2619 { 0xfc800000, 0x98000000, 
RTL_GIGA_MAC_VER_06
 },

2620 { 0xfc800000, 0x18000000, 
RTL_GIGA_MAC_VER_05
 },

2621 { 0xfc800000, 0x10000000, 
RTL_GIGA_MAC_VER_04
 },

2622 { 0xfc800000, 0x04000000, 
RTL_GIGA_MAC_VER_03
 },

2623 { 0xfc800000, 0x00800000, 
RTL_GIGA_MAC_VER_02
 },

2624 { 0xfc800000, 0x00000000, 
RTL_GIGA_MAC_VER_01
 },

2627 { 0x00000000, 0x00000000, 
RTL_GIGA_MAC_NONE
 }

2629 c⁄° 
πl_mac_öfo
 *
p
 = 
mac_öfo
;

2630 
u32
 
ªg
;

2632 
ªg
 = 
	`RTL_R32
(
ç
, 
TxC⁄fig
);

2633 (
ªg
 & 
p
->
mask
Ë!p->
vÆ
)

2634 
p
++;

2635 
ç
->
mac_vîsi⁄
 = 
p
->mac_version;

2637 i‡(
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_NONE
) {

2638 
	`√tif_nŸi˚
(
ç
, 
¥obe
, 
dev
,

2640 
ç
->
mac_vîsi⁄
 = 
deÁu…_vîsi⁄
;

2641 } i‡(
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_42
) {

2642 
ç
->
mac_vîsi⁄
 =Åp->
mii
.
suµ‹ts_gmii
 ?

2643 
RTL_GIGA_MAC_VER_42
 :

2644 
RTL_GIGA_MAC_VER_43
;

2645 } i‡(
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_45
) {

2646 
ç
->
mac_vîsi⁄
 =Åp->
mii
.
suµ‹ts_gmii
 ?

2647 
RTL_GIGA_MAC_VER_45
 :

2648 
RTL_GIGA_MAC_VER_47
;

2649 } i‡(
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_46
) {

2650 
ç
->
mac_vîsi⁄
 =Åp->
mii
.
suµ‹ts_gmii
 ?

2651 
RTL_GIGA_MAC_VER_46
 :

2652 
RTL_GIGA_MAC_VER_48
;

2654 
	}
}

2656 
	$πl8169_¥öt_mac_vîsi⁄
(
πl8169_¥iv©e
 *
ç
)

2658 
	`d¥ötk
("mac_vîsi⁄ = 0x%02x\n", 
ç
->
mac_vîsi⁄
);

2659 
	}
}

2661 
	sphy_ªg
 {

2662 
u16
 
	mªg
;

2663 
u16
 
	mvÆ
;

2666 
	$πl_wrôïhy_b©ch
(
πl8169_¥iv©e
 *
ç
,

2667 c⁄° 
phy_ªg
 *
ªgs
, 
Àn
)

2669 
Àn
-- > 0) {

2670 
	`πl_wrôïhy
(
ç
, 
ªgs
->
ªg
,Ñegs->
vÆ
);

2671 
ªgs
++;

2673 
	}
}

2675 
	#PHY_READ
 0x00000000

	)

2676 
	#PHY_DATA_OR
 0x10000000

	)

2677 
	#PHY_DATA_AND
 0x20000000

	)

2678 
	#PHY_BJMPN
 0x30000000

	)

2679 
	#PHY_MDIO_CHG
 0x40000000

	)

2680 
	#PHY_CLEAR_READCOUNT
 0x70000000

	)

2681 
	#PHY_WRITE
 0x80000000

	)

2682 
	#PHY_READCOUNT_EQ_SKIP
 0x90000000

	)

2683 
	#PHY_COMP_EQ_SKIPN
 0xa0000000

	)

2684 
	#PHY_COMP_NEQ_SKIPN
 0xb0000000

	)

2685 
	#PHY_WRITE_PREVIOUS
 0xc0000000

	)

2686 
	#PHY_SKIPN
 0xd0000000

	)

2687 
	#PHY_DELAY_MS
 0xe0000000

	)

2689 
	sfw_öfo
 {

2690 
u32
 
	mmagic
;

2691 
	mvîsi⁄
[
RTL_VER_SIZE
];

2692 
__À32
 
	mfw_°¨t
;

2693 
__À32
 
	mfw_Àn
;

2694 
u8
 
	mchksum
;

2695 } 
	g__∑cked
;

2697 
	#FW_OPCODE_SIZE
 (
	`ty≥of
(*((
πl_fw_phy_a˘i⁄
 *)0)->
code
))

	)

2699 
boﬁ
 
	$πl_fw_f‹m©_ok
(
πl8169_¥iv©e
 *
ç
, 
πl_fw
 *rtl_fw)

2701 c⁄° 
fúmw¨e
 *
fw
 = 
πl_fw
->fw;

2702 
fw_öfo
 *fw_öfÿ(fw_öfÿ*)
fw
->
d©a
;

2703 
πl_fw_phy_a˘i⁄
 *
∑
 = &
πl_fw
->
phy_a˘i⁄
;

2704 *
vîsi⁄
 = 
πl_fw
->version;

2705 
boﬁ
 
rc
 = 
Ál£
;

2707 i‡(
fw
->
size
 < 
FW_OPCODE_SIZE
)

2708 
out
;

2710 i‡(!
fw_öfo
->
magic
) {

2711 
size_t
 
i
, 
size
, 
°¨t
;

2712 
u8
 
checksum
 = 0;

2714 i‡(
fw
->
size
 < (*
fw_öfo
))

2715 
out
;

2717 
i
 = 0; i < 
fw
->
size
; i++)

2718 
checksum
 +
fw
->
d©a
[
i
];

2719 i‡(
checksum
 != 0)

2720 
out
;

2722 
°¨t
 = 
	`À32_to_˝u
(
fw_öfo
->
fw_°¨t
);

2723 i‡(
°¨t
 > 
fw
->
size
)

2724 
out
;

2726 
size
 = 
	`À32_to_˝u
(
fw_öfo
->
fw_Àn
);

2727 i‡(
size
 > (
fw
->sizê- 
°¨t
Ë/ 
FW_OPCODE_SIZE
)

2728 
out
;

2730 
	`mem˝y
(
vîsi⁄
, 
fw_öfo
->vîsi⁄, 
RTL_VER_SIZE
);

2732 
∑
->
code
 = (
__À32
 *)(
fw
->
d©a
 + 
°¨t
);

2733 
∑
->
size
 = size;

2735 i‡(
fw
->
size
 % 
FW_OPCODE_SIZE
)

2736 
out
;

2738 
	`°æ˝y
(
vîsi⁄
, 
	`πl_lookup_fúmw¨e_«me
(
ç
), 
RTL_VER_SIZE
);

2740 
∑
->
code
 = (
__À32
 *)
fw
->
d©a
;

2741 
∑
->
size
 = 
fw
->sizê/ 
FW_OPCODE_SIZE
;

2743 
vîsi⁄
[
RTL_VER_SIZE
 - 1] = 0;

2745 
rc
 = 
åue
;

2746 
out
:

2747  
rc
;

2748 
	}
}

2750 
boﬁ
 
	$πl_fw_d©a_ok
(
πl8169_¥iv©e
 *
ç
, 
√t_devi˚
 *
dev
,

2751 
πl_fw_phy_a˘i⁄
 *
∑
)

2753 
boﬁ
 
rc
 = 
Ál£
;

2754 
size_t
 
ödex
;

2756 
ödex
 = 0; index < 
∑
->
size
; index++) {

2757 
u32
 
a˘i⁄
 = 
	`À32_to_˝u
(
∑
->
code
[
ödex
]);

2758 
u32
 
ªgno
 = (
a˘i⁄
 & 0x0fff0000) >> 16;

2760 
a˘i⁄
 & 0xf0000000) {

2761 
PHY_READ
:

2762 
PHY_DATA_OR
:

2763 
PHY_DATA_AND
:

2764 
PHY_MDIO_CHG
:

2765 
PHY_CLEAR_READCOUNT
:

2766 
PHY_WRITE
:

2767 
PHY_WRITE_PREVIOUS
:

2768 
PHY_DELAY_MS
:

2771 
PHY_BJMPN
:

2772 i‡(
ªgno
 > 
ödex
) {

2773 
	`√tif_îr
(
ç
, 
ifup
,Åp->
dev
,

2775 
out
;

2778 
PHY_READCOUNT_EQ_SKIP
:

2779 i‡(
ödex
 + 2 >
∑
->
size
) {

2780 
	`√tif_îr
(
ç
, 
ifup
,Åp->
dev
,

2782 
out
;

2785 
PHY_COMP_EQ_SKIPN
:

2786 
PHY_COMP_NEQ_SKIPN
:

2787 
PHY_SKIPN
:

2788 i‡(
ödex
 + 1 + 
ªgno
 >
∑
->
size
) {

2789 
	`√tif_îr
(
ç
, 
ifup
,Åp->
dev
,

2791 
out
;

2796 
	`√tif_îr
(
ç
, 
ifup
,Åp->
dev
,

2797 "InvÆidá˘i⁄ 0x%08x\n", 
a˘i⁄
);

2798 
out
;

2801 
rc
 = 
åue
;

2802 
out
:

2803  
rc
;

2804 
	}
}

2806 
	$πl_check_fúmw¨e
(
πl8169_¥iv©e
 *
ç
, 
πl_fw
 *rtl_fw)

2808 
√t_devi˚
 *
dev
 = 
ç
->dev;

2809 
rc
 = -
EINVAL
;

2811 i‡(!
	`πl_fw_f‹m©_ok
(
ç
, 
πl_fw
)) {

2812 
	`√tif_îr
(
ç
, 
ifup
, 
dev
, "invalid firmware\n");

2813 
out
;

2816 i‡(
	`πl_fw_d©a_ok
(
ç
, 
dev
, &
πl_fw
->
phy_a˘i⁄
))

2817 
rc
 = 0;

2818 
out
:

2819  
rc
;

2820 
	}
}

2822 
	$πl_phy_wrôe_fw
(
πl8169_¥iv©e
 *
ç
, 
πl_fw
 *rtl_fw)

2824 
πl_fw_phy_a˘i⁄
 *
∑
 = &
πl_fw
->
phy_a˘i⁄
;

2825 
mdio_›s
 
‹g
, *
›s
 = &
ç
->mdio_ops;

2826 
u32
 
¥ed©a
, 
cou¡
;

2827 
size_t
 
ödex
;

2829 
¥ed©a
 = 
cou¡
 = 0;

2830 
‹g
.
wrôe
 = 
›s
->write;

2831 
‹g
.
ªad
 = 
›s
->read;

2833 
ödex
 = 0; index < 
∑
->
size
; ) {

2834 
u32
 
a˘i⁄
 = 
	`À32_to_˝u
(
∑
->
code
[
ödex
]);

2835 
u32
 
d©a
 = 
a˘i⁄
 & 0x0000ffff;

2836 
u32
 
ªgno
 = (
a˘i⁄
 & 0x0fff0000) >> 16;

2838 i‡(!
a˘i⁄
)

2841 
a˘i⁄
 & 0xf0000000) {

2842 
PHY_READ
:

2843 
¥ed©a
 = 
	`πl_ªadphy
(
ç
, 
ªgno
);

2844 
cou¡
++;

2845 
ödex
++;

2847 
PHY_DATA_OR
:

2848 
¥ed©a
 |
d©a
;

2849 
ödex
++;

2851 
PHY_DATA_AND
:

2852 
¥ed©a
 &
d©a
;

2853 
ödex
++;

2855 
PHY_BJMPN
:

2856 
ödex
 -
ªgno
;

2858 
PHY_MDIO_CHG
:

2859 i‡(
d©a
 == 0) {

2860 
›s
->
wrôe
 = 
‹g
.write;

2861 
›s
->
ªad
 = 
‹g
.read;

2862 } i‡(
d©a
 == 1) {

2863 
›s
->
wrôe
 = 
mac_mcu_wrôe
;

2864 
›s
->
ªad
 = 
mac_mcu_ªad
;

2867 
ödex
++;

2869 
PHY_CLEAR_READCOUNT
:

2870 
cou¡
 = 0;

2871 
ödex
++;

2873 
PHY_WRITE
:

2874 
	`πl_wrôïhy
(
ç
, 
ªgno
, 
d©a
);

2875 
ödex
++;

2877 
PHY_READCOUNT_EQ_SKIP
:

2878 
ödex
 +(
cou¡
 =
d©a
) ? 2 : 1;

2880 
PHY_COMP_EQ_SKIPN
:

2881 i‡(
¥ed©a
 =
d©a
)

2882 
ödex
 +
ªgno
;

2883 
ödex
++;

2885 
PHY_COMP_NEQ_SKIPN
:

2886 i‡(
¥ed©a
 !
d©a
)

2887 
ödex
 +
ªgno
;

2888 
ödex
++;

2890 
PHY_WRITE_PREVIOUS
:

2891 
	`πl_wrôïhy
(
ç
, 
ªgno
, 
¥ed©a
);

2892 
ödex
++;

2894 
PHY_SKIPN
:

2895 
ödex
 +
ªgno
 + 1;

2897 
PHY_DELAY_MS
:

2898 
	`mdñay
(
d©a
);

2899 
ödex
++;

2903 
	`BUG
();

2907 
›s
->
wrôe
 = 
‹g
.write;

2908 
›s
->
ªad
 = 
‹g
.read;

2909 
	}
}

2911 
	$πl_ªÀa£_fúmw¨e
(
πl8169_¥iv©e
 *
ç
)

2913 i‡(!
	`IS_ERR_OR_NULL
(
ç
->
πl_fw
)) {

2914 
	`ªÀa£_fúmw¨e
(
ç
->
πl_fw
->
fw
);

2915 
	`k‰ì
(
ç
->
πl_fw
);

2917 
ç
->
πl_fw
 = 
RTL_FIRMWARE_UNKNOWN
;

2918 
	}
}

2920 
	$πl_≠∂y_fúmw¨e
(
πl8169_¥iv©e
 *
ç
)

2922 
πl_fw
 *πl_fw = 
ç
->rtl_fw;

2925 i‡(!
	`IS_ERR_OR_NULL
(
πl_fw
))

2926 
	`πl_phy_wrôe_fw
(
ç
, 
πl_fw
);

2927 
	}
}

2929 
	$πl_≠∂y_fúmw¨e_c⁄d
(
πl8169_¥iv©e
 *
ç
, 
u8
 
ªg
, 
u16
 
vÆ
)

2931 i‡(
	`πl_ªadphy
(
ç
, 
ªg
Ë!
vÆ
)

2932 
	`√tif_w¨n
(
ç
, 
hw
,Åp->
dev
, "chipsetÇotÑeady for firmware\n");

2934 
	`πl_≠∂y_fúmw¨e
(
ç
);

2935 
	}
}

2937 
	$πl8169s_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

2939 c⁄° 
phy_ªg
 
phy_ªg_öô
[] = {

3001 
	`πl_wrôïhy_b©ch
(
ç
, 
phy_ªg_öô
, 
	`ARRAY_SIZE
(phy_reg_init));

3002 
	}
}

3004 
	$πl8169sb_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

3006 c⁄° 
phy_ªg
 
phy_ªg_öô
[] = {

3012 
	`πl_wrôïhy_b©ch
(
ç
, 
phy_ªg_öô
, 
	`ARRAY_SIZE
(phy_reg_init));

3013 
	}
}

3015 
	$πl8169scd_hw_phy_c⁄fig_quúk
(
πl8169_¥iv©e
 *
ç
)

3017 
pci_dev
 *
pdev
 = 
ç
->pci_dev;

3019 i‡((
pdev
->
subsy°em_víd‹
 !
PCI_VENDOR_ID_GIGABYTE
) ||

3020 (
pdev
->
subsy°em_devi˚
 != 0xe000))

3023 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0001);

3024 
	`πl_wrôïhy
(
ç
, 0x10, 0xf01b);

3025 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3026 
	}
}

3028 
	$πl8169scd_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

3030 c⁄° 
phy_ªg
 
phy_ªg_öô
[] = {

3070 
	`πl_wrôïhy_b©ch
(
ç
, 
phy_ªg_öô
, 
	`ARRAY_SIZE
(phy_reg_init));

3072 
	`πl8169scd_hw_phy_c⁄fig_quúk
(
ç
);

3073 
	}
}

3075 
	$πl8169s˚_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

3077 c⁄° 
phy_ªg
 
phy_ªg_öô
[] = {

3125 
	`πl_wrôïhy_b©ch
(
ç
, 
phy_ªg_öô
, 
	`ARRAY_SIZE
(phy_reg_init));

3126 
	}
}

3128 
	$πl8168bb_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

3130 c⁄° 
phy_ªg
 
phy_ªg_öô
[] = {

3135 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0001);

3136 
	`πl_∑tchphy
(
ç
, 0x16, 1 << 0);

3138 
	`πl_wrôïhy_b©ch
(
ç
, 
phy_ªg_öô
, 
	`ARRAY_SIZE
(phy_reg_init));

3139 
	}
}

3141 
	$πl8168bef_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

3143 c⁄° 
phy_ªg
 
phy_ªg_öô
[] = {

3149 
	`πl_wrôïhy_b©ch
(
ç
, 
phy_ªg_öô
, 
	`ARRAY_SIZE
(phy_reg_init));

3150 
	}
}

3152 
	$πl8168˝_1_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

3154 c⁄° 
phy_ªg
 
phy_ªg_öô
[] = {

3162 
	`πl_wrôïhy_b©ch
(
ç
, 
phy_ªg_öô
, 
	`ARRAY_SIZE
(phy_reg_init));

3163 
	}
}

3165 
	$πl8168˝_2_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

3167 c⁄° 
phy_ªg
 
phy_ªg_öô
[] = {

3173 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3174 
	`πl_∑tchphy
(
ç
, 0x14, 1 << 5);

3175 
	`πl_∑tchphy
(
ç
, 0x0d, 1 << 5);

3177 
	`πl_wrôïhy_b©ch
(
ç
, 
phy_ªg_öô
, 
	`ARRAY_SIZE
(phy_reg_init));

3178 
	}
}

3180 
	$πl8168c_1_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

3182 c⁄° 
phy_ªg
 
phy_ªg_öô
[] = {

3202 
	`πl_wrôïhy_b©ch
(
ç
, 
phy_ªg_öô
, 
	`ARRAY_SIZE
(phy_reg_init));

3204 
	`πl_∑tchphy
(
ç
, 0x14, 1 << 5);

3205 
	`πl_∑tchphy
(
ç
, 0x0d, 1 << 5);

3206 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3207 
	}
}

3209 
	$πl8168c_2_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

3211 c⁄° 
phy_ªg
 
phy_ªg_öô
[] = {

3229 
	`πl_wrôïhy_b©ch
(
ç
, 
phy_ªg_öô
, 
	`ARRAY_SIZE
(phy_reg_init));

3231 
	`πl_∑tchphy
(
ç
, 0x16, 1 << 0);

3232 
	`πl_∑tchphy
(
ç
, 0x14, 1 << 5);

3233 
	`πl_∑tchphy
(
ç
, 0x0d, 1 << 5);

3234 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3235 
	}
}

3237 
	$πl8168c_3_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

3239 c⁄° 
phy_ªg
 
phy_ªg_öô
[] = {

3251 
	`πl_wrôïhy_b©ch
(
ç
, 
phy_ªg_öô
, 
	`ARRAY_SIZE
(phy_reg_init));

3253 
	`πl_∑tchphy
(
ç
, 0x16, 1 << 0);

3254 
	`πl_∑tchphy
(
ç
, 0x14, 1 << 5);

3255 
	`πl_∑tchphy
(
ç
, 0x0d, 1 << 5);

3256 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3257 
	}
}

3259 
	$πl8168c_4_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

3261 
	`πl8168c_3_hw_phy_c⁄fig
(
ç
);

3262 
	}
}

3264 
	$πl8168d_1_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

3266 c⁄° 
phy_ªg
 
phy_ªg_öô_0
[] = {

3307 
	`πl_wrôïhy_b©ch
(
ç
, 
phy_ªg_öô_0
, 
	`ARRAY_SIZE
(phy_reg_init_0));

3313 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0002);

3314 
	`πl_w0w1_phy
(
ç
, 0x0b, 0x0010, 0x00ef);

3315 
	`πl_w0w1_phy
(
ç
, 0x0c, 0xa200, 0x5d00);

3317 i‡(
	`πl8168d_efu£_ªad
(
ç
, 0x01) == 0xb1) {

3318 c⁄° 
phy_ªg
 
phy_ªg_öô
[] = {

3326 
vÆ
;

3328 
	`πl_wrôïhy_b©ch
(
ç
, 
phy_ªg_öô
, 
	`ARRAY_SIZE
(phy_reg_init));

3330 
vÆ
 = 
	`πl_ªadphy
(
ç
, 0x0d);

3332 i‡((
vÆ
 & 0x00ff) != 0x006c) {

3333 c⁄° 
u32
 
£t
[] = {

3337 
i
;

3339 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0002);

3341 
vÆ
 &= 0xff00;

3342 
i
 = 0; i < 
	`ARRAY_SIZE
(
£t
); i++)

3343 
	`πl_wrôïhy
(
ç
, 0x0d, 
vÆ
 | 
£t
[
i
]);

3346 c⁄° 
phy_ªg
 
phy_ªg_öô
[] = {

3354 
	`πl_wrôïhy_b©ch
(
ç
, 
phy_ªg_öô
, 
	`ARRAY_SIZE
(phy_reg_init));

3358 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0002);

3359 
	`πl_∑tchphy
(
ç
, 0x0d, 0x0300);

3360 
	`πl_∑tchphy
(
ç
, 0x0f, 0x0010);

3363 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0002);

3364 
	`πl_w0w1_phy
(
ç
, 0x02, 0x0100, 0x0600);

3365 
	`πl_w0w1_phy
(
ç
, 0x03, 0x0000, 0xe000);

3367 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0005);

3368 
	`πl_wrôïhy
(
ç
, 0x05, 0x001b);

3370 
	`πl_≠∂y_fúmw¨e_c⁄d
(
ç
, 
MII_EXPANSION
, 0xbf00);

3372 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3373 
	}
}

3375 
	$πl8168d_2_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

3377 c⁄° 
phy_ªg
 
phy_ªg_öô_0
[] = {

3418 
	`πl_wrôïhy_b©ch
(
ç
, 
phy_ªg_öô_0
, 
	`ARRAY_SIZE
(phy_reg_init_0));

3420 i‡(
	`πl8168d_efu£_ªad
(
ç
, 0x01) == 0xb1) {

3421 c⁄° 
phy_ªg
 
phy_ªg_öô
[] = {

3430 
vÆ
;

3432 
	`πl_wrôïhy_b©ch
(
ç
, 
phy_ªg_öô
, 
	`ARRAY_SIZE
(phy_reg_init));

3434 
vÆ
 = 
	`πl_ªadphy
(
ç
, 0x0d);

3435 i‡((
vÆ
 & 0x00ff) != 0x006c) {

3436 c⁄° 
u32
 
£t
[] = {

3440 
i
;

3442 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0002);

3444 
vÆ
 &= 0xff00;

3445 
i
 = 0; i < 
	`ARRAY_SIZE
(
£t
); i++)

3446 
	`πl_wrôïhy
(
ç
, 0x0d, 
vÆ
 | 
£t
[
i
]);

3449 c⁄° 
phy_ªg
 
phy_ªg_öô
[] = {

3457 
	`πl_wrôïhy_b©ch
(
ç
, 
phy_ªg_öô
, 
	`ARRAY_SIZE
(phy_reg_init));

3461 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0002);

3462 
	`πl_w0w1_phy
(
ç
, 0x02, 0x0100, 0x0600);

3463 
	`πl_w0w1_phy
(
ç
, 0x03, 0x0000, 0xe000);

3466 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0002);

3467 
	`πl_∑tchphy
(
ç
, 0x0f, 0x0017);

3469 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0005);

3470 
	`πl_wrôïhy
(
ç
, 0x05, 0x001b);

3472 
	`πl_≠∂y_fúmw¨e_c⁄d
(
ç
, 
MII_EXPANSION
, 0xb300);

3474 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3475 
	}
}

3477 
	$πl8168d_3_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

3479 c⁄° 
phy_ªg
 
phy_ªg_öô
[] = {

3535 
	`πl_wrôïhy_b©ch
(
ç
, 
phy_ªg_öô
, 
	`ARRAY_SIZE
(phy_reg_init));

3536 
	}
}

3538 
	$πl8168d_4_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

3540 c⁄° 
phy_ªg
 
phy_ªg_öô
[] = {

3550 
	`πl_wrôïhy_b©ch
(
ç
, 
phy_ªg_öô
, 
	`ARRAY_SIZE
(phy_reg_init));

3551 
	`πl_∑tchphy
(
ç
, 0x0d, 1 << 5);

3552 
	}
}

3554 
	$πl8168e_1_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

3556 c⁄° 
phy_ªg
 
phy_ªg_öô
[] = {

3584 
	`πl_≠∂y_fúmw¨e
(
ç
);

3586 
	`πl_wrôïhy_b©ch
(
ç
, 
phy_ªg_öô
, 
	`ARRAY_SIZE
(phy_reg_init));

3589 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0007);

3590 
	`πl_wrôïhy
(
ç
, 0x1e, 0x0023);

3591 
	`πl_w0w1_phy
(
ç
, 0x17, 0x0006, 0x0000);

3592 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3595 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0002);

3596 
	`πl_w0w1_phy
(
ç
, 0x08, 0x8000, 0x7f00);

3597 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3600 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0007);

3601 
	`πl_wrôïhy
(
ç
, 0x1e, 0x002d);

3602 
	`πl_w0w1_phy
(
ç
, 0x18, 0x0050, 0x0000);

3603 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3604 
	`πl_w0w1_phy
(
ç
, 0x14, 0x8000, 0x0000);

3606 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0005);

3607 
	`πl_wrôïhy
(
ç
, 0x05, 0x8b86);

3608 
	`πl_w0w1_phy
(
ç
, 0x06, 0x0001, 0x0000);

3609 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3611 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0005);

3612 
	`πl_wrôïhy
(
ç
, 0x05, 0x8b85);

3613 
	`πl_w0w1_phy
(
ç
, 0x06, 0x0000, 0x2000);

3614 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0007);

3615 
	`πl_wrôïhy
(
ç
, 0x1e, 0x0020);

3616 
	`πl_w0w1_phy
(
ç
, 0x15, 0x0000, 0x1100);

3617 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0006);

3618 
	`πl_wrôïhy
(
ç
, 0x00, 0x5a00);

3619 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3620 
	`πl_wrôïhy
(
ç
, 0x0d, 0x0007);

3621 
	`πl_wrôïhy
(
ç
, 0x0e, 0x003c);

3622 
	`πl_wrôïhy
(
ç
, 0x0d, 0x4007);

3623 
	`πl_wrôïhy
(
ç
, 0x0e, 0x0000);

3624 
	`πl_wrôïhy
(
ç
, 0x0d, 0x0000);

3625 
	}
}

3627 
	$πl_ør_exgmac_£t
(
πl8169_¥iv©e
 *
ç
, 
u8
 *
addr
)

3629 c⁄° 
u16
 
w
[] = {

3630 
addr
[0] | (addr[1] << 8),

3631 
addr
[2] | (addr[3] << 8),

3632 
addr
[4] | (addr[5] << 8)

3634 c⁄° 
exgmac_ªg
 
e
[] = {

3635 { .
addr
 = 0xe0, 
ERIAR_MASK_1111
, .
vÆ
 = 
w
[0] | (w[1] << 16) },

3636 { .
addr
 = 0xe4, 
ERIAR_MASK_1111
, .
vÆ
 = 
w
[2] },

3637 { .
addr
 = 0xf0, 
ERIAR_MASK_1111
, .
vÆ
 = 
w
[0] << 16 },

3638 { .
addr
 = 0xf4, 
ERIAR_MASK_1111
, .
vÆ
 = 
w
[1] | (w[2] << 16) }

3641 
	`πl_wrôe_exgmac_b©ch
(
ç
, 
e
, 
	`ARRAY_SIZE
(e));

3642 
	}
}

3644 
	$πl8168e_2_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

3646 c⁄° 
phy_ªg
 
phy_ªg_öô
[] = {

3673 
	`πl_≠∂y_fúmw¨e
(
ç
);

3675 
	`πl_wrôïhy_b©ch
(
ç
, 
phy_ªg_öô
, 
	`ARRAY_SIZE
(phy_reg_init));

3678 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0005);

3679 
	`πl_wrôïhy
(
ç
, 0x05, 0x8b80);

3680 
	`πl_w0w1_phy
(
ç
, 0x17, 0x0006, 0x0000);

3681 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3684 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0004);

3685 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0007);

3686 
	`πl_wrôïhy
(
ç
, 0x1e, 0x002d);

3687 
	`πl_w0w1_phy
(
ç
, 0x18, 0x0010, 0x0000);

3688 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0002);

3689 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3690 
	`πl_w0w1_phy
(
ç
, 0x14, 0x8000, 0x0000);

3693 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0005);

3694 
	`πl_wrôïhy
(
ç
, 0x05, 0x8b86);

3695 
	`πl_w0w1_phy
(
ç
, 0x06, 0x0001, 0x0000);

3696 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3699 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0005);

3700 
	`πl_wrôïhy
(
ç
, 0x05, 0x8b85);

3701 
	`πl_w0w1_phy
(
ç
, 0x06, 0x4000, 0x0000);

3702 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3705 
	`πl_w0w1_îi
(
ç
, 0x1b0, 
ERIAR_MASK_1111
, 0x0003, 0x0000, 
ERIAR_EXGMAC
);

3706 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0005);

3707 
	`πl_wrôïhy
(
ç
, 0x05, 0x8b85);

3708 
	`πl_w0w1_phy
(
ç
, 0x06, 0x2000, 0x0000);

3709 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0004);

3710 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0007);

3711 
	`πl_wrôïhy
(
ç
, 0x1e, 0x0020);

3712 
	`πl_w0w1_phy
(
ç
, 0x15, 0x0100, 0x0000);

3713 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0002);

3714 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3715 
	`πl_wrôïhy
(
ç
, 0x0d, 0x0007);

3716 
	`πl_wrôïhy
(
ç
, 0x0e, 0x003c);

3717 
	`πl_wrôïhy
(
ç
, 0x0d, 0x4007);

3718 
	`πl_wrôïhy
(
ç
, 0x0e, 0x0006);

3719 
	`πl_wrôïhy
(
ç
, 0x0d, 0x0000);

3722 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0003);

3723 
	`πl_w0w1_phy
(
ç
, 0x19, 0x0001, 0x0000);

3724 
	`πl_w0w1_phy
(
ç
, 0x10, 0x0400, 0x0000);

3725 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3726 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0005);

3727 
	`πl_w0w1_phy
(
ç
, 0x01, 0x0100, 0x0000);

3728 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3731 
	`πl_ør_exgmac_£t
(
ç
,Åp->
dev
->
dev_addr
);

3732 
	}
}

3734 
	$πl8168f_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

3737 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0005);

3738 
	`πl_wrôïhy
(
ç
, 0x05, 0x8b80);

3739 
	`πl_w0w1_phy
(
ç
, 0x06, 0x0006, 0x0000);

3740 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3743 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0007);

3744 
	`πl_wrôïhy
(
ç
, 0x1e, 0x002d);

3745 
	`πl_w0w1_phy
(
ç
, 0x18, 0x0010, 0x0000);

3746 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3747 
	`πl_w0w1_phy
(
ç
, 0x14, 0x8000, 0x0000);

3750 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0005);

3751 
	`πl_wrôïhy
(
ç
, 0x05, 0x8b86);

3752 
	`πl_w0w1_phy
(
ç
, 0x06, 0x0001, 0x0000);

3753 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3754 
	}
}

3756 
	$πl8168f_1_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

3758 c⁄° 
phy_ªg
 
phy_ªg_öô
[] = {

3793 
	`πl_≠∂y_fúmw¨e
(
ç
);

3795 
	`πl_wrôïhy_b©ch
(
ç
, 
phy_ªg_öô
, 
	`ARRAY_SIZE
(phy_reg_init));

3797 
	`πl8168f_hw_phy_c⁄fig
(
ç
);

3800 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0005);

3801 
	`πl_wrôïhy
(
ç
, 0x05, 0x8b85);

3802 
	`πl_w0w1_phy
(
ç
, 0x06, 0x4000, 0x0000);

3803 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3804 
	}
}

3806 
	$πl8168f_2_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

3808 
	`πl_≠∂y_fúmw¨e
(
ç
);

3810 
	`πl8168f_hw_phy_c⁄fig
(
ç
);

3811 
	}
}

3813 
	$πl8411_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

3815 c⁄° 
phy_ªg
 
phy_ªg_öô
[] = {

3851 
	`πl_≠∂y_fúmw¨e
(
ç
);

3853 
	`πl8168f_hw_phy_c⁄fig
(
ç
);

3856 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0005);

3857 
	`πl_wrôïhy
(
ç
, 0x05, 0x8b85);

3858 
	`πl_w0w1_phy
(
ç
, 0x06, 0x4000, 0x0000);

3859 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3861 
	`πl_wrôïhy_b©ch
(
ç
, 
phy_ªg_öô
, 
	`ARRAY_SIZE
(phy_reg_init));

3864 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0005);

3865 
	`πl_wrôïhy
(
ç
, 0x05, 0x8b54);

3866 
	`πl_w0w1_phy
(
ç
, 0x06, 0x0000, 0x0800);

3867 
	`πl_wrôïhy
(
ç
, 0x05, 0x8b5d);

3868 
	`πl_w0w1_phy
(
ç
, 0x06, 0x0000, 0x0800);

3869 
	`πl_wrôïhy
(
ç
, 0x05, 0x8a7c);

3870 
	`πl_w0w1_phy
(
ç
, 0x06, 0x0000, 0x0100);

3871 
	`πl_wrôïhy
(
ç
, 0x05, 0x8a7f);

3872 
	`πl_w0w1_phy
(
ç
, 0x06, 0x0100, 0x0000);

3873 
	`πl_wrôïhy
(
ç
, 0x05, 0x8a82);

3874 
	`πl_w0w1_phy
(
ç
, 0x06, 0x0000, 0x0100);

3875 
	`πl_wrôïhy
(
ç
, 0x05, 0x8a85);

3876 
	`πl_w0w1_phy
(
ç
, 0x06, 0x0000, 0x0100);

3877 
	`πl_wrôïhy
(
ç
, 0x05, 0x8a88);

3878 
	`πl_w0w1_phy
(
ç
, 0x06, 0x0000, 0x0100);

3879 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3882 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0005);

3883 
	`πl_wrôïhy
(
ç
, 0x05, 0x8b85);

3884 
	`πl_w0w1_phy
(
ç
, 0x06, 0x8000, 0x0000);

3885 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3888 
	`πl_w0w1_îi
(
ç
, 0x1b0, 
ERIAR_MASK_0001
, 0x00, 0x03, 
ERIAR_EXGMAC
);

3889 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0005);

3890 
	`πl_wrôïhy
(
ç
, 0x05, 0x8b85);

3891 
	`πl_w0w1_phy
(
ç
, 0x06, 0x0000, 0x2000);

3892 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0004);

3893 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0007);

3894 
	`πl_wrôïhy
(
ç
, 0x1e, 0x0020);

3895 
	`πl_w0w1_phy
(
ç
, 0x15, 0x0000, 0x0100);

3896 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3897 
	`πl_wrôïhy
(
ç
, 0x0d, 0x0007);

3898 
	`πl_wrôïhy
(
ç
, 0x0e, 0x003c);

3899 
	`πl_wrôïhy
(
ç
, 0x0d, 0x4007);

3900 
	`πl_wrôïhy
(
ç
, 0x0e, 0x0000);

3901 
	`πl_wrôïhy
(
ç
, 0x0d, 0x0000);

3904 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0003);

3905 
	`πl_w0w1_phy
(
ç
, 0x19, 0x0000, 0x0001);

3906 
	`πl_w0w1_phy
(
ç
, 0x10, 0x0000, 0x0400);

3907 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3908 
	}
}

3910 
	$πl8168g_1_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

3912 
	`πl_≠∂y_fúmw¨e
(
ç
);

3914 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a46);

3915 i‡(
	`πl_ªadphy
(
ç
, 0x10) & 0x0100) {

3916 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0bcc);

3917 
	`πl_w0w1_phy
(
ç
, 0x12, 0x0000, 0x8000);

3919 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0bcc);

3920 
	`πl_w0w1_phy
(
ç
, 0x12, 0x8000, 0x0000);

3923 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a46);

3924 i‡(
	`πl_ªadphy
(
ç
, 0x13) & 0x0100) {

3925 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0c41);

3926 
	`πl_w0w1_phy
(
ç
, 0x15, 0x0002, 0x0000);

3928 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0c41);

3929 
	`πl_w0w1_phy
(
ç
, 0x15, 0x0000, 0x0002);

3933 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a44);

3934 
	`πl_w0w1_phy
(
ç
, 0x11, 0x000c, 0x0000);

3936 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0bcc);

3937 
	`πl_w0w1_phy
(
ç
, 0x14, 0x0100, 0x0000);

3938 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a44);

3939 
	`πl_w0w1_phy
(
ç
, 0x11, 0x00c0, 0x0000);

3940 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a43);

3941 
	`πl_wrôïhy
(
ç
, 0x13, 0x8084);

3942 
	`πl_w0w1_phy
(
ç
, 0x14, 0x0000, 0x6000);

3943 
	`πl_w0w1_phy
(
ç
, 0x10, 0x1003, 0x0000);

3946 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a4b);

3947 
	`πl_w0w1_phy
(
ç
, 0x11, 0x0004, 0x0000);

3950 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a43);

3951 
	`πl_wrôïhy
(
ç
, 0x13, 0x8012);

3952 
	`πl_w0w1_phy
(
ç
, 0x14, 0x8000, 0x0000);

3954 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0c42);

3955 
	`πl_w0w1_phy
(
ç
, 0x11, 0x4000, 0x2000);

3958 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0bcd);

3959 
	`πl_wrôïhy
(
ç
, 0x14, 0x5065);

3960 
	`πl_wrôïhy
(
ç
, 0x14, 0xd065);

3961 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0bc8);

3962 
	`πl_wrôïhy
(
ç
, 0x11, 0x5655);

3963 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0bcd);

3964 
	`πl_wrôïhy
(
ç
, 0x14, 0x1065);

3965 
	`πl_wrôïhy
(
ç
, 0x14, 0x9065);

3966 
	`πl_wrôïhy
(
ç
, 0x14, 0x1065);

3969 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a43);

3970 i‡(
	`πl_ªadphy
(
ç
, 0x10) & 0x0004)

3971 
	`πl_w0w1_phy
(
ç
, 0x10, 0x0000, 0x0004);

3973 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3974 
	}
}

3976 
	$πl8168g_2_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

3978 
	`πl_≠∂y_fúmw¨e
(
ç
);

3979 
	}
}

3981 
	$πl8168h_1_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

3983 
u16
 
dout_èpbö
;

3984 
u32
 
d©a
;

3986 
	`πl_≠∂y_fúmw¨e
(
ç
);

3989 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a43);

3990 
	`πl_wrôïhy
(
ç
, 0x13, 0x809b);

3991 
	`πl_w0w1_phy
(
ç
, 0x14, 0x8000, 0xf800);

3992 
	`πl_wrôïhy
(
ç
, 0x13, 0x80a2);

3993 
	`πl_w0w1_phy
(
ç
, 0x14, 0x8000, 0xff00);

3994 
	`πl_wrôïhy
(
ç
, 0x13, 0x80a4);

3995 
	`πl_w0w1_phy
(
ç
, 0x14, 0x8500, 0xff00);

3996 
	`πl_wrôïhy
(
ç
, 0x13, 0x809c);

3997 
	`πl_w0w1_phy
(
ç
, 0x14, 0xbd00, 0xff00);

3998 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

4001 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a43);

4002 
	`πl_wrôïhy
(
ç
, 0x13, 0x80ad);

4003 
	`πl_w0w1_phy
(
ç
, 0x14, 0x7000, 0xf800);

4004 
	`πl_wrôïhy
(
ç
, 0x13, 0x80b4);

4005 
	`πl_w0w1_phy
(
ç
, 0x14, 0x5000, 0xff00);

4006 
	`πl_wrôïhy
(
ç
, 0x13, 0x80ac);

4007 
	`πl_w0w1_phy
(
ç
, 0x14, 0x4000, 0xff00);

4008 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

4011 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a43);

4012 
	`πl_wrôïhy
(
ç
, 0x13, 0x808e);

4013 
	`πl_w0w1_phy
(
ç
, 0x14, 0x1200, 0xff00);

4014 
	`πl_wrôïhy
(
ç
, 0x13, 0x8090);

4015 
	`πl_w0w1_phy
(
ç
, 0x14, 0xe500, 0xff00);

4016 
	`πl_wrôïhy
(
ç
, 0x13, 0x8092);

4017 
	`πl_w0w1_phy
(
ç
, 0x14, 0x9f00, 0xff00);

4018 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

4021 
dout_èpbö
 = 0;

4022 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a46);

4023 
d©a
 = 
	`πl_ªadphy
(
ç
, 0x13);

4024 
d©a
 &= 3;

4025 
d©a
 <<= 2;

4026 
dout_èpbö
 |
d©a
;

4027 
d©a
 = 
	`πl_ªadphy
(
ç
, 0x12);

4028 
d©a
 &= 0xc000;

4029 
d©a
 >>= 14;

4030 
dout_èpbö
 |
d©a
;

4031 
dout_èpbö
 = ~(dout_tapbin^0x08);

4032 
dout_èpbö
 <<= 12;

4033 
dout_èpbö
 &= 0xf000;

4034 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a43);

4035 
	`πl_wrôïhy
(
ç
, 0x13, 0x827a);

4036 
	`πl_w0w1_phy
(
ç
, 0x14, 
dout_èpbö
, 0xf000);

4037 
	`πl_wrôïhy
(
ç
, 0x13, 0x827b);

4038 
	`πl_w0w1_phy
(
ç
, 0x14, 
dout_èpbö
, 0xf000);

4039 
	`πl_wrôïhy
(
ç
, 0x13, 0x827c);

4040 
	`πl_w0w1_phy
(
ç
, 0x14, 
dout_èpbö
, 0xf000);

4041 
	`πl_wrôïhy
(
ç
, 0x13, 0x827d);

4042 
	`πl_w0w1_phy
(
ç
, 0x14, 
dout_èpbö
, 0xf000);

4044 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a43);

4045 
	`πl_wrôïhy
(
ç
, 0x13, 0x0811);

4046 
	`πl_w0w1_phy
(
ç
, 0x14, 0x0800, 0x0000);

4047 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a42);

4048 
	`πl_w0w1_phy
(
ç
, 0x16, 0x0002, 0x0000);

4049 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

4052 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a44);

4053 
	`πl_w0w1_phy
(
ç
, 0x11, 0x0800, 0x0000);

4054 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

4057 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0bca);

4058 
	`πl_w0w1_phy
(
ç
, 0x17, 0x4000, 0x3000);

4059 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

4061 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a43);

4062 
	`πl_wrôïhy
(
ç
, 0x13, 0x803f);

4063 
	`πl_w0w1_phy
(
ç
, 0x14, 0x0000, 0x3000);

4064 
	`πl_wrôïhy
(
ç
, 0x13, 0x8047);

4065 
	`πl_w0w1_phy
(
ç
, 0x14, 0x0000, 0x3000);

4066 
	`πl_wrôïhy
(
ç
, 0x13, 0x804f);

4067 
	`πl_w0w1_phy
(
ç
, 0x14, 0x0000, 0x3000);

4068 
	`πl_wrôïhy
(
ç
, 0x13, 0x8057);

4069 
	`πl_w0w1_phy
(
ç
, 0x14, 0x0000, 0x3000);

4070 
	`πl_wrôïhy
(
ç
, 0x13, 0x805f);

4071 
	`πl_w0w1_phy
(
ç
, 0x14, 0x0000, 0x3000);

4072 
	`πl_wrôïhy
(
ç
, 0x13, 0x8067);

4073 
	`πl_w0w1_phy
(
ç
, 0x14, 0x0000, 0x3000);

4074 
	`πl_wrôïhy
(
ç
, 0x13, 0x806f);

4075 
	`πl_w0w1_phy
(
ç
, 0x14, 0x0000, 0x3000);

4076 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

4079 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a44);

4080 
	`πl_w0w1_phy
(
ç
, 0x11, 0x0000, 0x0080);

4081 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

4084 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a43);

4085 i‡(
	`πl_ªadphy
(
ç
, 0x10) & 0x0004)

4086 
	`πl_w0w1_phy
(
ç
, 0x10, 0x0000, 0x0004);

4088 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

4089 
	}
}

4091 
	$πl8168h_2_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

4093 
u16
 
ioff£t_p3
, 
ioff£t_p2
, 
ioff£t_p1
, 
ioff£t_p0
;

4094 
u16
 
æí
;

4095 
u32
 
d©a
;

4097 
	`πl_≠∂y_fúmw¨e
(
ç
);

4100 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a43);

4101 
	`πl_wrôïhy
(
ç
, 0x13, 0x808a);

4102 
	`πl_w0w1_phy
(
ç
, 0x14, 0x000a, 0x003f);

4103 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

4106 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a43);

4107 
	`πl_wrôïhy
(
ç
, 0x13, 0x0811);

4108 
	`πl_w0w1_phy
(
ç
, 0x14, 0x0800, 0x0000);

4109 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a42);

4110 
	`πl_w0w1_phy
(
ç
, 0x16, 0x0002, 0x0000);

4111 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

4114 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a44);

4115 
	`πl_w0w1_phy
(
ç
, 0x11, 0x0800, 0x0000);

4116 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

4118 
	`r8168_mac_o˝_wrôe
(
ç
, 0xdd02, 0x807d);

4119 
d©a
 = 
	`r8168_mac_o˝_ªad
(
ç
, 0xdd02);

4120 
ioff£t_p3
 = ((
d©a
 & 0x80)>>7);

4121 
ioff£t_p3
 <<= 3;

4123 
d©a
 = 
	`r8168_mac_o˝_ªad
(
ç
, 0xdd00);

4124 
ioff£t_p3
 |((
d©a
 & (0xe000))>>13);

4125 
ioff£t_p2
 = ((
d©a
 & (0x1e00))>>9);

4126 
ioff£t_p1
 = ((
d©a
 & (0x01e0))>>5);

4127 
ioff£t_p0
 = ((
d©a
 & 0x0010)>>4);

4128 
ioff£t_p0
 <<= 3;

4129 
ioff£t_p0
 |(
d©a
 & (0x07));

4130 
d©a
 = (
ioff£t_p3
<<12)|(
ioff£t_p2
<<8)|(
ioff£t_p1
<<4)|(
ioff£t_p0
);

4132 i‡((
ioff£t_p3
 !0x0fË|| (
ioff£t_p2
 != 0x0f) ||

4133 (
ioff£t_p1
 !0x0fË|| (
ioff£t_p0
 != 0x0f)) {

4134 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0bcf);

4135 
	`πl_wrôïhy
(
ç
, 0x16, 
d©a
);

4136 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

4140 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0bcd);

4141 
d©a
 = 
	`πl_ªadphy
(
ç
, 0x16);

4142 
d©a
 &= 0x000f;

4143 
æí
 = 0;

4144 i‡(
d©a
 > 3)

4145 
æí
 = 
d©a
 - 3;

4146 
d©a
 = 
æí
 | (rlen<<4) | (rlen<<8) | (rlen<<12);

4147 
	`πl_wrôïhy
(
ç
, 0x17, 
d©a
);

4148 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0bcd);

4149 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

4152 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a44);

4153 
	`πl_w0w1_phy
(
ç
, 0x11, 0x0000, 0x0080);

4154 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

4157 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a43);

4158 i‡(
	`πl_ªadphy
(
ç
, 0x10) & 0x0004)

4159 
	`πl_w0w1_phy
(
ç
, 0x10, 0x0000, 0x0004);

4161 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

4162 
	}
}

4164 
	$πl8168ï_1_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

4167 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a44);

4168 
	`πl_w0w1_phy
(
ç
, 0x11, 0x000c, 0x0000);

4169 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

4172 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0bcc);

4173 
	`πl_w0w1_phy
(
ç
, 0x14, 0x0000, 0x0100);

4174 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a44);

4175 
	`πl_w0w1_phy
(
ç
, 0x11, 0x00c0, 0x0000);

4176 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a43);

4177 
	`πl_wrôïhy
(
ç
, 0x13, 0x8084);

4178 
	`πl_w0w1_phy
(
ç
, 0x14, 0x0000, 0x6000);

4179 
	`πl_w0w1_phy
(
ç
, 0x10, 0x1003, 0x0000);

4180 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

4183 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a4b);

4184 
	`πl_w0w1_phy
(
ç
, 0x11, 0x0004, 0x0000);

4185 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

4188 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a43);

4189 
	`πl_wrôïhy
(
ç
, 0x13, 0x8012);

4190 
	`πl_w0w1_phy
(
ç
, 0x14, 0x8000, 0x0000);

4191 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

4194 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0c42);

4195 
	`πl_w0w1_phy
(
ç
, 0x11, 0x4000, 0x2000);

4196 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

4199 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a43);

4200 i‡(
	`πl_ªadphy
(
ç
, 0x10) & 0x0004)

4201 
	`πl_w0w1_phy
(
ç
, 0x10, 0x0000, 0x0004);

4203 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

4204 
	}
}

4206 
	$πl8168ï_2_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

4209 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0bcc);

4210 
	`πl_w0w1_phy
(
ç
, 0x14, 0x0000, 0x0100);

4211 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a44);

4212 
	`πl_w0w1_phy
(
ç
, 0x11, 0x00c0, 0x0000);

4213 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a43);

4214 
	`πl_wrôïhy
(
ç
, 0x13, 0x8084);

4215 
	`πl_w0w1_phy
(
ç
, 0x14, 0x0000, 0x6000);

4216 
	`πl_w0w1_phy
(
ç
, 0x10, 0x1003, 0x0000);

4217 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

4220 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a43);

4221 
	`πl_wrôïhy
(
ç
, 0x13, 0x8012);

4222 
	`πl_w0w1_phy
(
ç
, 0x14, 0x8000, 0x0000);

4223 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

4226 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0c42);

4227 
	`πl_w0w1_phy
(
ç
, 0x11, 0x4000, 0x2000);

4228 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

4231 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a43);

4232 
	`πl_wrôïhy
(
ç
, 0x13, 0x80f3);

4233 
	`πl_w0w1_phy
(
ç
, 0x14, 0x8b00, ~0x8bff);

4234 
	`πl_wrôïhy
(
ç
, 0x13, 0x80f0);

4235 
	`πl_w0w1_phy
(
ç
, 0x14, 0x3a00, ~0x3aff);

4236 
	`πl_wrôïhy
(
ç
, 0x13, 0x80ef);

4237 
	`πl_w0w1_phy
(
ç
, 0x14, 0x0500, ~0x05ff);

4238 
	`πl_wrôïhy
(
ç
, 0x13, 0x80f6);

4239 
	`πl_w0w1_phy
(
ç
, 0x14, 0x6e00, ~0x6eff);

4240 
	`πl_wrôïhy
(
ç
, 0x13, 0x80ec);

4241 
	`πl_w0w1_phy
(
ç
, 0x14, 0x6800, ~0x68ff);

4242 
	`πl_wrôïhy
(
ç
, 0x13, 0x80ed);

4243 
	`πl_w0w1_phy
(
ç
, 0x14, 0x7c00, ~0x7cff);

4244 
	`πl_wrôïhy
(
ç
, 0x13, 0x80f2);

4245 
	`πl_w0w1_phy
(
ç
, 0x14, 0xf400, ~0xf4ff);

4246 
	`πl_wrôïhy
(
ç
, 0x13, 0x80f4);

4247 
	`πl_w0w1_phy
(
ç
, 0x14, 0x8500, ~0x85ff);

4248 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a43);

4249 
	`πl_wrôïhy
(
ç
, 0x13, 0x8110);

4250 
	`πl_w0w1_phy
(
ç
, 0x14, 0xa800, ~0xa8ff);

4251 
	`πl_wrôïhy
(
ç
, 0x13, 0x810f);

4252 
	`πl_w0w1_phy
(
ç
, 0x14, 0x1d00, ~0x1dff);

4253 
	`πl_wrôïhy
(
ç
, 0x13, 0x8111);

4254 
	`πl_w0w1_phy
(
ç
, 0x14, 0xf500, ~0xf5ff);

4255 
	`πl_wrôïhy
(
ç
, 0x13, 0x8113);

4256 
	`πl_w0w1_phy
(
ç
, 0x14, 0x6100, ~0x61ff);

4257 
	`πl_wrôïhy
(
ç
, 0x13, 0x8115);

4258 
	`πl_w0w1_phy
(
ç
, 0x14, 0x9200, ~0x92ff);

4259 
	`πl_wrôïhy
(
ç
, 0x13, 0x810e);

4260 
	`πl_w0w1_phy
(
ç
, 0x14, 0x0400, ~0x04ff);

4261 
	`πl_wrôïhy
(
ç
, 0x13, 0x810c);

4262 
	`πl_w0w1_phy
(
ç
, 0x14, 0x7c00, ~0x7cff);

4263 
	`πl_wrôïhy
(
ç
, 0x13, 0x810b);

4264 
	`πl_w0w1_phy
(
ç
, 0x14, 0x5a00, ~0x5aff);

4265 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a43);

4266 
	`πl_wrôïhy
(
ç
, 0x13, 0x80d1);

4267 
	`πl_w0w1_phy
(
ç
, 0x14, 0xff00, ~0xffff);

4268 
	`πl_wrôïhy
(
ç
, 0x13, 0x80cd);

4269 
	`πl_w0w1_phy
(
ç
, 0x14, 0x9e00, ~0x9eff);

4270 
	`πl_wrôïhy
(
ç
, 0x13, 0x80d3);

4271 
	`πl_w0w1_phy
(
ç
, 0x14, 0x0e00, ~0x0eff);

4272 
	`πl_wrôïhy
(
ç
, 0x13, 0x80d5);

4273 
	`πl_w0w1_phy
(
ç
, 0x14, 0xca00, ~0xcaff);

4274 
	`πl_wrôïhy
(
ç
, 0x13, 0x80d7);

4275 
	`πl_w0w1_phy
(
ç
, 0x14, 0x8400, ~0x84ff);

4278 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0bcd);

4279 
	`πl_wrôïhy
(
ç
, 0x14, 0x5065);

4280 
	`πl_wrôïhy
(
ç
, 0x14, 0xd065);

4281 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0bc8);

4282 
	`πl_wrôïhy
(
ç
, 0x12, 0x00ed);

4283 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0bcd);

4284 
	`πl_wrôïhy
(
ç
, 0x14, 0x1065);

4285 
	`πl_wrôïhy
(
ç
, 0x14, 0x9065);

4286 
	`πl_wrôïhy
(
ç
, 0x14, 0x1065);

4287 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

4290 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a43);

4291 i‡(
	`πl_ªadphy
(
ç
, 0x10) & 0x0004)

4292 
	`πl_w0w1_phy
(
ç
, 0x10, 0x0000, 0x0004);

4294 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

4295 
	}
}

4297 
	$πl8102e_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

4299 c⁄° 
phy_ªg
 
phy_ªg_öô
[] = {

4306 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

4307 
	`πl_∑tchphy
(
ç
, 0x11, 1 << 12);

4308 
	`πl_∑tchphy
(
ç
, 0x19, 1 << 13);

4309 
	`πl_∑tchphy
(
ç
, 0x10, 1 << 15);

4311 
	`πl_wrôïhy_b©ch
(
ç
, 
phy_ªg_öô
, 
	`ARRAY_SIZE
(phy_reg_init));

4312 
	}
}

4314 
	$πl8105e_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

4316 c⁄° 
phy_ªg
 
phy_ªg_öô
[] = {

4331 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

4332 
	`πl_wrôïhy
(
ç
, 0x18, 0x0310);

4333 
	`m¶ìp
(100);

4335 
	`πl_≠∂y_fúmw¨e
(
ç
);

4337 
	`πl_wrôïhy_b©ch
(
ç
, 
phy_ªg_öô
, 
	`ARRAY_SIZE
(phy_reg_init));

4338 
	}
}

4340 
	$πl8402_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

4343 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

4344 
	`πl_wrôïhy
(
ç
, 0x18, 0x0310);

4345 
	`m¶ìp
(20);

4347 
	`πl_≠∂y_fúmw¨e
(
ç
);

4350 
	`πl_îi_wrôe
(
ç
, 0x1b0, 
ERIAR_MASK_0011
, 0x0000, 
ERIAR_EXGMAC
);

4351 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0004);

4352 
	`πl_wrôïhy
(
ç
, 0x10, 0x401f);

4353 
	`πl_wrôïhy
(
ç
, 0x19, 0x7030);

4354 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

4355 
	}
}

4357 
	$πl8106e_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

4359 c⁄° 
phy_ªg
 
phy_ªg_öô
[] = {

4367 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

4368 
	`πl_wrôïhy
(
ç
, 0x18, 0x0310);

4369 
	`m¶ìp
(100);

4371 
	`πl_≠∂y_fúmw¨e
(
ç
);

4373 
	`πl_îi_wrôe
(
ç
, 0x1b0, 
ERIAR_MASK_0011
, 0x0000, 
ERIAR_EXGMAC
);

4374 
	`πl_wrôïhy_b©ch
(
ç
, 
phy_ªg_öô
, 
	`ARRAY_SIZE
(phy_reg_init));

4376 
	`πl_îi_wrôe
(
ç
, 0x1d0, 
ERIAR_MASK_0011
, 0x0000, 
ERIAR_EXGMAC
);

4377 
	}
}

4379 
	$πl_hw_phy_c⁄fig
(
√t_devi˚
 *
dev
)

4381 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

4383 
	`πl8169_¥öt_mac_vîsi⁄
(
ç
);

4385 
ç
->
mac_vîsi⁄
) {

4386 
RTL_GIGA_MAC_VER_01
:

4388 
RTL_GIGA_MAC_VER_02
:

4389 
RTL_GIGA_MAC_VER_03
:

4390 
	`πl8169s_hw_phy_c⁄fig
(
ç
);

4392 
RTL_GIGA_MAC_VER_04
:

4393 
	`πl8169sb_hw_phy_c⁄fig
(
ç
);

4395 
RTL_GIGA_MAC_VER_05
:

4396 
	`πl8169scd_hw_phy_c⁄fig
(
ç
);

4398 
RTL_GIGA_MAC_VER_06
:

4399 
	`πl8169s˚_hw_phy_c⁄fig
(
ç
);

4401 
RTL_GIGA_MAC_VER_07
:

4402 
RTL_GIGA_MAC_VER_08
:

4403 
RTL_GIGA_MAC_VER_09
:

4404 
	`πl8102e_hw_phy_c⁄fig
(
ç
);

4406 
RTL_GIGA_MAC_VER_11
:

4407 
	`πl8168bb_hw_phy_c⁄fig
(
ç
);

4409 
RTL_GIGA_MAC_VER_12
:

4410 
	`πl8168bef_hw_phy_c⁄fig
(
ç
);

4412 
RTL_GIGA_MAC_VER_17
:

4413 
	`πl8168bef_hw_phy_c⁄fig
(
ç
);

4415 
RTL_GIGA_MAC_VER_18
:

4416 
	`πl8168˝_1_hw_phy_c⁄fig
(
ç
);

4418 
RTL_GIGA_MAC_VER_19
:

4419 
	`πl8168c_1_hw_phy_c⁄fig
(
ç
);

4421 
RTL_GIGA_MAC_VER_20
:

4422 
	`πl8168c_2_hw_phy_c⁄fig
(
ç
);

4424 
RTL_GIGA_MAC_VER_21
:

4425 
	`πl8168c_3_hw_phy_c⁄fig
(
ç
);

4427 
RTL_GIGA_MAC_VER_22
:

4428 
	`πl8168c_4_hw_phy_c⁄fig
(
ç
);

4430 
RTL_GIGA_MAC_VER_23
:

4431 
RTL_GIGA_MAC_VER_24
:

4432 
	`πl8168˝_2_hw_phy_c⁄fig
(
ç
);

4434 
RTL_GIGA_MAC_VER_25
:

4435 
	`πl8168d_1_hw_phy_c⁄fig
(
ç
);

4437 
RTL_GIGA_MAC_VER_26
:

4438 
	`πl8168d_2_hw_phy_c⁄fig
(
ç
);

4440 
RTL_GIGA_MAC_VER_27
:

4441 
	`πl8168d_3_hw_phy_c⁄fig
(
ç
);

4443 
RTL_GIGA_MAC_VER_28
:

4444 
	`πl8168d_4_hw_phy_c⁄fig
(
ç
);

4446 
RTL_GIGA_MAC_VER_29
:

4447 
RTL_GIGA_MAC_VER_30
:

4448 
	`πl8105e_hw_phy_c⁄fig
(
ç
);

4450 
RTL_GIGA_MAC_VER_31
:

4453 
RTL_GIGA_MAC_VER_32
:

4454 
RTL_GIGA_MAC_VER_33
:

4455 
	`πl8168e_1_hw_phy_c⁄fig
(
ç
);

4457 
RTL_GIGA_MAC_VER_34
:

4458 
	`πl8168e_2_hw_phy_c⁄fig
(
ç
);

4460 
RTL_GIGA_MAC_VER_35
:

4461 
	`πl8168f_1_hw_phy_c⁄fig
(
ç
);

4463 
RTL_GIGA_MAC_VER_36
:

4464 
	`πl8168f_2_hw_phy_c⁄fig
(
ç
);

4467 
RTL_GIGA_MAC_VER_37
:

4468 
	`πl8402_hw_phy_c⁄fig
(
ç
);

4471 
RTL_GIGA_MAC_VER_38
:

4472 
	`πl8411_hw_phy_c⁄fig
(
ç
);

4475 
RTL_GIGA_MAC_VER_39
:

4476 
	`πl8106e_hw_phy_c⁄fig
(
ç
);

4479 
RTL_GIGA_MAC_VER_40
:

4480 
	`πl8168g_1_hw_phy_c⁄fig
(
ç
);

4482 
RTL_GIGA_MAC_VER_42
:

4483 
RTL_GIGA_MAC_VER_43
:

4484 
RTL_GIGA_MAC_VER_44
:

4485 
	`πl8168g_2_hw_phy_c⁄fig
(
ç
);

4487 
RTL_GIGA_MAC_VER_45
:

4488 
RTL_GIGA_MAC_VER_47
:

4489 
	`πl8168h_1_hw_phy_c⁄fig
(
ç
);

4491 
RTL_GIGA_MAC_VER_46
:

4492 
RTL_GIGA_MAC_VER_48
:

4493 
	`πl8168h_2_hw_phy_c⁄fig
(
ç
);

4496 
RTL_GIGA_MAC_VER_49
:

4497 
	`πl8168ï_1_hw_phy_c⁄fig
(
ç
);

4499 
RTL_GIGA_MAC_VER_50
:

4500 
RTL_GIGA_MAC_VER_51
:

4501 
	`πl8168ï_2_hw_phy_c⁄fig
(
ç
);

4504 
RTL_GIGA_MAC_VER_41
:

4508 
	}
}

4510 
	$πl_phy_w‹k
(
πl8169_¥iv©e
 *
ç
)

4512 
timî_li°
 *
timî
 = &
ç
->timer;

4513 
timeout
 = 
RTL8169_PHY_TIMEOUT
;

4515 
	`as£π
(
ç
->
mac_vîsi⁄
 > 
RTL_GIGA_MAC_VER_01
);

4517 i‡(
ç
->
	`phy_ª£t_≥ndög
(tp)) {

4522 
timeout
 = 
HZ
/10;

4523 
out_mod_timî
;

4526 i‡(
ç
->
	`lök_ok
(tp))

4529 
	`√tif_dbg
(
ç
, 
lök
,Åp->
dev
, "PHYÑeset untilÜink up\n");

4531 
ç
->
	`phy_ª£t_íabÀ
(tp);

4533 
out_mod_timî
:

4534 
	`mod_timî
(
timî
, 
jiffõs
 + 
timeout
);

4535 
	}
}

4537 
	$πl_scheduÀ_èsk
(
πl8169_¥iv©e
 *
ç
, 
πl_Êag
 
Êag
)

4539 i‡(!
	`ã°_™d_£t_bô
(
Êag
, 
ç
->
wk
.
Êags
))

4540 
	`scheduÀ_w‹k
(&
ç
->
wk
.
w‹k
);

4541 
	}
}

4543 
	$πl8169_phy_timî
(
timî_li°
 *
t
)

4545 
πl8169_¥iv©e
 *
ç
 = 
	`‰om_timî
—p, 
t
, 
timî
);

4547 
	`πl_scheduÀ_èsk
(
ç
, 
RTL_FLAG_TASK_PHY_PENDING
);

4548 
	}
}

4550 
	$DECLARE_RTL_COND
(
πl_phy_ª£t_c⁄d
)

4552  
ç
->
	`phy_ª£t_≥ndög
(tp);

4553 
	}
}

4555 
	$πl8169_phy_ª£t
(
√t_devi˚
 *
dev
,

4556 
πl8169_¥iv©e
 *
ç
)

4558 
ç
->
	`phy_ª£t_íabÀ
(tp);

4559 
	`πl_m¶ìp_lo›_waô_low
(
ç
, &
πl_phy_ª£t_c⁄d
, 1, 100);

4560 
	}
}

4562 
boﬁ
 
	$πl_tbi_íabÀd
(
πl8169_¥iv©e
 *
ç
)

4564  (
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_01
) &&

4565 (
	`RTL_R8
(
ç
, 
PHY°©us
Ë& 
TBI_E«bÀ
);

4566 
	}
}

4568 
	$πl8169_öô_phy
(
√t_devi˚
 *
dev
, 
πl8169_¥iv©e
 *
ç
)

4570 
	`πl_hw_phy_c⁄fig
(
dev
);

4572 i‡(
ç
->
mac_vîsi⁄
 <
RTL_GIGA_MAC_VER_06
) {

4573 
	`d¥ötk
("Set MAC Reg C+CR Offset 0x82h = 0x01h\n");

4574 
	`RTL_W8
(
ç
, 0x82, 0x01);

4577 
	`pci_wrôe_c⁄fig_byã
(
ç
->
pci_dev
, 
PCI_LATENCY_TIMER
, 0x40);

4579 i‡(
ç
->
mac_vîsi⁄
 <
RTL_GIGA_MAC_VER_06
)

4580 
	`pci_wrôe_c⁄fig_byã
(
ç
->
pci_dev
, 
PCI_CACHE_LINE_SIZE
, 0x08);

4582 i‡(
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_02
) {

4583 
	`d¥ötk
("Set MAC Reg C+CR Offset 0x82h = 0x01h\n");

4584 
	`RTL_W8
(
ç
, 0x82, 0x01);

4585 
	`d¥ötk
("Set PHY Reg 0x0bh = 0x00h\n");

4586 
	`πl_wrôïhy
(
ç
, 0x0b, 0x0000);

4589 
	`πl8169_phy_ª£t
(
dev
, 
ç
);

4591 
	`πl8169_£t_•ìd
(
dev
, 
AUTONEG_ENABLE
, 
SPEED_1000
, 
DUPLEX_FULL
,

4592 
ADVERTISED_10ba£T_HÆf
 | 
ADVERTISED_10ba£T_FuŒ
 |

4593 
ADVERTISED_100ba£T_HÆf
 | 
ADVERTISED_100ba£T_FuŒ
 |

4594 (
ç
->
mii
.
suµ‹ts_gmii
 ?

4595 
ADVERTISED_1000ba£T_HÆf
 |

4596 
ADVERTISED_1000ba£T_FuŒ
 : 0));

4598 i‡(
	`πl_tbi_íabÀd
(
ç
))

4599 
	`√tif_öfo
(
ç
, 
lök
, 
dev
, "TBIáuto-negotiating\n");

4600 
	}
}

4602 
	$πl_ør_£t
(
πl8169_¥iv©e
 *
ç
, 
u8
 *
addr
)

4604 
	`πl_lock_w‹k
(
ç
);

4606 
	`RTL_W8
(
ç
, 
Cfg9346
, 
Cfg9346_U∆ock
);

4608 
	`RTL_W32
(
ç
, 
MAC4
, 
addr
[4] |áddr[5] << 8);

4609 
	`RTL_R32
(
ç
, 
MAC4
);

4611 
	`RTL_W32
(
ç
, 
MAC0
, 
addr
[0] |áddr[1] << 8 |áddr[2] << 16 |áddr[3] << 24);

4612 
	`RTL_R32
(
ç
, 
MAC0
);

4614 i‡(
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_34
)

4615 
	`πl_ør_exgmac_£t
(
ç
, 
addr
);

4617 
	`RTL_W8
(
ç
, 
Cfg9346
, 
Cfg9346_Lock
);

4619 
	`πl_u∆ock_w‹k
(
ç
);

4620 
	}
}

4622 
	$πl_£t_mac_addªss
(
√t_devi˚
 *
dev
, *
p
)

4624 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

4625 
devi˚
 *
d
 = 
	`ç_to_dev
(
ç
);

4626 
ªt
;

4628 
ªt
 = 
	`ëh_mac_addr
(
dev
, 
p
);

4629 i‡(
ªt
)

4630  
ªt
;

4632 
	`pm_ru¡ime_gë_n‹esume
(
d
);

4634 i‡(
	`pm_ru¡ime_a˘ive
(
d
))

4635 
	`πl_ør_£t
(
ç
, 
dev
->
dev_addr
);

4637 
	`pm_ru¡ime_put_noidÀ
(
d
);

4640 
	}
}

4642 
	$πl8169_io˘l
(
√t_devi˚
 *
dev
, 
i‰eq
 *
i‰
, 
cmd
)

4644 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

4645 
mii_io˘l_d©a
 *
d©a
 = 
	`if_mii
(
i‰
);

4647  
	`√tif_ru¬ög
(
dev
Ë? 
ç
->
	`do_io˘l
—p, 
d©a
, 
cmd
Ë: -
ENODEV
;

4648 
	}
}

4650 
	$πl_xmii_io˘l
(
πl8169_¥iv©e
 *
ç
,

4651 
mii_io˘l_d©a
 *
d©a
, 
cmd
)

4653 
cmd
) {

4654 
SIOCGMIIPHY
:

4655 
d©a
->
phy_id
 = 32;

4658 
SIOCGMIIREG
:

4659 
d©a
->
vÆ_out
 = 
	`πl_ªadphy
(
ç
, d©a->
ªg_num
 & 0x1f);

4662 
SIOCSMIIREG
:

4663 
	`πl_wrôïhy
(
ç
, 
d©a
->
ªg_num
 & 0x1f, d©a->
vÆ_ö
);

4666  -
EOPNOTSUPP
;

4667 
	}
}

4669 
	$πl_tbi_io˘l
(
πl8169_¥iv©e
 *
ç
, 
mii_io˘l_d©a
 *
d©a
, 
cmd
)

4671  -
EOPNOTSUPP
;

4672 
	}
}

4674 
	$πl_öô_mdio_›s
(
πl8169_¥iv©e
 *
ç
)

4676 
mdio_›s
 *
›s
 = &
ç
->mdio_ops;

4678 
ç
->
mac_vîsi⁄
) {

4679 
RTL_GIGA_MAC_VER_27
:

4680 
›s
->
wrôe
 = 
r8168dp_1_mdio_wrôe
;

4681 
›s
->
ªad
 = 
r8168dp_1_mdio_ªad
;

4683 
RTL_GIGA_MAC_VER_28
:

4684 
RTL_GIGA_MAC_VER_31
:

4685 
›s
->
wrôe
 = 
r8168dp_2_mdio_wrôe
;

4686 
›s
->
ªad
 = 
r8168dp_2_mdio_ªad
;

4688 
RTL_GIGA_MAC_VER_40
:

4689 
RTL_GIGA_MAC_VER_41
:

4690 
RTL_GIGA_MAC_VER_42
:

4691 
RTL_GIGA_MAC_VER_43
:

4692 
RTL_GIGA_MAC_VER_44
:

4693 
RTL_GIGA_MAC_VER_45
:

4694 
RTL_GIGA_MAC_VER_46
:

4695 
RTL_GIGA_MAC_VER_47
:

4696 
RTL_GIGA_MAC_VER_48
:

4697 
RTL_GIGA_MAC_VER_49
:

4698 
RTL_GIGA_MAC_VER_50
:

4699 
RTL_GIGA_MAC_VER_51
:

4700 
›s
->
wrôe
 = 
r8168g_mdio_wrôe
;

4701 
›s
->
ªad
 = 
r8168g_mdio_ªad
;

4704 
›s
->
wrôe
 = 
r8169_mdio_wrôe
;

4705 
›s
->
ªad
 = 
r8169_mdio_ªad
;

4708 
	}
}

4710 
	$πl_•ìd_down
(
πl8169_¥iv©e
 *
ç
)

4712 
u32
 
adv
;

4713 
Õa
;

4715 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

4716 
Õa
 = 
	`πl_ªadphy
(
ç
, 
MII_LPA
);

4718 i‡(
Õa
 & (
LPA_10HALF
 | 
LPA_10FULL
))

4719 
adv
 = 
ADVERTISED_10ba£T_HÆf
 | 
ADVERTISED_10ba£T_FuŒ
;

4720 i‡(
Õa
 & (
LPA_100HALF
 | 
LPA_100FULL
))

4721 
adv
 = 
ADVERTISED_10ba£T_HÆf
 | 
ADVERTISED_10ba£T_FuŒ
 |

4722 
ADVERTISED_100ba£T_HÆf
 | 
ADVERTISED_100ba£T_FuŒ
;

4724 
adv
 = 
ADVERTISED_10ba£T_HÆf
 | 
ADVERTISED_10ba£T_FuŒ
 |

4725 
ADVERTISED_100ba£T_HÆf
 | 
ADVERTISED_100ba£T_FuŒ
 |

4726 (
ç
->
mii
.
suµ‹ts_gmii
 ?

4727 
ADVERTISED_1000ba£T_HÆf
 |

4728 
ADVERTISED_1000ba£T_FuŒ
 : 0);

4730 
	`πl8169_£t_•ìd
(
ç
->
dev
, 
AUTONEG_ENABLE
, 
SPEED_1000
, 
DUPLEX_FULL
,

4731 
adv
);

4732 
	}
}

4734 
	$πl_wﬁ_su•íd_quúk
(
πl8169_¥iv©e
 *
ç
)

4736 
ç
->
mac_vîsi⁄
) {

4737 
RTL_GIGA_MAC_VER_25
:

4738 
RTL_GIGA_MAC_VER_26
:

4739 
RTL_GIGA_MAC_VER_29
:

4740 
RTL_GIGA_MAC_VER_30
:

4741 
RTL_GIGA_MAC_VER_32
:

4742 
RTL_GIGA_MAC_VER_33
:

4743 
RTL_GIGA_MAC_VER_34
:

4744 
RTL_GIGA_MAC_VER_37
:

4745 
RTL_GIGA_MAC_VER_38
:

4746 
RTL_GIGA_MAC_VER_39
:

4747 
RTL_GIGA_MAC_VER_40
:

4748 
RTL_GIGA_MAC_VER_41
:

4749 
RTL_GIGA_MAC_VER_42
:

4750 
RTL_GIGA_MAC_VER_43
:

4751 
RTL_GIGA_MAC_VER_44
:

4752 
RTL_GIGA_MAC_VER_45
:

4753 
RTL_GIGA_MAC_VER_46
:

4754 
RTL_GIGA_MAC_VER_47
:

4755 
RTL_GIGA_MAC_VER_48
:

4756 
RTL_GIGA_MAC_VER_49
:

4757 
RTL_GIGA_MAC_VER_50
:

4758 
RTL_GIGA_MAC_VER_51
:

4759 
	`RTL_W32
(
ç
, 
RxC⁄fig
, 
	`RTL_R32
(tp, RxConfig) |

4760 
Ac˚±Brﬂdˇ°
 | 
Ac˚±Mu…iˇ°
 | 
Ac˚±MyPhys
);

4765 
	}
}

4767 
boﬁ
 
	$πl_wﬁ_∂l_powî_down
(
πl8169_¥iv©e
 *
ç
)

4769 i‡(!(
	`__πl8169_gë_wﬁ
(
ç
Ë& 
WAKE_ANY
))

4770  
Ál£
;

4772 
	`πl_•ìd_down
(
ç
);

4773 
	`πl_wﬁ_su•íd_quúk
(
ç
);

4775  
åue
;

4776 
	}
}

4778 
	$r810x_phy_powî_down
(
πl8169_¥iv©e
 *
ç
)

4780 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

4781 
	`πl_wrôïhy
(
ç
, 
MII_BMCR
, 
BMCR_PDOWN
);

4782 
	}
}

4784 
	$r810x_phy_powî_up
(
πl8169_¥iv©e
 *
ç
)

4786 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

4787 
	`πl_wrôïhy
(
ç
, 
MII_BMCR
, 
BMCR_ANENABLE
);

4788 
	}
}

4790 
	$r810x_∂l_powî_down
(
πl8169_¥iv©e
 *
ç
)

4792 i‡(
	`πl_wﬁ_∂l_powî_down
(
ç
))

4795 
	`r810x_phy_powî_down
(
ç
);

4797 
ç
->
mac_vîsi⁄
) {

4798 
RTL_GIGA_MAC_VER_07
:

4799 
RTL_GIGA_MAC_VER_08
:

4800 
RTL_GIGA_MAC_VER_09
:

4801 
RTL_GIGA_MAC_VER_10
:

4802 
RTL_GIGA_MAC_VER_13
:

4803 
RTL_GIGA_MAC_VER_16
:

4806 
	`RTL_W8
(
ç
, 
PMCH
, 
	`RTL_R8
(tp, PMCH) & ~0x80);

4809 
	}
}

4811 
	$r810x_∂l_powî_up
(
πl8169_¥iv©e
 *
ç
)

4813 
	`r810x_phy_powî_up
(
ç
);

4815 
ç
->
mac_vîsi⁄
) {

4816 
RTL_GIGA_MAC_VER_07
:

4817 
RTL_GIGA_MAC_VER_08
:

4818 
RTL_GIGA_MAC_VER_09
:

4819 
RTL_GIGA_MAC_VER_10
:

4820 
RTL_GIGA_MAC_VER_13
:

4821 
RTL_GIGA_MAC_VER_16
:

4823 
RTL_GIGA_MAC_VER_47
:

4824 
RTL_GIGA_MAC_VER_48
:

4825 
	`RTL_W8
(
ç
, 
PMCH
, 
	`RTL_R8
(tp, PMCH) | 0xc0);

4828 
	`RTL_W8
(
ç
, 
PMCH
, 
	`RTL_R8
(tp, PMCH) | 0x80);

4831 
	}
}

4833 
	$r8168_phy_powî_up
(
πl8169_¥iv©e
 *
ç
)

4835 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

4836 
ç
->
mac_vîsi⁄
) {

4837 
RTL_GIGA_MAC_VER_11
:

4838 
RTL_GIGA_MAC_VER_12
:

4839 
RTL_GIGA_MAC_VER_17
:

4840 
RTL_GIGA_MAC_VER_18
:

4841 
RTL_GIGA_MAC_VER_19
:

4842 
RTL_GIGA_MAC_VER_20
:

4843 
RTL_GIGA_MAC_VER_21
:

4844 
RTL_GIGA_MAC_VER_22
:

4845 
RTL_GIGA_MAC_VER_23
:

4846 
RTL_GIGA_MAC_VER_24
:

4847 
RTL_GIGA_MAC_VER_25
:

4848 
RTL_GIGA_MAC_VER_26
:

4849 
RTL_GIGA_MAC_VER_27
:

4850 
RTL_GIGA_MAC_VER_28
:

4851 
RTL_GIGA_MAC_VER_31
:

4852 
	`πl_wrôïhy
(
ç
, 0x0e, 0x0000);

4857 
	`πl_wrôïhy
(
ç
, 
MII_BMCR
, 
BMCR_ANENABLE
);

4858 
	}
}

4860 
	$r8168_phy_powî_down
(
πl8169_¥iv©e
 *
ç
)

4862 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

4863 
ç
->
mac_vîsi⁄
) {

4864 
RTL_GIGA_MAC_VER_32
:

4865 
RTL_GIGA_MAC_VER_33
:

4866 
RTL_GIGA_MAC_VER_40
:

4867 
RTL_GIGA_MAC_VER_41
:

4868 
	`πl_wrôïhy
(
ç
, 
MII_BMCR
, 
BMCR_ANENABLE
 | 
BMCR_PDOWN
);

4871 
RTL_GIGA_MAC_VER_11
:

4872 
RTL_GIGA_MAC_VER_12
:

4873 
RTL_GIGA_MAC_VER_17
:

4874 
RTL_GIGA_MAC_VER_18
:

4875 
RTL_GIGA_MAC_VER_19
:

4876 
RTL_GIGA_MAC_VER_20
:

4877 
RTL_GIGA_MAC_VER_21
:

4878 
RTL_GIGA_MAC_VER_22
:

4879 
RTL_GIGA_MAC_VER_23
:

4880 
RTL_GIGA_MAC_VER_24
:

4881 
RTL_GIGA_MAC_VER_25
:

4882 
RTL_GIGA_MAC_VER_26
:

4883 
RTL_GIGA_MAC_VER_27
:

4884 
RTL_GIGA_MAC_VER_28
:

4885 
RTL_GIGA_MAC_VER_31
:

4886 
	`πl_wrôïhy
(
ç
, 0x0e, 0x0200);

4888 
	`πl_wrôïhy
(
ç
, 
MII_BMCR
, 
BMCR_PDOWN
);

4891 
	}
}

4893 
	$r8168_∂l_powî_down
(
πl8169_¥iv©e
 *
ç
)

4895 i‡(
	`r8168_check_dash
(
ç
))

4898 i‡((
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_23
 ||

4899 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_24
) &&

4900 (
	`RTL_R16
(
ç
, 
CPlusCmd
Ë& 
ASF
)) {

4904 i‡(
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_32
 ||

4905 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_33
)

4906 
	`πl_ïhy_wrôe
(
ç
, 0x19, 0xff64);

4908 i‡(
	`πl_wﬁ_∂l_powî_down
(
ç
))

4911 
	`r8168_phy_powî_down
(
ç
);

4913 
ç
->
mac_vîsi⁄
) {

4914 
RTL_GIGA_MAC_VER_25
:

4915 
RTL_GIGA_MAC_VER_26
:

4916 
RTL_GIGA_MAC_VER_27
:

4917 
RTL_GIGA_MAC_VER_28
:

4918 
RTL_GIGA_MAC_VER_31
:

4919 
RTL_GIGA_MAC_VER_32
:

4920 
RTL_GIGA_MAC_VER_33
:

4921 
RTL_GIGA_MAC_VER_44
:

4922 
RTL_GIGA_MAC_VER_45
:

4923 
RTL_GIGA_MAC_VER_46
:

4924 
RTL_GIGA_MAC_VER_50
:

4925 
RTL_GIGA_MAC_VER_51
:

4926 
	`RTL_W8
(
ç
, 
PMCH
, 
	`RTL_R8
(tp, PMCH) & ~0x80);

4928 
RTL_GIGA_MAC_VER_40
:

4929 
RTL_GIGA_MAC_VER_41
:

4930 
RTL_GIGA_MAC_VER_49
:

4931 
	`πl_w0w1_îi
(
ç
, 0x1a8, 
ERIAR_MASK_1111
, 0x00000000,

4932 0xfc000000, 
ERIAR_EXGMAC
);

4933 
	`RTL_W8
(
ç
, 
PMCH
, 
	`RTL_R8
(tp, PMCH) & ~0x80);

4936 
	}
}

4938 
	$r8168_∂l_powî_up
(
πl8169_¥iv©e
 *
ç
)

4940 
ç
->
mac_vîsi⁄
) {

4941 
RTL_GIGA_MAC_VER_25
:

4942 
RTL_GIGA_MAC_VER_26
:

4943 
RTL_GIGA_MAC_VER_27
:

4944 
RTL_GIGA_MAC_VER_28
:

4945 
RTL_GIGA_MAC_VER_31
:

4946 
RTL_GIGA_MAC_VER_32
:

4947 
RTL_GIGA_MAC_VER_33
:

4948 
	`RTL_W8
(
ç
, 
PMCH
, 
	`RTL_R8
(tp, PMCH) | 0x80);

4950 
RTL_GIGA_MAC_VER_44
:

4951 
RTL_GIGA_MAC_VER_45
:

4952 
RTL_GIGA_MAC_VER_46
:

4953 
RTL_GIGA_MAC_VER_50
:

4954 
RTL_GIGA_MAC_VER_51
:

4955 
	`RTL_W8
(
ç
, 
PMCH
, 
	`RTL_R8
(tp, PMCH) | 0xc0);

4957 
RTL_GIGA_MAC_VER_40
:

4958 
RTL_GIGA_MAC_VER_41
:

4959 
RTL_GIGA_MAC_VER_49
:

4960 
	`RTL_W8
(
ç
, 
PMCH
, 
	`RTL_R8
(tp, PMCH) | 0xc0);

4961 
	`πl_w0w1_îi
(
ç
, 0x1a8, 
ERIAR_MASK_1111
, 0xfc000000,

4962 0x00000000, 
ERIAR_EXGMAC
);

4966 
	`r8168_phy_powî_up
(
ç
);

4967 
	}
}

4969 
	$πl_gíîic_›
(
πl8169_¥iv©e
 *
ç
,

4970 (*
›
)(
πl8169_¥iv©e
 *))

4972 i‡(
›
)

4973 
	`›
(
ç
);

4974 
	}
}

4976 
	$πl_∂l_powî_down
(
πl8169_¥iv©e
 *
ç
)

4978 
	`πl_gíîic_›
(
ç
,Åp->
∂l_powî_›s
.
down
);

4979 
	}
}

4981 
	$πl_∂l_powî_up
(
πl8169_¥iv©e
 *
ç
)

4983 
	`πl_gíîic_›
(
ç
,Åp->
∂l_powî_›s
.
up
);

4986 
	`m¶ìp
(20);

4987 
	}
}

4989 
	$πl_öô_∂l_powî_›s
(
πl8169_¥iv©e
 *
ç
)

4991 
∂l_powî_›s
 *
›s
 = &
ç
->pll_power_ops;

4993 
ç
->
mac_vîsi⁄
) {

4994 
RTL_GIGA_MAC_VER_07
:

4995 
RTL_GIGA_MAC_VER_08
:

4996 
RTL_GIGA_MAC_VER_09
:

4997 
RTL_GIGA_MAC_VER_10
:

4998 
RTL_GIGA_MAC_VER_16
:

4999 
RTL_GIGA_MAC_VER_29
:

5000 
RTL_GIGA_MAC_VER_30
:

5001 
RTL_GIGA_MAC_VER_37
:

5002 
RTL_GIGA_MAC_VER_39
:

5003 
RTL_GIGA_MAC_VER_43
:

5004 
RTL_GIGA_MAC_VER_47
:

5005 
RTL_GIGA_MAC_VER_48
:

5006 
›s
->
down
 = 
r810x_∂l_powî_down
;

5007 
›s
->
up
 = 
r810x_∂l_powî_up
;

5010 
RTL_GIGA_MAC_VER_11
:

5011 
RTL_GIGA_MAC_VER_12
:

5012 
RTL_GIGA_MAC_VER_17
:

5013 
RTL_GIGA_MAC_VER_18
:

5014 
RTL_GIGA_MAC_VER_19
:

5015 
RTL_GIGA_MAC_VER_20
:

5016 
RTL_GIGA_MAC_VER_21
:

5017 
RTL_GIGA_MAC_VER_22
:

5018 
RTL_GIGA_MAC_VER_23
:

5019 
RTL_GIGA_MAC_VER_24
:

5020 
RTL_GIGA_MAC_VER_25
:

5021 
RTL_GIGA_MAC_VER_26
:

5022 
RTL_GIGA_MAC_VER_27
:

5023 
RTL_GIGA_MAC_VER_28
:

5024 
RTL_GIGA_MAC_VER_31
:

5025 
RTL_GIGA_MAC_VER_32
:

5026 
RTL_GIGA_MAC_VER_33
:

5027 
RTL_GIGA_MAC_VER_34
:

5028 
RTL_GIGA_MAC_VER_35
:

5029 
RTL_GIGA_MAC_VER_36
:

5030 
RTL_GIGA_MAC_VER_38
:

5031 
RTL_GIGA_MAC_VER_40
:

5032 
RTL_GIGA_MAC_VER_41
:

5033 
RTL_GIGA_MAC_VER_42
:

5034 
RTL_GIGA_MAC_VER_44
:

5035 
RTL_GIGA_MAC_VER_45
:

5036 
RTL_GIGA_MAC_VER_46
:

5037 
RTL_GIGA_MAC_VER_49
:

5038 
RTL_GIGA_MAC_VER_50
:

5039 
RTL_GIGA_MAC_VER_51
:

5040 
›s
->
down
 = 
r8168_∂l_powî_down
;

5041 
›s
->
up
 = 
r8168_∂l_powî_up
;

5045 
›s
->
down
 = 
NULL
;

5046 
›s
->
up
 = 
NULL
;

5049 
	}
}

5051 
	$πl_öô_rxcfg
(
πl8169_¥iv©e
 *
ç
)

5053 
ç
->
mac_vîsi⁄
) {

5054 
RTL_GIGA_MAC_VER_01
:

5055 
RTL_GIGA_MAC_VER_02
:

5056 
RTL_GIGA_MAC_VER_03
:

5057 
RTL_GIGA_MAC_VER_04
:

5058 
RTL_GIGA_MAC_VER_05
:

5059 
RTL_GIGA_MAC_VER_06
:

5060 
RTL_GIGA_MAC_VER_10
:

5061 
RTL_GIGA_MAC_VER_11
:

5062 
RTL_GIGA_MAC_VER_12
:

5063 
RTL_GIGA_MAC_VER_13
:

5064 
RTL_GIGA_MAC_VER_14
:

5065 
RTL_GIGA_MAC_VER_15
:

5066 
RTL_GIGA_MAC_VER_16
:

5067 
RTL_GIGA_MAC_VER_17
:

5068 
	`RTL_W32
(
ç
, 
RxC⁄fig
, 
RX_FIFO_THRESH
 | 
RX_DMA_BURST
);

5070 
RTL_GIGA_MAC_VER_18
:

5071 
RTL_GIGA_MAC_VER_19
:

5072 
RTL_GIGA_MAC_VER_20
:

5073 
RTL_GIGA_MAC_VER_21
:

5074 
RTL_GIGA_MAC_VER_22
:

5075 
RTL_GIGA_MAC_VER_23
:

5076 
RTL_GIGA_MAC_VER_24
:

5077 
RTL_GIGA_MAC_VER_34
:

5078 
RTL_GIGA_MAC_VER_35
:

5079 
	`RTL_W32
(
ç
, 
RxC⁄fig
, 
RX128_INT_EN
 | 
RX_MULTI_EN
 | 
RX_DMA_BURST
);

5081 
RTL_GIGA_MAC_VER_40
:

5082 
RTL_GIGA_MAC_VER_41
:

5083 
RTL_GIGA_MAC_VER_42
:

5084 
RTL_GIGA_MAC_VER_43
:

5085 
RTL_GIGA_MAC_VER_44
:

5086 
RTL_GIGA_MAC_VER_45
:

5087 
RTL_GIGA_MAC_VER_46
:

5088 
RTL_GIGA_MAC_VER_47
:

5089 
RTL_GIGA_MAC_VER_48
:

5090 
RTL_GIGA_MAC_VER_49
:

5091 
RTL_GIGA_MAC_VER_50
:

5092 
RTL_GIGA_MAC_VER_51
:

5093 
	`RTL_W32
(
ç
, 
RxC⁄fig
, 
RX128_INT_EN
 | 
RX_MULTI_EN
 | 
RX_DMA_BURST
 | 
RX_EARLY_OFF
);

5096 
	`RTL_W32
(
ç
, 
RxC⁄fig
, 
RX128_INT_EN
 | 
RX_DMA_BURST
);

5099 
	}
}

5101 
	$πl8169_öô_rög_ödexes
(
πl8169_¥iv©e
 *
ç
)

5103 
ç
->
dúty_tx
 =Åp->
cur_tx
 =Åp->
cur_rx
 = 0;

5104 
	}
}

5106 
	$πl_hw_jumbo_íabÀ
(
πl8169_¥iv©e
 *
ç
)

5108 
	`RTL_W8
(
ç
, 
Cfg9346
, 
Cfg9346_U∆ock
);

5109 
	`πl_gíîic_›
(
ç
,Åp->
jumbo_›s
.
íabÀ
);

5110 
	`RTL_W8
(
ç
, 
Cfg9346
, 
Cfg9346_Lock
);

5111 
	}
}

5113 
	$πl_hw_jumbo_dißbÀ
(
πl8169_¥iv©e
 *
ç
)

5115 
	`RTL_W8
(
ç
, 
Cfg9346
, 
Cfg9346_U∆ock
);

5116 
	`πl_gíîic_›
(
ç
,Åp->
jumbo_›s
.
dißbÀ
);

5117 
	`RTL_W8
(
ç
, 
Cfg9346
, 
Cfg9346_Lock
);

5118 
	}
}

5120 
	$r8168c_hw_jumbo_íabÀ
(
πl8169_¥iv©e
 *
ç
)

5122 
	`RTL_W8
(
ç
, 
C⁄fig3
, 
	`RTL_R8
—p, C⁄fig3Ë| 
Jumbo_En0
);

5123 
	`RTL_W8
(
ç
, 
C⁄fig4
, 
	`RTL_R8
—p, C⁄fig4Ë| 
Jumbo_En1
);

5124 
	`πl_tx_≥rf‹m™˚_twók
(
ç
, 
PCI_EXP_DEVCTL_READRQ_512B
);

5125 
	}
}

5127 
	$r8168c_hw_jumbo_dißbÀ
(
πl8169_¥iv©e
 *
ç
)

5129 
	`RTL_W8
(
ç
, 
C⁄fig3
, 
	`RTL_R8
—p, C⁄fig3Ë& ~
Jumbo_En0
);

5130 
	`RTL_W8
(
ç
, 
C⁄fig4
, 
	`RTL_R8
—p, C⁄fig4Ë& ~
Jumbo_En1
);

5131 
	`πl_tx_≥rf‹m™˚_twók
(
ç
, 0x5 << 
MAX_READ_REQUEST_SHIFT
);

5132 
	}
}

5134 
	$r8168dp_hw_jumbo_íabÀ
(
πl8169_¥iv©e
 *
ç
)

5136 
	`RTL_W8
(
ç
, 
C⁄fig3
, 
	`RTL_R8
—p, C⁄fig3Ë| 
Jumbo_En0
);

5137 
	}
}

5139 
	$r8168dp_hw_jumbo_dißbÀ
(
πl8169_¥iv©e
 *
ç
)

5141 
	`RTL_W8
(
ç
, 
C⁄fig3
, 
	`RTL_R8
—p, C⁄fig3Ë& ~
Jumbo_En0
);

5142 
	}
}

5144 
	$r8168e_hw_jumbo_íabÀ
(
πl8169_¥iv©e
 *
ç
)

5146 
	`RTL_W8
(
ç
, 
MaxTxPackëSize
, 0x3f);

5147 
	`RTL_W8
(
ç
, 
C⁄fig3
, 
	`RTL_R8
—p, C⁄fig3Ë| 
Jumbo_En0
);

5148 
	`RTL_W8
(
ç
, 
C⁄fig4
, 
	`RTL_R8
(tp, Config4) | 0x01);

5149 
	`πl_tx_≥rf‹m™˚_twók
(
ç
, 
PCI_EXP_DEVCTL_READRQ_512B
);

5150 
	}
}

5152 
	$r8168e_hw_jumbo_dißbÀ
(
πl8169_¥iv©e
 *
ç
)

5154 
	`RTL_W8
(
ç
, 
MaxTxPackëSize
, 0x0c);

5155 
	`RTL_W8
(
ç
, 
C⁄fig3
, 
	`RTL_R8
—p, C⁄fig3Ë& ~
Jumbo_En0
);

5156 
	`RTL_W8
(
ç
, 
C⁄fig4
, 
	`RTL_R8
(tp, Config4) & ~0x01);

5157 
	`πl_tx_≥rf‹m™˚_twók
(
ç
, 0x5 << 
MAX_READ_REQUEST_SHIFT
);

5158 
	}
}

5160 
	$r8168b_0_hw_jumbo_íabÀ
(
πl8169_¥iv©e
 *
ç
)

5162 
	`πl_tx_≥rf‹m™˚_twók
(
ç
,

5163 
PCI_EXP_DEVCTL_READRQ_512B
 | 
PCI_EXP_DEVCTL_NOSNOOP_EN
);

5164 
	}
}

5166 
	$r8168b_0_hw_jumbo_dißbÀ
(
πl8169_¥iv©e
 *
ç
)

5168 
	`πl_tx_≥rf‹m™˚_twók
(
ç
,

5169 (0x5 << 
MAX_READ_REQUEST_SHIFT
Ë| 
PCI_EXP_DEVCTL_NOSNOOP_EN
);

5170 
	}
}

5172 
	$r8168b_1_hw_jumbo_íabÀ
(
πl8169_¥iv©e
 *
ç
)

5174 
	`r8168b_0_hw_jumbo_íabÀ
(
ç
);

5176 
	`RTL_W8
(
ç
, 
C⁄fig4
, 
	`RTL_R8
(tp, Config4) | (1 << 0));

5177 
	}
}

5179 
	$r8168b_1_hw_jumbo_dißbÀ
(
πl8169_¥iv©e
 *
ç
)

5181 
	`r8168b_0_hw_jumbo_dißbÀ
(
ç
);

5183 
	`RTL_W8
(
ç
, 
C⁄fig4
, 
	`RTL_R8
(tp, Config4) & ~(1 << 0));

5184 
	}
}

5186 
	$πl_öô_jumbo_›s
(
πl8169_¥iv©e
 *
ç
)

5188 
jumbo_›s
 *
›s
 = &
ç
->jumbo_ops;

5190 
ç
->
mac_vîsi⁄
) {

5191 
RTL_GIGA_MAC_VER_11
:

5192 
›s
->
dißbÀ
 = 
r8168b_0_hw_jumbo_dißbÀ
;

5193 
›s
->
íabÀ
 = 
r8168b_0_hw_jumbo_íabÀ
;

5195 
RTL_GIGA_MAC_VER_12
:

5196 
RTL_GIGA_MAC_VER_17
:

5197 
›s
->
dißbÀ
 = 
r8168b_1_hw_jumbo_dißbÀ
;

5198 
›s
->
íabÀ
 = 
r8168b_1_hw_jumbo_íabÀ
;

5200 
RTL_GIGA_MAC_VER_18
:

5201 
RTL_GIGA_MAC_VER_19
:

5202 
RTL_GIGA_MAC_VER_20
:

5203 
RTL_GIGA_MAC_VER_21
:

5204 
RTL_GIGA_MAC_VER_22
:

5205 
RTL_GIGA_MAC_VER_23
:

5206 
RTL_GIGA_MAC_VER_24
:

5207 
RTL_GIGA_MAC_VER_25
:

5208 
RTL_GIGA_MAC_VER_26
:

5209 
›s
->
dißbÀ
 = 
r8168c_hw_jumbo_dißbÀ
;

5210 
›s
->
íabÀ
 = 
r8168c_hw_jumbo_íabÀ
;

5212 
RTL_GIGA_MAC_VER_27
:

5213 
RTL_GIGA_MAC_VER_28
:

5214 
›s
->
dißbÀ
 = 
r8168dp_hw_jumbo_dißbÀ
;

5215 
›s
->
íabÀ
 = 
r8168dp_hw_jumbo_íabÀ
;

5217 
RTL_GIGA_MAC_VER_31
:

5218 
RTL_GIGA_MAC_VER_32
:

5219 
RTL_GIGA_MAC_VER_33
:

5220 
RTL_GIGA_MAC_VER_34
:

5221 
›s
->
dißbÀ
 = 
r8168e_hw_jumbo_dißbÀ
;

5222 
›s
->
íabÀ
 = 
r8168e_hw_jumbo_íabÀ
;

5229 
RTL_GIGA_MAC_VER_40
:

5230 
RTL_GIGA_MAC_VER_41
:

5231 
RTL_GIGA_MAC_VER_42
:

5232 
RTL_GIGA_MAC_VER_43
:

5233 
RTL_GIGA_MAC_VER_44
:

5234 
RTL_GIGA_MAC_VER_45
:

5235 
RTL_GIGA_MAC_VER_46
:

5236 
RTL_GIGA_MAC_VER_47
:

5237 
RTL_GIGA_MAC_VER_48
:

5238 
RTL_GIGA_MAC_VER_49
:

5239 
RTL_GIGA_MAC_VER_50
:

5240 
RTL_GIGA_MAC_VER_51
:

5242 
›s
->
dißbÀ
 = 
NULL
;

5243 
›s
->
íabÀ
 = 
NULL
;

5246 
	}
}

5248 
	$DECLARE_RTL_COND
(
πl_chùcmd_c⁄d
)

5250  
	`RTL_R8
(
ç
, 
ChùCmd
Ë& 
CmdRe£t
;

5251 
	}
}

5253 
	$πl_hw_ª£t
(
πl8169_¥iv©e
 *
ç
)

5255 
	`RTL_W8
(
ç
, 
ChùCmd
, 
CmdRe£t
);

5257 
	`πl_udñay_lo›_waô_low
(
ç
, &
πl_chùcmd_c⁄d
, 100, 100);

5258 
	}
}

5260 
	$πl_ªque°_unˇched_fúmw¨e
(
πl8169_¥iv©e
 *
ç
)

5262 
πl_fw
 *rtl_fw;

5263 c⁄° *
«me
;

5264 
rc
 = -
ENOMEM
;

5266 
«me
 = 
	`πl_lookup_fúmw¨e_«me
(
ç
);

5267 i‡(!
«me
)

5268 
out_no_fúmw¨e
;

5270 
πl_fw
 = 
	`kzÆloc
((*πl_fw), 
GFP_KERNEL
);

5271 i‡(!
πl_fw
)

5272 
îr_w¨n
;

5274 
rc
 = 
	`ªque°_fúmw¨e
(&
πl_fw
->
fw
, 
«me
, 
	`ç_to_dev
(
ç
));

5275 i‡(
rc
 < 0)

5276 
îr_‰ì
;

5278 
rc
 = 
	`πl_check_fúmw¨e
(
ç
, 
πl_fw
);

5279 i‡(
rc
 < 0)

5280 
îr_ªÀa£_fúmw¨e
;

5282 
ç
->
πl_fw
 =Ñtl_fw;

5283 
out
:

5286 
îr_ªÀa£_fúmw¨e
:

5287 
	`ªÀa£_fúmw¨e
(
πl_fw
->
fw
);

5288 
îr_‰ì
:

5289 
	`k‰ì
(
πl_fw
);

5290 
îr_w¨n
:

5291 
	`√tif_w¨n
(
ç
, 
ifup
,Åp->
dev
, "unableÅoÜoad firmwareÖatch %s (%d)\n",

5292 
«me
, 
rc
);

5293 
out_no_fúmw¨e
:

5294 
ç
->
πl_fw
 = 
NULL
;

5295 
out
;

5296 
	}
}

5298 
	$πl_ªque°_fúmw¨e
(
πl8169_¥iv©e
 *
ç
)

5300 i‡(
	`IS_ERR
(
ç
->
πl_fw
))

5301 
	`πl_ªque°_unˇched_fúmw¨e
(
ç
);

5302 
	}
}

5304 
	$πl_rx_˛o£
(
πl8169_¥iv©e
 *
ç
)

5306 
	`RTL_W32
(
ç
, 
RxC⁄fig
, 
	`RTL_R32
—p, RxC⁄figË& ~
RX_CONFIG_ACCEPT_MASK
);

5307 
	}
}

5309 
	$DECLARE_RTL_COND
(
πl_≈q_c⁄d
)

5311  
	`RTL_R8
(
ç
, 
TxPﬁl
Ë& 
NPQ
;

5312 
	}
}

5314 
	$DECLARE_RTL_COND
(
πl_txcfg_em±y_c⁄d
)

5316  
	`RTL_R32
(
ç
, 
TxC⁄fig
Ë& 
TXCFG_EMPTY
;

5317 
	}
}

5319 
	$πl8169_hw_ª£t
(
πl8169_¥iv©e
 *
ç
)

5322 
	`πl8169_úq_mask_™d_ack
(
ç
);

5324 
	`πl_rx_˛o£
(
ç
);

5326 i‡(
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_27
 ||

5327 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_28
 ||

5328 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_31
) {

5329 
	`πl_udñay_lo›_waô_low
(
ç
, &
πl_≈q_c⁄d
, 20, 42*42);

5330 } i‡(
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_34
 ||

5331 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_35
 ||

5332 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_36
 ||

5333 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_37
 ||

5334 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_38
 ||

5335 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_40
 ||

5336 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_41
 ||

5337 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_42
 ||

5338 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_43
 ||

5339 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_44
 ||

5340 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_45
 ||

5341 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_46
 ||

5342 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_47
 ||

5343 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_48
 ||

5344 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_49
 ||

5345 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_50
 ||

5346 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_51
) {

5347 
	`RTL_W8
(
ç
, 
ChùCmd
, 
	`RTL_R8
—p, ChùCmdË| 
St›Req
);

5348 
	`πl_udñay_lo›_waô_high
(
ç
, &
πl_txcfg_em±y_c⁄d
, 100, 666);

5350 
	`RTL_W8
(
ç
, 
ChùCmd
, 
	`RTL_R8
—p, ChùCmdË| 
St›Req
);

5351 
	`udñay
(100);

5354 
	`πl_hw_ª£t
(
ç
);

5355 
	}
}

5357 
	$πl_£t_rx_tx_c⁄fig_ªgi°îs
(
πl8169_¥iv©e
 *
ç
)

5360 
	`RTL_W32
(
ç
, 
TxC⁄fig
, (
TX_DMA_BURST
 << 
TxDMAShi·
) |

5361 (
I¡îFømeG≠
 << 
TxI¡îFømeG≠Shi·
));

5362 
	}
}

5364 
	$πl_hw_°¨t
(
√t_devi˚
 *
dev
)

5366 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

5368 
ç
->
	`hw_°¨t
(
dev
);

5370 
	`πl_úq_íabÀ_Æl
(
ç
);

5371 
	}
}

5373 
	$πl_£t_rx_tx_desc_ªgi°îs
(
πl8169_¥iv©e
 *
ç
)

5380 
	`RTL_W32
(
ç
, 
TxDescSèπAddrHigh
, ((
u64
Ëç->
TxPhyAddr
) >> 32);

5381 
	`RTL_W32
(
ç
, 
TxDescSèπAddrLow
, ((
u64
Ëç->
TxPhyAddr
Ë& 
	`DMA_BIT_MASK
(32));

5382 
	`RTL_W32
(
ç
, 
RxDescAddrHigh
, ((
u64
Ëç->
RxPhyAddr
) >> 32);

5383 
	`RTL_W32
(
ç
, 
RxDescAddrLow
, ((
u64
Ëç->
RxPhyAddr
Ë& 
	`DMA_BIT_MASK
(32));

5384 
	}
}

5386 
u16
 
	$πl_rw_˝luscmd
(
πl8169_¥iv©e
 *
ç
)

5388 
u16
 
cmd
;

5390 
cmd
 = 
	`RTL_R16
(
ç
, 
CPlusCmd
);

5391 
	`RTL_W16
(
ç
, 
CPlusCmd
, 
cmd
);

5392  
cmd
;

5393 
	}
}

5395 
	$πl_£t_rx_max_size
(
πl8169_¥iv©e
 *
ç
, 
rx_buf_sz
)

5398 
	`RTL_W16
(
ç
, 
RxMaxSize
, 
rx_buf_sz
 + 1);

5399 
	}
}

5401 
	$πl8169_£t_magic_ªg
(
πl8169_¥iv©e
 *
ç
, 
mac_vîsi⁄
)

5403 c⁄° 
	sπl_cfg2_öfo
 {

5404 
u32
 
mac_vîsi⁄
;

5405 
u32
 
˛k
;

5406 
u32
 
vÆ
;

5407 } 
cfg2_öfo
 [] = {

5408 { 
RTL_GIGA_MAC_VER_05
, 
PCI_Clock_33MHz
, 0x000fff00 },

5409 { 
RTL_GIGA_MAC_VER_05
, 
PCI_Clock_66MHz
, 0x000fffff },

5410 { 
RTL_GIGA_MAC_VER_06
, 
PCI_Clock_33MHz
, 0x00ffff00 },

5411 { 
RTL_GIGA_MAC_VER_06
, 
PCI_Clock_66MHz
, 0x00ffffff }

5413 c⁄° 
πl_cfg2_öfo
 *
p
 = 
cfg2_öfo
;

5414 
i
;

5415 
u32
 
˛k
;

5417 
˛k
 = 
	`RTL_R8
(
ç
, 
C⁄fig2
Ë& 
PCI_Clock_66MHz
;

5418 
i
 = 0; i < 
	`ARRAY_SIZE
(
cfg2_öfo
); i++, 
p
++) {

5419 i‡((
p
->
mac_vîsi⁄
 =mac_vîsi⁄Ë&& (p->
˛k
 == clk)) {

5420 
	`RTL_W32
(
ç
, 0x7c, 
p
->
vÆ
);

5424 
	}
}

5426 
	$πl_£t_rx_mode
(
√t_devi˚
 *
dev
)

5428 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

5429 
u32
 
mc_fûãr
[2];

5430 
rx_mode
;

5431 
u32
 
tmp
 = 0;

5433 i‡(
dev
->
Êags
 & 
IFF_PROMISC
) {

5435 
	`√tif_nŸi˚
(
ç
, 
lök
, 
dev
, "Promiscuous modeÉnabled\n");

5436 
rx_mode
 =

5437 
Ac˚±Brﬂdˇ°
 | 
Ac˚±Mu…iˇ°
 | 
Ac˚±MyPhys
 |

5438 
Ac˚±AŒPhys
;

5439 
mc_fûãr
[1] = mc_filter[0] = 0xffffffff;

5440 } i‡((
	`√tdev_mc_cou¡
(
dev
Ë> 
mu…iˇ°_fûãr_limô
) ||

5441 (
dev
->
Êags
 & 
IFF_ALLMULTI
)) {

5443 
rx_mode
 = 
Ac˚±Brﬂdˇ°
 | 
Ac˚±Mu…iˇ°
 | 
Ac˚±MyPhys
;

5444 
mc_fûãr
[1] = mc_filter[0] = 0xffffffff;

5446 
√tdev_hw_addr
 *
ha
;

5448 
rx_mode
 = 
Ac˚±Brﬂdˇ°
 | 
Ac˚±MyPhys
;

5449 
mc_fûãr
[1] = mc_filter[0] = 0;

5450 
	`√tdev_f‹_óch_mc_addr
(
ha
, 
dev
) {

5451 
bô_ƒ
 = 
	`ëhî_¸c
(
ETH_ALEN
, 
ha
->
addr
) >> 26;

5452 
mc_fûãr
[
bô_ƒ
 >> 5] |= 1 << (bit_nr & 31);

5453 
rx_mode
 |
Ac˚±Mu…iˇ°
;

5457 i‡(
dev
->
„©uªs
 & 
NETIF_F_RXALL
)

5458 
rx_mode
 |(
Ac˚±Eº
 | 
Ac˚±Ru¡
);

5460 
tmp
 = (
	`RTL_R32
(
ç
, 
RxC⁄fig
Ë& ~
RX_CONFIG_ACCEPT_MASK
Ë| 
rx_mode
;

5462 i‡(
ç
->
mac_vîsi⁄
 > 
RTL_GIGA_MAC_VER_06
) {

5463 
u32
 
d©a
 = 
mc_fûãr
[0];

5465 
mc_fûãr
[0] = 
	`swab32
(mc_filter[1]);

5466 
mc_fûãr
[1] = 
	`swab32
(
d©a
);

5469 i‡(
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_35
)

5470 
mc_fûãr
[1] = mc_filter[0] = 0xffffffff;

5472 
	`RTL_W32
(
ç
, 
MAR0
 + 4, 
mc_fûãr
[1]);

5473 
	`RTL_W32
(
ç
, 
MAR0
 + 0, 
mc_fûãr
[0]);

5475 
	`RTL_W32
(
ç
, 
RxC⁄fig
, 
tmp
);

5476 
	}
}

5478 
	$πl_hw_°¨t_8169
(
√t_devi˚
 *
dev
)

5480 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

5481 
pci_dev
 *
pdev
 = 
ç
->pci_dev;

5483 i‡(
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_05
) {

5484 
	`RTL_W16
(
ç
, 
CPlusCmd
, 
	`RTL_R16
—p, CPlusCmdË| 
PCIMulRW
);

5485 
	`pci_wrôe_c⁄fig_byã
(
pdev
, 
PCI_CACHE_LINE_SIZE
, 0x08);

5488 
	`RTL_W8
(
ç
, 
Cfg9346
, 
Cfg9346_U∆ock
);

5489 i‡(
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_01
 ||

5490 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_02
 ||

5491 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_03
 ||

5492 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_04
)

5493 
	`RTL_W8
(
ç
, 
ChùCmd
, 
CmdTxEnb
 | 
CmdRxEnb
);

5495 
	`πl_öô_rxcfg
(
ç
);

5497 
	`RTL_W8
(
ç
, 
E¨lyTxThªs
, 
NoE¨lyTx
);

5499 
	`πl_£t_rx_max_size
(
ç
, 
rx_buf_sz
);

5501 i‡(
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_01
 ||

5502 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_02
 ||

5503 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_03
 ||

5504 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_04
)

5505 
	`πl_£t_rx_tx_c⁄fig_ªgi°îs
(
ç
);

5507 
ç
->
˝_cmd
 |
	`πl_rw_˝luscmd
—pË| 
PCIMulRW
;

5509 i‡(
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_02
 ||

5510 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_03
) {

5511 
	`d¥ötk
("Set MAC Reg C+CR Offset 0xe0. "

5513 
ç
->
˝_cmd
 |= (1 << 14);

5516 
	`RTL_W16
(
ç
, 
CPlusCmd
,Åp->
˝_cmd
);

5518 
	`πl8169_£t_magic_ªg
(
ç
,Åp->
mac_vîsi⁄
);

5524 
	`RTL_W16
(
ç
, 
I¡rMôig©e
, 0x0000);

5526 
	`πl_£t_rx_tx_desc_ªgi°îs
(
ç
);

5528 i‡(
ç
->
mac_vîsi⁄
 !
RTL_GIGA_MAC_VER_01
 &&

5529 
ç
->
mac_vîsi⁄
 !
RTL_GIGA_MAC_VER_02
 &&

5530 
ç
->
mac_vîsi⁄
 !
RTL_GIGA_MAC_VER_03
 &&

5531 
ç
->
mac_vîsi⁄
 !
RTL_GIGA_MAC_VER_04
) {

5532 
	`RTL_W8
(
ç
, 
ChùCmd
, 
CmdTxEnb
 | 
CmdRxEnb
);

5533 
	`πl_£t_rx_tx_c⁄fig_ªgi°îs
(
ç
);

5536 
	`RTL_W8
(
ç
, 
Cfg9346
, 
Cfg9346_Lock
);

5539 
	`RTL_R8
(
ç
, 
I¡rMask
);

5541 
	`RTL_W32
(
ç
, 
RxMis£d
, 0);

5543 
	`πl_£t_rx_mode
(
dev
);

5546 
	`RTL_W16
(
ç
, 
Mu…iI¡r
, 
	`RTL_R16
(tp, MultiIntr) & 0xf000);

5547 
	}
}

5549 
	$πl_csi_wrôe
(
πl8169_¥iv©e
 *
ç
, 
addr
, 
vÆue
)

5551 i‡(
ç
->
csi_›s
.
wrôe
)

5552 
ç
->
csi_›s
.
	`wrôe
—p, 
addr
, 
vÆue
);

5553 
	}
}

5555 
u32
 
	$πl_csi_ªad
(
πl8169_¥iv©e
 *
ç
, 
addr
)

5557  
ç
->
csi_›s
.
ªad
 ?Åp->csi_›s.
	`ªad
—p, 
addr
) : ~0;

5558 
	}
}

5560 
	$πl_csi_ac˚ss_íabÀ
(
πl8169_¥iv©e
 *
ç
, 
u32
 
bôs
)

5562 
u32
 
csi
;

5564 
csi
 = 
	`πl_csi_ªad
(
ç
, 0x070c) & 0x00ffffff;

5565 
	`πl_csi_wrôe
(
ç
, 0x070c, 
csi
 | 
bôs
);

5566 
	}
}

5568 
	$πl_csi_ac˚ss_íabÀ_1
(
πl8169_¥iv©e
 *
ç
)

5570 
	`πl_csi_ac˚ss_íabÀ
(
ç
, 0x17000000);

5571 
	}
}

5573 
	$πl_csi_ac˚ss_íabÀ_2
(
πl8169_¥iv©e
 *
ç
)

5575 
	`πl_csi_ac˚ss_íabÀ
(
ç
, 0x27000000);

5576 
	}
}

5578 
	$DECLARE_RTL_COND
(
πl_csür_c⁄d
)

5580  
	`RTL_R32
(
ç
, 
CSIAR
Ë& 
CSIAR_FLAG
;

5581 
	}
}

5583 
	$r8169_csi_wrôe
(
πl8169_¥iv©e
 *
ç
, 
addr
, 
vÆue
)

5585 
	`RTL_W32
(
ç
, 
CSIDR
, 
vÆue
);

5586 
	`RTL_W32
(
ç
, 
CSIAR
, 
CSIAR_WRITE_CMD
 | (
addr
 & 
CSIAR_ADDR_MASK
) |

5587 
CSIAR_BYTE_ENABLE
 << 
CSIAR_BYTE_ENABLE_SHIFT
);

5589 
	`πl_udñay_lo›_waô_low
(
ç
, &
πl_csür_c⁄d
, 10, 100);

5590 
	}
}

5592 
u32
 
	$r8169_csi_ªad
(
πl8169_¥iv©e
 *
ç
, 
addr
)

5594 
	`RTL_W32
(
ç
, 
CSIAR
, (
addr
 & 
CSIAR_ADDR_MASK
) |

5595 
CSIAR_BYTE_ENABLE
 << 
CSIAR_BYTE_ENABLE_SHIFT
);

5597  
	`πl_udñay_lo›_waô_high
(
ç
, &
πl_csür_c⁄d
, 10, 100) ?

5598 
	`RTL_R32
(
ç
, 
CSIDR
) : ~0;

5599 
	}
}

5601 
	$r8402_csi_wrôe
(
πl8169_¥iv©e
 *
ç
, 
addr
, 
vÆue
)

5603 
	`RTL_W32
(
ç
, 
CSIDR
, 
vÆue
);

5604 
	`RTL_W32
(
ç
, 
CSIAR
, 
CSIAR_WRITE_CMD
 | (
addr
 & 
CSIAR_ADDR_MASK
) |

5605 
CSIAR_BYTE_ENABLE
 << 
CSIAR_BYTE_ENABLE_SHIFT
 |

5606 
CSIAR_FUNC_NIC
);

5608 
	`πl_udñay_lo›_waô_low
(
ç
, &
πl_csür_c⁄d
, 10, 100);

5609 
	}
}

5611 
u32
 
	$r8402_csi_ªad
(
πl8169_¥iv©e
 *
ç
, 
addr
)

5613 
	`RTL_W32
(
ç
, 
CSIAR
, (
addr
 & 
CSIAR_ADDR_MASK
Ë| 
CSIAR_FUNC_NIC
 |

5614 
CSIAR_BYTE_ENABLE
 << 
CSIAR_BYTE_ENABLE_SHIFT
);

5616  
	`πl_udñay_lo›_waô_high
(
ç
, &
πl_csür_c⁄d
, 10, 100) ?

5617 
	`RTL_R32
(
ç
, 
CSIDR
) : ~0;

5618 
	}
}

5620 
	$r8411_csi_wrôe
(
πl8169_¥iv©e
 *
ç
, 
addr
, 
vÆue
)

5622 
	`RTL_W32
(
ç
, 
CSIDR
, 
vÆue
);

5623 
	`RTL_W32
(
ç
, 
CSIAR
, 
CSIAR_WRITE_CMD
 | (
addr
 & 
CSIAR_ADDR_MASK
) |

5624 
CSIAR_BYTE_ENABLE
 << 
CSIAR_BYTE_ENABLE_SHIFT
 |

5625 
CSIAR_FUNC_NIC2
);

5627 
	`πl_udñay_lo›_waô_low
(
ç
, &
πl_csür_c⁄d
, 10, 100);

5628 
	}
}

5630 
u32
 
	$r8411_csi_ªad
(
πl8169_¥iv©e
 *
ç
, 
addr
)

5632 
	`RTL_W32
(
ç
, 
CSIAR
, (
addr
 & 
CSIAR_ADDR_MASK
Ë| 
CSIAR_FUNC_NIC2
 |

5633 
CSIAR_BYTE_ENABLE
 << 
CSIAR_BYTE_ENABLE_SHIFT
);

5635  
	`πl_udñay_lo›_waô_high
(
ç
, &
πl_csür_c⁄d
, 10, 100) ?

5636 
	`RTL_R32
(
ç
, 
CSIDR
) : ~0;

5637 
	}
}

5639 
	$πl_öô_csi_›s
(
πl8169_¥iv©e
 *
ç
)

5641 
csi_›s
 *
›s
 = &
ç
->csi_ops;

5643 
ç
->
mac_vîsi⁄
) {

5644 
RTL_GIGA_MAC_VER_01
:

5645 
RTL_GIGA_MAC_VER_02
:

5646 
RTL_GIGA_MAC_VER_03
:

5647 
RTL_GIGA_MAC_VER_04
:

5648 
RTL_GIGA_MAC_VER_05
:

5649 
RTL_GIGA_MAC_VER_06
:

5650 
RTL_GIGA_MAC_VER_10
:

5651 
RTL_GIGA_MAC_VER_11
:

5652 
RTL_GIGA_MAC_VER_12
:

5653 
RTL_GIGA_MAC_VER_13
:

5654 
RTL_GIGA_MAC_VER_14
:

5655 
RTL_GIGA_MAC_VER_15
:

5656 
RTL_GIGA_MAC_VER_16
:

5657 
RTL_GIGA_MAC_VER_17
:

5658 
›s
->
wrôe
 = 
NULL
;

5659 
›s
->
ªad
 = 
NULL
;

5662 
RTL_GIGA_MAC_VER_37
:

5663 
RTL_GIGA_MAC_VER_38
:

5664 
›s
->
wrôe
 = 
r8402_csi_wrôe
;

5665 
›s
->
ªad
 = 
r8402_csi_ªad
;

5668 
RTL_GIGA_MAC_VER_44
:

5669 
›s
->
wrôe
 = 
r8411_csi_wrôe
;

5670 
›s
->
ªad
 = 
r8411_csi_ªad
;

5674 
›s
->
wrôe
 = 
r8169_csi_wrôe
;

5675 
›s
->
ªad
 = 
r8169_csi_ªad
;

5678 
	}
}

5680 
	sïhy_öfo
 {

5681 
	moff£t
;

5682 
u16
 
	mmask
;

5683 
u16
 
	mbôs
;

5686 
	$πl_ïhy_öô
(
πl8169_¥iv©e
 *
ç
, c⁄° 
ïhy_öfo
 *
e
,

5687 
Àn
)

5689 
u16
 
w
;

5691 
Àn
-- > 0) {

5692 
w
 = (
	`πl_ïhy_ªad
(
ç
, 
e
->
off£t
Ë& ~e->
mask
Ë|É->
bôs
;

5693 
	`πl_ïhy_wrôe
(
ç
, 
e
->
off£t
, 
w
);

5694 
e
++;

5696 
	}
}

5698 
	$πl_dißbÀ_˛ock_ªque°
(
πl8169_¥iv©e
 *
ç
)

5700 
	`pcõ_ˇ∑bûôy_˛ór_w‹d
(
ç
->
pci_dev
, 
PCI_EXP_LNKCTL
,

5701 
PCI_EXP_LNKCTL_CLKREQ_EN
);

5702 
	}
}

5704 
	$πl_íabÀ_˛ock_ªque°
(
πl8169_¥iv©e
 *
ç
)

5706 
	`pcõ_ˇ∑bûôy_£t_w‹d
(
ç
->
pci_dev
, 
PCI_EXP_LNKCTL
,

5707 
PCI_EXP_LNKCTL_CLKREQ_EN
);

5708 
	}
}

5710 
	$πl_pcõ_°©e_l2l3_íabÀ
(
πl8169_¥iv©e
 *
ç
, 
boﬁ
 
íabÀ
)

5712 
u8
 
d©a
;

5714 
d©a
 = 
	`RTL_R8
(
ç
, 
C⁄fig3
);

5716 i‡(
íabÀ
)

5717 
d©a
 |
Rdy_to_L23
;

5719 
d©a
 &~
Rdy_to_L23
;

5721 
	`RTL_W8
(
ç
, 
C⁄fig3
, 
d©a
);

5722 
	}
}

5724 
	#R8168_CPCMD_QUIRK_MASK
 (\

5725 
E«bÀBi°
 | \

5726 
Mac_dbgo_€
 | \

5727 
F‹˚_hÆf_dup
 | \

5728 
F‹˚_rxÊow_í
 | \

5729 
F‹˚_txÊow_í
 | \

5730 
Cx∂_dbg_£l
 | \

5731 
ASF
 | \

5732 
PktC¡rDißbÀ
 | \

5733 
Mac_dbgo_£l
)

	)

5735 
	$πl_hw_°¨t_8168bb
(
πl8169_¥iv©e
 *
ç
)

5737 
	`RTL_W8
(
ç
, 
C⁄fig3
, 
	`RTL_R8
—p, C⁄fig3Ë& ~
Bóc⁄_í
);

5739 
	`RTL_W16
(
ç
, 
CPlusCmd
, 
	`RTL_R16
—p, CPlusCmdË& ~
R8168_CPCMD_QUIRK_MASK
);

5741 i‡(
ç
->
dev
->
mtu
 <
ETH_DATA_LEN
) {

5742 
	`πl_tx_≥rf‹m™˚_twók
(
ç
, (0x5 << 
MAX_READ_REQUEST_SHIFT
) |

5743 
PCI_EXP_DEVCTL_NOSNOOP_EN
);

5745 
	}
}

5747 
	$πl_hw_°¨t_8168bef
(
πl8169_¥iv©e
 *
ç
)

5749 
	`πl_hw_°¨t_8168bb
(
ç
);

5751 
	`RTL_W8
(
ç
, 
MaxTxPackëSize
, 
TxPackëMax
);

5753 
	`RTL_W8
(
ç
, 
C⁄fig4
, 
	`RTL_R8
(tp, Config4) & ~(1 << 0));

5754 
	}
}

5756 
	$__πl_hw_°¨t_8168˝
(
πl8169_¥iv©e
 *
ç
)

5758 
	`RTL_W8
(
ç
, 
C⁄fig1
, 
	`RTL_R8
—p, C⁄fig1Ë| 
S≥ed_down
);

5760 
	`RTL_W8
(
ç
, 
C⁄fig3
, 
	`RTL_R8
—p, C⁄fig3Ë& ~
Bóc⁄_í
);

5762 i‡(
ç
->
dev
->
mtu
 <
ETH_DATA_LEN
)

5763 
	`πl_tx_≥rf‹m™˚_twók
(
ç
, 0x5 << 
MAX_READ_REQUEST_SHIFT
);

5765 
	`πl_dißbÀ_˛ock_ªque°
(
ç
);

5767 
	`RTL_W16
(
ç
, 
CPlusCmd
, 
	`RTL_R16
—p, CPlusCmdË& ~
R8168_CPCMD_QUIRK_MASK
);

5768 
	}
}

5770 
	$πl_hw_°¨t_8168˝_1
(
πl8169_¥iv©e
 *
ç
)

5772 c⁄° 
ïhy_öfo
 
e_öfo_8168˝
[] = {

5780 
	`πl_csi_ac˚ss_íabÀ_2
(
ç
);

5782 
	`πl_ïhy_öô
(
ç
, 
e_öfo_8168˝
, 
	`ARRAY_SIZE
(e_info_8168cp));

5784 
	`__πl_hw_°¨t_8168˝
(
ç
);

5785 
	}
}

5787 
	$πl_hw_°¨t_8168˝_2
(
πl8169_¥iv©e
 *
ç
)

5789 
	`πl_csi_ac˚ss_íabÀ_2
(
ç
);

5791 
	`RTL_W8
(
ç
, 
C⁄fig3
, 
	`RTL_R8
—p, C⁄fig3Ë& ~
Bóc⁄_í
);

5793 i‡(
ç
->
dev
->
mtu
 <
ETH_DATA_LEN
)

5794 
	`πl_tx_≥rf‹m™˚_twók
(
ç
, 0x5 << 
MAX_READ_REQUEST_SHIFT
);

5796 
	`RTL_W16
(
ç
, 
CPlusCmd
, 
	`RTL_R16
—p, CPlusCmdË& ~
R8168_CPCMD_QUIRK_MASK
);

5797 
	}
}

5799 
	$πl_hw_°¨t_8168˝_3
(
πl8169_¥iv©e
 *
ç
)

5801 
	`πl_csi_ac˚ss_íabÀ_2
(
ç
);

5803 
	`RTL_W8
(
ç
, 
C⁄fig3
, 
	`RTL_R8
—p, C⁄fig3Ë& ~
Bóc⁄_í
);

5806 
	`RTL_W8
(
ç
, 
DBG_REG
, 0x20);

5808 
	`RTL_W8
(
ç
, 
MaxTxPackëSize
, 
TxPackëMax
);

5810 i‡(
ç
->
dev
->
mtu
 <
ETH_DATA_LEN
)

5811 
	`πl_tx_≥rf‹m™˚_twók
(
ç
, 0x5 << 
MAX_READ_REQUEST_SHIFT
);

5813 
	`RTL_W16
(
ç
, 
CPlusCmd
, 
	`RTL_R16
—p, CPlusCmdË& ~
R8168_CPCMD_QUIRK_MASK
);

5814 
	}
}

5816 
	$πl_hw_°¨t_8168c_1
(
πl8169_¥iv©e
 *
ç
)

5818 c⁄° 
ïhy_öfo
 
e_öfo_8168c_1
[] = {

5824 
	`πl_csi_ac˚ss_íabÀ_2
(
ç
);

5826 
	`RTL_W8
(
ç
, 
DBG_REG
, 0x06 | 
FIX_NAK_1
 | 
FIX_NAK_2
);

5828 
	`πl_ïhy_öô
(
ç
, 
e_öfo_8168c_1
, 
	`ARRAY_SIZE
(e_info_8168c_1));

5830 
	`__πl_hw_°¨t_8168˝
(
ç
);

5831 
	}
}

5833 
	$πl_hw_°¨t_8168c_2
(
πl8169_¥iv©e
 *
ç
)

5835 c⁄° 
ïhy_öfo
 
e_öfo_8168c_2
[] = {

5840 
	`πl_csi_ac˚ss_íabÀ_2
(
ç
);

5842 
	`πl_ïhy_öô
(
ç
, 
e_öfo_8168c_2
, 
	`ARRAY_SIZE
(e_info_8168c_2));

5844 
	`__πl_hw_°¨t_8168˝
(
ç
);

5845 
	}
}

5847 
	$πl_hw_°¨t_8168c_3
(
πl8169_¥iv©e
 *
ç
)

5849 
	`πl_hw_°¨t_8168c_2
(
ç
);

5850 
	}
}

5852 
	$πl_hw_°¨t_8168c_4
(
πl8169_¥iv©e
 *
ç
)

5854 
	`πl_csi_ac˚ss_íabÀ_2
(
ç
);

5856 
	`__πl_hw_°¨t_8168˝
(
ç
);

5857 
	}
}

5859 
	$πl_hw_°¨t_8168d
(
πl8169_¥iv©e
 *
ç
)

5861 
	`πl_csi_ac˚ss_íabÀ_2
(
ç
);

5863 
	`πl_dißbÀ_˛ock_ªque°
(
ç
);

5865 
	`RTL_W8
(
ç
, 
MaxTxPackëSize
, 
TxPackëMax
);

5867 i‡(
ç
->
dev
->
mtu
 <
ETH_DATA_LEN
)

5868 
	`πl_tx_≥rf‹m™˚_twók
(
ç
, 0x5 << 
MAX_READ_REQUEST_SHIFT
);

5870 
	`RTL_W16
(
ç
, 
CPlusCmd
, 
	`RTL_R16
—p, CPlusCmdË& ~
R8168_CPCMD_QUIRK_MASK
);

5871 
	}
}

5873 
	$πl_hw_°¨t_8168dp
(
πl8169_¥iv©e
 *
ç
)

5875 
	`πl_csi_ac˚ss_íabÀ_1
(
ç
);

5877 i‡(
ç
->
dev
->
mtu
 <
ETH_DATA_LEN
)

5878 
	`πl_tx_≥rf‹m™˚_twók
(
ç
, 0x5 << 
MAX_READ_REQUEST_SHIFT
);

5880 
	`RTL_W8
(
ç
, 
MaxTxPackëSize
, 
TxPackëMax
);

5882 
	`πl_dißbÀ_˛ock_ªque°
(
ç
);

5883 
	}
}

5885 
	$πl_hw_°¨t_8168d_4
(
πl8169_¥iv©e
 *
ç
)

5887 c⁄° 
ïhy_öfo
 
e_öfo_8168d_4
[] = {

5893 
	`πl_csi_ac˚ss_íabÀ_1
(
ç
);

5895 
	`πl_tx_≥rf‹m™˚_twók
(
ç
, 0x5 << 
MAX_READ_REQUEST_SHIFT
);

5897 
	`RTL_W8
(
ç
, 
MaxTxPackëSize
, 
TxPackëMax
);

5899 
	`πl_ïhy_öô
(
ç
, 
e_öfo_8168d_4
, 
	`ARRAY_SIZE
(e_info_8168d_4));

5901 
	`πl_íabÀ_˛ock_ªque°
(
ç
);

5902 
	}
}

5904 
	$πl_hw_°¨t_8168e_1
(
πl8169_¥iv©e
 *
ç
)

5906 c⁄° 
ïhy_öfo
 
e_öfo_8168e_1
[] = {

5922 
	`πl_csi_ac˚ss_íabÀ_2
(
ç
);

5924 
	`πl_ïhy_öô
(
ç
, 
e_öfo_8168e_1
, 
	`ARRAY_SIZE
(e_info_8168e_1));

5926 i‡(
ç
->
dev
->
mtu
 <
ETH_DATA_LEN
)

5927 
	`πl_tx_≥rf‹m™˚_twók
(
ç
, 0x5 << 
MAX_READ_REQUEST_SHIFT
);

5929 
	`RTL_W8
(
ç
, 
MaxTxPackëSize
, 
TxPackëMax
);

5931 
	`πl_dißbÀ_˛ock_ªque°
(
ç
);

5934 
	`RTL_W32
(
ç
, 
MISC
, 
	`RTL_R32
—p, MISCË| 
TXPLA_RST
);

5935 
	`RTL_W32
(
ç
, 
MISC
, 
	`RTL_R32
—p, MISCË& ~
TXPLA_RST
);

5937 
	`RTL_W8
(
ç
, 
C⁄fig5
, 
	`RTL_R8
—p, C⁄fig5Ë& ~
Spi_í
);

5938 
	}
}

5940 
	$πl_hw_°¨t_8168e_2
(
πl8169_¥iv©e
 *
ç
)

5942 c⁄° 
ïhy_öfo
 
e_öfo_8168e_2
[] = {

5947 
	`πl_csi_ac˚ss_íabÀ_1
(
ç
);

5949 
	`πl_ïhy_öô
(
ç
, 
e_öfo_8168e_2
, 
	`ARRAY_SIZE
(e_info_8168e_2));

5951 i‡(
ç
->
dev
->
mtu
 <
ETH_DATA_LEN
)

5952 
	`πl_tx_≥rf‹m™˚_twók
(
ç
, 0x5 << 
MAX_READ_REQUEST_SHIFT
);

5954 
	`πl_îi_wrôe
(
ç
, 0xc0, 
ERIAR_MASK_0011
, 0x0000, 
ERIAR_EXGMAC
);

5955 
	`πl_îi_wrôe
(
ç
, 0xb8, 
ERIAR_MASK_0011
, 0x0000, 
ERIAR_EXGMAC
);

5956 
	`πl_îi_wrôe
(
ç
, 0xc8, 
ERIAR_MASK_1111
, 0x00100002, 
ERIAR_EXGMAC
);

5957 
	`πl_îi_wrôe
(
ç
, 0xe8, 
ERIAR_MASK_1111
, 0x00100006, 
ERIAR_EXGMAC
);

5958 
	`πl_îi_wrôe
(
ç
, 0xcc, 
ERIAR_MASK_1111
, 0x00000050, 
ERIAR_EXGMAC
);

5959 
	`πl_îi_wrôe
(
ç
, 0xd0, 
ERIAR_MASK_1111
, 0x07ff0060, 
ERIAR_EXGMAC
);

5960 
	`πl_w0w1_îi
(
ç
, 0x1b0, 
ERIAR_MASK_0001
, 0x10, 0x00, 
ERIAR_EXGMAC
);

5961 
	`πl_w0w1_îi
(
ç
, 0x0d4, 
ERIAR_MASK_0011
, 0x0c00, 0xff00, 
ERIAR_EXGMAC
);

5963 
	`RTL_W8
(
ç
, 
MaxTxPackëSize
, 
E¨lySize
);

5965 
	`πl_dißbÀ_˛ock_ªque°
(
ç
);

5967 
	`RTL_W32
(
ç
, 
TxC⁄fig
, 
	`RTL_R32
—p, TxC⁄figË| 
TXCFG_AUTO_FIFO
);

5968 
	`RTL_W8
(
ç
, 
MCU
, 
	`RTL_R8
—p, MCUË& ~
NOW_IS_OOB
);

5971 
	`RTL_W8
(
ç
, 
EEE_LED
, 
	`RTL_R8
(tp, EEE_LED) & ~0x07);

5973 
	`RTL_W8
(
ç
, 
DLLPR
, 
	`RTL_R8
—p, DLLPRË| 
PFM_EN
);

5974 
	`RTL_W32
(
ç
, 
MISC
, 
	`RTL_R32
—p, MISCË| 
PWM_EN
);

5975 
	`RTL_W8
(
ç
, 
C⁄fig5
, 
	`RTL_R8
—p, C⁄fig5Ë& ~
Spi_í
);

5976 
	}
}

5978 
	$πl_hw_°¨t_8168f
(
πl8169_¥iv©e
 *
ç
)

5980 
	`πl_csi_ac˚ss_íabÀ_2
(
ç
);

5982 
	`πl_tx_≥rf‹m™˚_twók
(
ç
, 0x5 << 
MAX_READ_REQUEST_SHIFT
);

5984 
	`πl_îi_wrôe
(
ç
, 0xc0, 
ERIAR_MASK_0011
, 0x0000, 
ERIAR_EXGMAC
);

5985 
	`πl_îi_wrôe
(
ç
, 0xb8, 
ERIAR_MASK_0011
, 0x0000, 
ERIAR_EXGMAC
);

5986 
	`πl_îi_wrôe
(
ç
, 0xc8, 
ERIAR_MASK_1111
, 0x00100002, 
ERIAR_EXGMAC
);

5987 
	`πl_îi_wrôe
(
ç
, 0xe8, 
ERIAR_MASK_1111
, 0x00100006, 
ERIAR_EXGMAC
);

5988 
	`πl_w0w1_îi
(
ç
, 0xdc, 
ERIAR_MASK_0001
, 0x00, 0x01, 
ERIAR_EXGMAC
);

5989 
	`πl_w0w1_îi
(
ç
, 0xdc, 
ERIAR_MASK_0001
, 0x01, 0x00, 
ERIAR_EXGMAC
);

5990 
	`πl_w0w1_îi
(
ç
, 0x1b0, 
ERIAR_MASK_0001
, 0x10, 0x00, 
ERIAR_EXGMAC
);

5991 
	`πl_w0w1_îi
(
ç
, 0x1d0, 
ERIAR_MASK_0001
, 0x10, 0x00, 
ERIAR_EXGMAC
);

5992 
	`πl_îi_wrôe
(
ç
, 0xcc, 
ERIAR_MASK_1111
, 0x00000050, 
ERIAR_EXGMAC
);

5993 
	`πl_îi_wrôe
(
ç
, 0xd0, 
ERIAR_MASK_1111
, 0x00000060, 
ERIAR_EXGMAC
);

5995 
	`RTL_W8
(
ç
, 
MaxTxPackëSize
, 
E¨lySize
);

5997 
	`πl_dißbÀ_˛ock_ªque°
(
ç
);

5999 
	`RTL_W32
(
ç
, 
TxC⁄fig
, 
	`RTL_R32
—p, TxC⁄figË| 
TXCFG_AUTO_FIFO
);

6000 
	`RTL_W8
(
ç
, 
MCU
, 
	`RTL_R8
—p, MCUË& ~
NOW_IS_OOB
);

6001 
	`RTL_W8
(
ç
, 
DLLPR
, 
	`RTL_R8
—p, DLLPRË| 
PFM_EN
);

6002 
	`RTL_W32
(
ç
, 
MISC
, 
	`RTL_R32
—p, MISCË| 
PWM_EN
);

6003 
	`RTL_W8
(
ç
, 
C⁄fig5
, 
	`RTL_R8
—p, C⁄fig5Ë& ~
Spi_í
);

6004 
	}
}

6006 
	$πl_hw_°¨t_8168f_1
(
πl8169_¥iv©e
 *
ç
)

6008 c⁄° 
ïhy_öfo
 
e_öfo_8168f_1
[] = {

6015 
	`πl_hw_°¨t_8168f
(
ç
);

6017 
	`πl_ïhy_öô
(
ç
, 
e_öfo_8168f_1
, 
	`ARRAY_SIZE
(e_info_8168f_1));

6019 
	`πl_w0w1_îi
(
ç
, 0x0d4, 
ERIAR_MASK_0011
, 0x0c00, 0xff00, 
ERIAR_EXGMAC
);

6022 
	`RTL_W8
(
ç
, 
EEE_LED
, 
	`RTL_R8
(tp, EEE_LED) & ~0x07);

6023 
	}
}

6025 
	$πl_hw_°¨t_8411
(
πl8169_¥iv©e
 *
ç
)

6027 c⁄° 
ïhy_öfo
 
e_öfo_8168f_1
[] = {

6034 
	`πl_hw_°¨t_8168f
(
ç
);

6035 
	`πl_pcõ_°©e_l2l3_íabÀ
(
ç
, 
Ál£
);

6037 
	`πl_ïhy_öô
(
ç
, 
e_öfo_8168f_1
, 
	`ARRAY_SIZE
(e_info_8168f_1));

6039 
	`πl_w0w1_îi
(
ç
, 0x0d4, 
ERIAR_MASK_0011
, 0x0c00, 0x0000, 
ERIAR_EXGMAC
);

6040 
	}
}

6042 
	$πl_hw_°¨t_8168g
(
πl8169_¥iv©e
 *
ç
)

6044 
	`RTL_W32
(
ç
, 
TxC⁄fig
, 
	`RTL_R32
—p, TxC⁄figË| 
TXCFG_AUTO_FIFO
);

6046 
	`πl_îi_wrôe
(
ç
, 0xc8, 
ERIAR_MASK_0101
, 0x080002, 
ERIAR_EXGMAC
);

6047 
	`πl_îi_wrôe
(
ç
, 0xcc, 
ERIAR_MASK_0001
, 0x38, 
ERIAR_EXGMAC
);

6048 
	`πl_îi_wrôe
(
ç
, 0xd0, 
ERIAR_MASK_0001
, 0x48, 
ERIAR_EXGMAC
);

6049 
	`πl_îi_wrôe
(
ç
, 0xe8, 
ERIAR_MASK_1111
, 0x00100006, 
ERIAR_EXGMAC
);

6051 
	`πl_csi_ac˚ss_íabÀ_1
(
ç
);

6053 
	`πl_tx_≥rf‹m™˚_twók
(
ç
, 0x5 << 
MAX_READ_REQUEST_SHIFT
);

6055 
	`πl_w0w1_îi
(
ç
, 0xdc, 
ERIAR_MASK_0001
, 0x00, 0x01, 
ERIAR_EXGMAC
);

6056 
	`πl_w0w1_îi
(
ç
, 0xdc, 
ERIAR_MASK_0001
, 0x01, 0x00, 
ERIAR_EXGMAC
);

6057 
	`πl_îi_wrôe
(
ç
, 0x2f8, 
ERIAR_MASK_0011
, 0x1d8f, 
ERIAR_EXGMAC
);

6059 
	`RTL_W32
(
ç
, 
MISC
, 
	`RTL_R32
—p, MISCË& ~
RXDV_GATED_EN
);

6060 
	`RTL_W8
(
ç
, 
MaxTxPackëSize
, 
E¨lySize
);

6062 
	`πl_îi_wrôe
(
ç
, 0xc0, 
ERIAR_MASK_0011
, 0x0000, 
ERIAR_EXGMAC
);

6063 
	`πl_îi_wrôe
(
ç
, 0xb8, 
ERIAR_MASK_0011
, 0x0000, 
ERIAR_EXGMAC
);

6066 
	`RTL_W8
(
ç
, 
EEE_LED
, 
	`RTL_R8
(tp, EEE_LED) & ~0x07);

6068 
	`πl_w0w1_îi
(
ç
, 0x2fc, 
ERIAR_MASK_0001
, 0x01, 0x06, 
ERIAR_EXGMAC
);

6069 
	`πl_w0w1_îi
(
ç
, 0x1b0, 
ERIAR_MASK_0011
, 0x0000, 0x1000, 
ERIAR_EXGMAC
);

6071 
	`πl_pcõ_°©e_l2l3_íabÀ
(
ç
, 
Ál£
);

6072 
	}
}

6074 
	$πl_hw_°¨t_8168g_1
(
πl8169_¥iv©e
 *
ç
)

6076 c⁄° 
ïhy_öfo
 
e_öfo_8168g_1
[] = {

6083 
	`πl_hw_°¨t_8168g
(
ç
);

6086 
	`RTL_W8
(
ç
, 
C⁄fig2
, 
	`RTL_R8
—p, C⁄fig2Ë& ~
ClkReqEn
);

6087 
	`RTL_W8
(
ç
, 
C⁄fig5
, 
	`RTL_R8
—p, C⁄fig5Ë& ~
ASPM_í
);

6088 
	`πl_ïhy_öô
(
ç
, 
e_öfo_8168g_1
, 
	`ARRAY_SIZE
(e_info_8168g_1));

6089 
	}
}

6091 
	$πl_hw_°¨t_8168g_2
(
πl8169_¥iv©e
 *
ç
)

6093 c⁄° 
ïhy_öfo
 
e_öfo_8168g_2
[] = {

6100 
	`πl_hw_°¨t_8168g
(
ç
);

6103 
	`RTL_W8
(
ç
, 
C⁄fig2
, 
	`RTL_R8
—p, C⁄fig2Ë& ~
ClkReqEn
);

6104 
	`RTL_W8
(
ç
, 
C⁄fig5
, 
	`RTL_R8
—p, C⁄fig5Ë& ~
ASPM_í
);

6105 
	`πl_ïhy_öô
(
ç
, 
e_öfo_8168g_2
, 
	`ARRAY_SIZE
(e_info_8168g_2));

6106 
	}
}

6108 
	$πl_hw_°¨t_8411_2
(
πl8169_¥iv©e
 *
ç
)

6110 c⁄° 
ïhy_öfo
 
e_öfo_8411_2
[] = {

6118 
	`πl_hw_°¨t_8168g
(
ç
);

6121 
	`RTL_W8
(
ç
, 
C⁄fig2
, 
	`RTL_R8
—p, C⁄fig2Ë& ~
ClkReqEn
);

6122 
	`RTL_W8
(
ç
, 
C⁄fig5
, 
	`RTL_R8
—p, C⁄fig5Ë& ~
ASPM_í
);

6123 
	`πl_ïhy_öô
(
ç
, 
e_öfo_8411_2
, 
	`ARRAY_SIZE
(e_info_8411_2));

6124 
	}
}

6126 
	$πl_hw_°¨t_8168h_1
(
πl8169_¥iv©e
 *
ç
)

6128 
rg_ßw_˙t
;

6129 
u32
 
d©a
;

6130 c⁄° 
ïhy_öfo
 
e_öfo_8168h_1
[] = {

6140 
	`RTL_W8
(
ç
, 
C⁄fig2
, 
	`RTL_R8
—p, C⁄fig2Ë& ~
ClkReqEn
);

6141 
	`RTL_W8
(
ç
, 
C⁄fig5
, 
	`RTL_R8
—p, C⁄fig5Ë& ~
ASPM_í
);

6142 
	`πl_ïhy_öô
(
ç
, 
e_öfo_8168h_1
, 
	`ARRAY_SIZE
(e_info_8168h_1));

6144 
	`RTL_W32
(
ç
, 
TxC⁄fig
, 
	`RTL_R32
—p, TxC⁄figË| 
TXCFG_AUTO_FIFO
);

6146 
	`πl_îi_wrôe
(
ç
, 0xc8, 
ERIAR_MASK_0101
, 0x00080002, 
ERIAR_EXGMAC
);

6147 
	`πl_îi_wrôe
(
ç
, 0xcc, 
ERIAR_MASK_0001
, 0x38, 
ERIAR_EXGMAC
);

6148 
	`πl_îi_wrôe
(
ç
, 0xd0, 
ERIAR_MASK_0001
, 0x48, 
ERIAR_EXGMAC
);

6149 
	`πl_îi_wrôe
(
ç
, 0xe8, 
ERIAR_MASK_1111
, 0x00100006, 
ERIAR_EXGMAC
);

6151 
	`πl_csi_ac˚ss_íabÀ_1
(
ç
);

6153 
	`πl_tx_≥rf‹m™˚_twók
(
ç
, 0x5 << 
MAX_READ_REQUEST_SHIFT
);

6155 
	`πl_w0w1_îi
(
ç
, 0xdc, 
ERIAR_MASK_0001
, 0x00, 0x01, 
ERIAR_EXGMAC
);

6156 
	`πl_w0w1_îi
(
ç
, 0xdc, 
ERIAR_MASK_0001
, 0x01, 0x00, 
ERIAR_EXGMAC
);

6158 
	`πl_w0w1_îi
(
ç
, 0xdc, 
ERIAR_MASK_1111
, 0x0010, 0x00, 
ERIAR_EXGMAC
);

6160 
	`πl_w0w1_îi
(
ç
, 0xd4, 
ERIAR_MASK_1111
, 0x1f00, 0x00, 
ERIAR_EXGMAC
);

6162 
	`πl_îi_wrôe
(
ç
, 0x5f0, 
ERIAR_MASK_0011
, 0x4f87, 
ERIAR_EXGMAC
);

6164 
	`RTL_W32
(
ç
, 
MISC
, 
	`RTL_R32
—p, MISCË& ~
RXDV_GATED_EN
);

6165 
	`RTL_W8
(
ç
, 
MaxTxPackëSize
, 
E¨lySize
);

6167 
	`πl_îi_wrôe
(
ç
, 0xc0, 
ERIAR_MASK_0011
, 0x0000, 
ERIAR_EXGMAC
);

6168 
	`πl_îi_wrôe
(
ç
, 0xb8, 
ERIAR_MASK_0011
, 0x0000, 
ERIAR_EXGMAC
);

6171 
	`RTL_W8
(
ç
, 
EEE_LED
, 
	`RTL_R8
(tp, EEE_LED) & ~0x07);

6173 
	`RTL_W8
(
ç
, 
DLLPR
, 
	`RTL_R8
—p, DLLPRË& ~
PFM_EN
);

6174 
	`RTL_W8
(
ç
, 
MISC_1
, 
	`RTL_R8
—p, MISC_1Ë& ~
PFM_D3COLD_EN
);

6176 
	`RTL_W8
(
ç
, 
DLLPR
, 
	`RTL_R8
—p, DLLPRË& ~
TX_10M_PS_EN
);

6178 
	`πl_w0w1_îi
(
ç
, 0x1b0, 
ERIAR_MASK_0011
, 0x0000, 0x1000, 
ERIAR_EXGMAC
);

6180 
	`πl_pcõ_°©e_l2l3_íabÀ
(
ç
, 
Ál£
);

6182 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0c42);

6183 
rg_ßw_˙t
 = (
	`πl_ªadphy
(
ç
, 0x13) & 0x3fff);

6184 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

6185 i‡(
rg_ßw_˙t
 > 0) {

6186 
u16
 
sw_˙t_1ms_öi
;

6188 
sw_˙t_1ms_öi
 = 16000000/
rg_ßw_˙t
;

6189 
sw_˙t_1ms_öi
 &= 0x0fff;

6190 
d©a
 = 
	`r8168_mac_o˝_ªad
(
ç
, 0xd412);

6191 
d©a
 &= ~0x0fff;

6192 
d©a
 |
sw_˙t_1ms_öi
;

6193 
	`r8168_mac_o˝_wrôe
(
ç
, 0xd412, 
d©a
);

6196 
d©a
 = 
	`r8168_mac_o˝_ªad
(
ç
, 0xe056);

6197 
d©a
 &= ~0xf0;

6198 
d©a
 |= 0x70;

6199 
	`r8168_mac_o˝_wrôe
(
ç
, 0xe056, 
d©a
);

6201 
d©a
 = 
	`r8168_mac_o˝_ªad
(
ç
, 0xe052);

6202 
d©a
 &= ~0x6000;

6203 
d©a
 |= 0x8008;

6204 
	`r8168_mac_o˝_wrôe
(
ç
, 0xe052, 
d©a
);

6206 
d©a
 = 
	`r8168_mac_o˝_ªad
(
ç
, 0xe0d6);

6207 
d©a
 &= ~0x01ff;

6208 
d©a
 |= 0x017f;

6209 
	`r8168_mac_o˝_wrôe
(
ç
, 0xe0d6, 
d©a
);

6211 
d©a
 = 
	`r8168_mac_o˝_ªad
(
ç
, 0xd420);

6212 
d©a
 &= ~0x0fff;

6213 
d©a
 |= 0x047f;

6214 
	`r8168_mac_o˝_wrôe
(
ç
, 0xd420, 
d©a
);

6216 
	`r8168_mac_o˝_wrôe
(
ç
, 0xe63e, 0x0001);

6217 
	`r8168_mac_o˝_wrôe
(
ç
, 0xe63e, 0x0000);

6218 
	`r8168_mac_o˝_wrôe
(
ç
, 0xc094, 0x0000);

6219 
	`r8168_mac_o˝_wrôe
(
ç
, 0xc09e, 0x0000);

6220 
	}
}

6222 
	$πl_hw_°¨t_8168ï
(
πl8169_¥iv©e
 *
ç
)

6224 
	`πl8168ï_°›_cmac
(
ç
);

6226 
	`RTL_W32
(
ç
, 
TxC⁄fig
, 
	`RTL_R32
—p, TxC⁄figË| 
TXCFG_AUTO_FIFO
);

6228 
	`πl_îi_wrôe
(
ç
, 0xc8, 
ERIAR_MASK_0101
, 0x00080002, 
ERIAR_EXGMAC
);

6229 
	`πl_îi_wrôe
(
ç
, 0xcc, 
ERIAR_MASK_0001
, 0x2f, 
ERIAR_EXGMAC
);

6230 
	`πl_îi_wrôe
(
ç
, 0xd0, 
ERIAR_MASK_0001
, 0x5f, 
ERIAR_EXGMAC
);

6231 
	`πl_îi_wrôe
(
ç
, 0xe8, 
ERIAR_MASK_1111
, 0x00100006, 
ERIAR_EXGMAC
);

6233 
	`πl_csi_ac˚ss_íabÀ_1
(
ç
);

6235 
	`πl_tx_≥rf‹m™˚_twók
(
ç
, 0x5 << 
MAX_READ_REQUEST_SHIFT
);

6237 
	`πl_w0w1_îi
(
ç
, 0xdc, 
ERIAR_MASK_0001
, 0x00, 0x01, 
ERIAR_EXGMAC
);

6238 
	`πl_w0w1_îi
(
ç
, 0xdc, 
ERIAR_MASK_0001
, 0x01, 0x00, 
ERIAR_EXGMAC
);

6240 
	`πl_w0w1_îi
(
ç
, 0xd4, 
ERIAR_MASK_1111
, 0x1f80, 0x00, 
ERIAR_EXGMAC
);

6242 
	`πl_îi_wrôe
(
ç
, 0x5f0, 
ERIAR_MASK_0011
, 0x4f87, 
ERIAR_EXGMAC
);

6244 
	`RTL_W32
(
ç
, 
MISC
, 
	`RTL_R32
—p, MISCË& ~
RXDV_GATED_EN
);

6245 
	`RTL_W8
(
ç
, 
MaxTxPackëSize
, 
E¨lySize
);

6247 
	`πl_îi_wrôe
(
ç
, 0xc0, 
ERIAR_MASK_0011
, 0x0000, 
ERIAR_EXGMAC
);

6248 
	`πl_îi_wrôe
(
ç
, 0xb8, 
ERIAR_MASK_0011
, 0x0000, 
ERIAR_EXGMAC
);

6251 
	`RTL_W8
(
ç
, 
EEE_LED
, 
	`RTL_R8
(tp, EEE_LED) & ~0x07);

6253 
	`πl_w0w1_îi
(
ç
, 0x2fc, 
ERIAR_MASK_0001
, 0x01, 0x06, 
ERIAR_EXGMAC
);

6255 
	`RTL_W8
(
ç
, 
DLLPR
, 
	`RTL_R8
—p, DLLPRË& ~
TX_10M_PS_EN
);

6257 
	`πl_pcõ_°©e_l2l3_íabÀ
(
ç
, 
Ál£
);

6258 
	}
}

6260 
	$πl_hw_°¨t_8168ï_1
(
πl8169_¥iv©e
 *
ç
)

6262 c⁄° 
ïhy_öfo
 
e_öfo_8168ï_1
[] = {

6271 
	`RTL_W8
(
ç
, 
C⁄fig2
, 
	`RTL_R8
—p, C⁄fig2Ë& ~
ClkReqEn
);

6272 
	`RTL_W8
(
ç
, 
C⁄fig5
, 
	`RTL_R8
—p, C⁄fig5Ë& ~
ASPM_í
);

6273 
	`πl_ïhy_öô
(
ç
, 
e_öfo_8168ï_1
, 
	`ARRAY_SIZE
(e_info_8168ep_1));

6275 
	`πl_hw_°¨t_8168ï
(
ç
);

6276 
	}
}

6278 
	$πl_hw_°¨t_8168ï_2
(
πl8169_¥iv©e
 *
ç
)

6280 c⁄° 
ïhy_öfo
 
e_öfo_8168ï_2
[] = {

6287 
	`RTL_W8
(
ç
, 
C⁄fig2
, 
	`RTL_R8
—p, C⁄fig2Ë& ~
ClkReqEn
);

6288 
	`RTL_W8
(
ç
, 
C⁄fig5
, 
	`RTL_R8
—p, C⁄fig5Ë& ~
ASPM_í
);

6289 
	`πl_ïhy_öô
(
ç
, 
e_öfo_8168ï_2
, 
	`ARRAY_SIZE
(e_info_8168ep_2));

6291 
	`πl_hw_°¨t_8168ï
(
ç
);

6293 
	`RTL_W8
(
ç
, 
DLLPR
, 
	`RTL_R8
—p, DLLPRË& ~
PFM_EN
);

6294 
	`RTL_W8
(
ç
, 
MISC_1
, 
	`RTL_R8
—p, MISC_1Ë& ~
PFM_D3COLD_EN
);

6295 
	}
}

6297 
	$πl_hw_°¨t_8168ï_3
(
πl8169_¥iv©e
 *
ç
)

6299 
u32
 
d©a
;

6300 c⁄° 
ïhy_öfo
 
e_öfo_8168ï_3
[] = {

6308 
	`RTL_W8
(
ç
, 
C⁄fig2
, 
	`RTL_R8
—p, C⁄fig2Ë& ~
ClkReqEn
);

6309 
	`RTL_W8
(
ç
, 
C⁄fig5
, 
	`RTL_R8
—p, C⁄fig5Ë& ~
ASPM_í
);

6310 
	`πl_ïhy_öô
(
ç
, 
e_öfo_8168ï_3
, 
	`ARRAY_SIZE
(e_info_8168ep_3));

6312 
	`πl_hw_°¨t_8168ï
(
ç
);

6314 
	`RTL_W8
(
ç
, 
DLLPR
, 
	`RTL_R8
—p, DLLPRË& ~
PFM_EN
);

6315 
	`RTL_W8
(
ç
, 
MISC_1
, 
	`RTL_R8
—p, MISC_1Ë& ~
PFM_D3COLD_EN
);

6317 
d©a
 = 
	`r8168_mac_o˝_ªad
(
ç
, 0xd3e2);

6318 
d©a
 &= 0xf000;

6319 
d©a
 |= 0x0271;

6320 
	`r8168_mac_o˝_wrôe
(
ç
, 0xd3e2, 
d©a
);

6322 
d©a
 = 
	`r8168_mac_o˝_ªad
(
ç
, 0xd3e4);

6323 
d©a
 &= 0xff00;

6324 
	`r8168_mac_o˝_wrôe
(
ç
, 0xd3e4, 
d©a
);

6326 
d©a
 = 
	`r8168_mac_o˝_ªad
(
ç
, 0xe860);

6327 
d©a
 |= 0x0080;

6328 
	`r8168_mac_o˝_wrôe
(
ç
, 0xe860, 
d©a
);

6329 
	}
}

6331 
	$πl_hw_°¨t_8168
(
√t_devi˚
 *
dev
)

6333 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

6335 
	`RTL_W8
(
ç
, 
Cfg9346
, 
Cfg9346_U∆ock
);

6337 
	`RTL_W8
(
ç
, 
MaxTxPackëSize
, 
TxPackëMax
);

6339 
	`πl_£t_rx_max_size
(
ç
, 
rx_buf_sz
);

6341 
ç
->
˝_cmd
 |
	`RTL_R16
—p, 
CPlusCmd
Ë| 
PktC¡rDißbÀ
 | 
INTT_1
;

6343 
	`RTL_W16
(
ç
, 
CPlusCmd
,Åp->
˝_cmd
);

6345 
	`RTL_W16
(
ç
, 
I¡rMôig©e
, 0x5151);

6348 i‡(
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_11
) {

6349 
ç
->
evít_¶ow
 |
RxFIFOOvî
 | 
PCSTimeout
;

6350 
ç
->
evít_¶ow
 &~
RxOvîÊow
;

6353 
	`πl_£t_rx_tx_desc_ªgi°îs
(
ç
);

6355 
	`πl_£t_rx_tx_c⁄fig_ªgi°îs
(
ç
);

6357 
	`RTL_R8
(
ç
, 
I¡rMask
);

6359 
ç
->
mac_vîsi⁄
) {

6360 
RTL_GIGA_MAC_VER_11
:

6361 
	`πl_hw_°¨t_8168bb
(
ç
);

6364 
RTL_GIGA_MAC_VER_12
:

6365 
RTL_GIGA_MAC_VER_17
:

6366 
	`πl_hw_°¨t_8168bef
(
ç
);

6369 
RTL_GIGA_MAC_VER_18
:

6370 
	`πl_hw_°¨t_8168˝_1
(
ç
);

6373 
RTL_GIGA_MAC_VER_19
:

6374 
	`πl_hw_°¨t_8168c_1
(
ç
);

6377 
RTL_GIGA_MAC_VER_20
:

6378 
	`πl_hw_°¨t_8168c_2
(
ç
);

6381 
RTL_GIGA_MAC_VER_21
:

6382 
	`πl_hw_°¨t_8168c_3
(
ç
);

6385 
RTL_GIGA_MAC_VER_22
:

6386 
	`πl_hw_°¨t_8168c_4
(
ç
);

6389 
RTL_GIGA_MAC_VER_23
:

6390 
	`πl_hw_°¨t_8168˝_2
(
ç
);

6393 
RTL_GIGA_MAC_VER_24
:

6394 
	`πl_hw_°¨t_8168˝_3
(
ç
);

6397 
RTL_GIGA_MAC_VER_25
:

6398 
RTL_GIGA_MAC_VER_26
:

6399 
RTL_GIGA_MAC_VER_27
:

6400 
	`πl_hw_°¨t_8168d
(
ç
);

6403 
RTL_GIGA_MAC_VER_28
:

6404 
	`πl_hw_°¨t_8168d_4
(
ç
);

6407 
RTL_GIGA_MAC_VER_31
:

6408 
	`πl_hw_°¨t_8168dp
(
ç
);

6411 
RTL_GIGA_MAC_VER_32
:

6412 
RTL_GIGA_MAC_VER_33
:

6413 
	`πl_hw_°¨t_8168e_1
(
ç
);

6415 
RTL_GIGA_MAC_VER_34
:

6416 
	`πl_hw_°¨t_8168e_2
(
ç
);

6419 
RTL_GIGA_MAC_VER_35
:

6420 
RTL_GIGA_MAC_VER_36
:

6421 
	`πl_hw_°¨t_8168f_1
(
ç
);

6424 
RTL_GIGA_MAC_VER_38
:

6425 
	`πl_hw_°¨t_8411
(
ç
);

6428 
RTL_GIGA_MAC_VER_40
:

6429 
RTL_GIGA_MAC_VER_41
:

6430 
	`πl_hw_°¨t_8168g_1
(
ç
);

6432 
RTL_GIGA_MAC_VER_42
:

6433 
	`πl_hw_°¨t_8168g_2
(
ç
);

6436 
RTL_GIGA_MAC_VER_44
:

6437 
	`πl_hw_°¨t_8411_2
(
ç
);

6440 
RTL_GIGA_MAC_VER_45
:

6441 
RTL_GIGA_MAC_VER_46
:

6442 
	`πl_hw_°¨t_8168h_1
(
ç
);

6445 
RTL_GIGA_MAC_VER_49
:

6446 
	`πl_hw_°¨t_8168ï_1
(
ç
);

6449 
RTL_GIGA_MAC_VER_50
:

6450 
	`πl_hw_°¨t_8168ï_2
(
ç
);

6453 
RTL_GIGA_MAC_VER_51
:

6454 
	`πl_hw_°¨t_8168ï_3
(
ç
);

6458 
	`¥ötk
(
KERN_ERR
 
PFX
 "%s: unknown chipset (mac_version = %d).\n",

6459 
dev
->
«me
, 
ç
->
mac_vîsi⁄
);

6463 
	`RTL_W8
(
ç
, 
Cfg9346
, 
Cfg9346_Lock
);

6465 
	`RTL_W8
(
ç
, 
ChùCmd
, 
CmdTxEnb
 | 
CmdRxEnb
);

6467 
	`πl_£t_rx_mode
(
dev
);

6469 
	`RTL_W16
(
ç
, 
Mu…iI¡r
, 
	`RTL_R16
(tp, MultiIntr) & 0xf000);

6470 
	}
}

6472 
	#R810X_CPCMD_QUIRK_MASK
 (\

6473 
E«bÀBi°
 | \

6474 
Mac_dbgo_€
 | \

6475 
F‹˚_hÆf_dup
 | \

6476 
F‹˚_rxÊow_í
 | \

6477 
F‹˚_txÊow_í
 | \

6478 
Cx∂_dbg_£l
 | \

6479 
ASF
 | \

6480 
PktC¡rDißbÀ
 | \

6481 
Mac_dbgo_£l
)

	)

6483 
	$πl_hw_°¨t_8102e_1
(
πl8169_¥iv©e
 *
ç
)

6485 c⁄° 
ïhy_öfo
 
e_öfo_8102e_1
[] = {

6495 
u8
 
cfg1
;

6497 
	`πl_csi_ac˚ss_íabÀ_2
(
ç
);

6499 
	`RTL_W8
(
ç
, 
DBG_REG
, 
FIX_NAK_1
);

6501 
	`πl_tx_≥rf‹m™˚_twók
(
ç
, 0x5 << 
MAX_READ_REQUEST_SHIFT
);

6503 
	`RTL_W8
(
ç
, 
C⁄fig1
,

6504 
LEDS1
 | 
LEDS0
 | 
S≥ed_down
 | 
MEMMAP
 | 
IOMAP
 | 
VPD
 | 
PME«bÀ
);

6505 
	`RTL_W8
(
ç
, 
C⁄fig3
, 
	`RTL_R8
—p, C⁄fig3Ë& ~
Bóc⁄_í
);

6507 
cfg1
 = 
	`RTL_R8
(
ç
, 
C⁄fig1
);

6508 i‡((
cfg1
 & 
LEDS0
Ë&& (cfg1 & 
LEDS1
))

6509 
	`RTL_W8
(
ç
, 
C⁄fig1
, 
cfg1
 & ~
LEDS0
);

6511 
	`πl_ïhy_öô
(
ç
, 
e_öfo_8102e_1
, 
	`ARRAY_SIZE
(e_info_8102e_1));

6512 
	}
}

6514 
	$πl_hw_°¨t_8102e_2
(
πl8169_¥iv©e
 *
ç
)

6516 
	`πl_csi_ac˚ss_íabÀ_2
(
ç
);

6518 
	`πl_tx_≥rf‹m™˚_twók
(
ç
, 0x5 << 
MAX_READ_REQUEST_SHIFT
);

6520 
	`RTL_W8
(
ç
, 
C⁄fig1
, 
MEMMAP
 | 
IOMAP
 | 
VPD
 | 
PME«bÀ
);

6521 
	`RTL_W8
(
ç
, 
C⁄fig3
, 
	`RTL_R8
—p, C⁄fig3Ë& ~
Bóc⁄_í
);

6522 
	}
}

6524 
	$πl_hw_°¨t_8102e_3
(
πl8169_¥iv©e
 *
ç
)

6526 
	`πl_hw_°¨t_8102e_2
(
ç
);

6528 
	`πl_ïhy_wrôe
(
ç
, 0x03, 0xc2f9);

6529 
	}
}

6531 
	$πl_hw_°¨t_8105e_1
(
πl8169_¥iv©e
 *
ç
)

6533 c⁄° 
ïhy_öfo
 
e_öfo_8105e_1
[] = {

6545 
	`RTL_W32
(
ç
, 
FuncEvít
, 
	`RTL_R32
(tp, FuncEvent) | 0x002800);

6548 
	`RTL_W32
(
ç
, 
FuncEvít
, 
	`RTL_R32
(tp, FuncEvent) & ~0x010000);

6550 
	`RTL_W8
(
ç
, 
MCU
, 
	`RTL_R8
—p, MCUË| 
EN_NDP
 | 
EN_OOB_RESET
);

6551 
	`RTL_W8
(
ç
, 
DLLPR
, 
	`RTL_R8
—p, DLLPRË| 
PFM_EN
);

6553 
	`πl_ïhy_öô
(
ç
, 
e_öfo_8105e_1
, 
	`ARRAY_SIZE
(e_info_8105e_1));

6555 
	`πl_pcõ_°©e_l2l3_íabÀ
(
ç
, 
Ál£
);

6556 
	}
}

6558 
	$πl_hw_°¨t_8105e_2
(
πl8169_¥iv©e
 *
ç
)

6560 
	`πl_hw_°¨t_8105e_1
(
ç
);

6561 
	`πl_ïhy_wrôe
(
ç
, 0x1e, 
	`πl_ïhy_ªad
(tp, 0x1e) | 0x8000);

6562 
	}
}

6564 
	$πl_hw_°¨t_8402
(
πl8169_¥iv©e
 *
ç
)

6566 c⁄° 
ïhy_öfo
 
e_öfo_8402
[] = {

6571 
	`πl_csi_ac˚ss_íabÀ_2
(
ç
);

6574 
	`RTL_W32
(
ç
, 
FuncEvít
, 
	`RTL_R32
(tp, FuncEvent) | 0x002800);

6576 
	`RTL_W32
(
ç
, 
TxC⁄fig
, 
	`RTL_R32
—p, TxC⁄figË| 
TXCFG_AUTO_FIFO
);

6577 
	`RTL_W8
(
ç
, 
MCU
, 
	`RTL_R8
—p, MCUË& ~
NOW_IS_OOB
);

6579 
	`πl_ïhy_öô
(
ç
, 
e_öfo_8402
, 
	`ARRAY_SIZE
(e_info_8402));

6581 
	`πl_tx_≥rf‹m™˚_twók
(
ç
, 0x5 << 
MAX_READ_REQUEST_SHIFT
);

6583 
	`πl_îi_wrôe
(
ç
, 0xc8, 
ERIAR_MASK_1111
, 0x00000002, 
ERIAR_EXGMAC
);

6584 
	`πl_îi_wrôe
(
ç
, 0xe8, 
ERIAR_MASK_1111
, 0x00000006, 
ERIAR_EXGMAC
);

6585 
	`πl_w0w1_îi
(
ç
, 0xdc, 
ERIAR_MASK_0001
, 0x00, 0x01, 
ERIAR_EXGMAC
);

6586 
	`πl_w0w1_îi
(
ç
, 0xdc, 
ERIAR_MASK_0001
, 0x01, 0x00, 
ERIAR_EXGMAC
);

6587 
	`πl_îi_wrôe
(
ç
, 0xc0, 
ERIAR_MASK_0011
, 0x0000, 
ERIAR_EXGMAC
);

6588 
	`πl_îi_wrôe
(
ç
, 0xb8, 
ERIAR_MASK_0011
, 0x0000, 
ERIAR_EXGMAC
);

6589 
	`πl_w0w1_îi
(
ç
, 0x0d4, 
ERIAR_MASK_0011
, 0x0e00, 0xff00, 
ERIAR_EXGMAC
);

6591 
	`πl_pcõ_°©e_l2l3_íabÀ
(
ç
, 
Ál£
);

6592 
	}
}

6594 
	$πl_hw_°¨t_8106
(
πl8169_¥iv©e
 *
ç
)

6597 
	`RTL_W32
(
ç
, 
FuncEvít
, 
	`RTL_R32
(tp, FuncEvent) | 0x002800);

6599 
	`RTL_W32
(
ç
, 
MISC
, (
	`RTL_R32
—p, MISCË| 
DISABLE_LAN_EN
Ë& ~
EARLY_TALLY_EN
);

6600 
	`RTL_W8
(
ç
, 
MCU
, 
	`RTL_R8
—p, MCUË| 
EN_NDP
 | 
EN_OOB_RESET
);

6601 
	`RTL_W8
(
ç
, 
DLLPR
, 
	`RTL_R8
—p, DLLPRË& ~
PFM_EN
);

6603 
	`πl_pcõ_°©e_l2l3_íabÀ
(
ç
, 
Ál£
);

6604 
	}
}

6606 
	$πl_hw_°¨t_8101
(
√t_devi˚
 *
dev
)

6608 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

6609 
pci_dev
 *
pdev
 = 
ç
->pci_dev;

6611 i‡(
ç
->
mac_vîsi⁄
 >
RTL_GIGA_MAC_VER_30
)

6612 
ç
->
evít_¶ow
 &~
RxFIFOOvî
;

6614 i‡(
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_13
 ||

6615 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_16
)

6616 
	`pcõ_ˇ∑bûôy_£t_w‹d
(
pdev
, 
PCI_EXP_DEVCTL
,

6617 
PCI_EXP_DEVCTL_NOSNOOP_EN
);

6619 
	`RTL_W8
(
ç
, 
Cfg9346
, 
Cfg9346_U∆ock
);

6621 
	`RTL_W8
(
ç
, 
MaxTxPackëSize
, 
TxPackëMax
);

6623 
	`πl_£t_rx_max_size
(
ç
, 
rx_buf_sz
);

6625 
ç
->
˝_cmd
 &~
R810X_CPCMD_QUIRK_MASK
;

6626 
	`RTL_W16
(
ç
, 
CPlusCmd
,Åp->
˝_cmd
);

6628 
	`πl_£t_rx_tx_desc_ªgi°îs
(
ç
);

6630 
	`πl_£t_rx_tx_c⁄fig_ªgi°îs
(
ç
);

6632 
ç
->
mac_vîsi⁄
) {

6633 
RTL_GIGA_MAC_VER_07
:

6634 
	`πl_hw_°¨t_8102e_1
(
ç
);

6637 
RTL_GIGA_MAC_VER_08
:

6638 
	`πl_hw_°¨t_8102e_3
(
ç
);

6641 
RTL_GIGA_MAC_VER_09
:

6642 
	`πl_hw_°¨t_8102e_2
(
ç
);

6645 
RTL_GIGA_MAC_VER_29
:

6646 
	`πl_hw_°¨t_8105e_1
(
ç
);

6648 
RTL_GIGA_MAC_VER_30
:

6649 
	`πl_hw_°¨t_8105e_2
(
ç
);

6652 
RTL_GIGA_MAC_VER_37
:

6653 
	`πl_hw_°¨t_8402
(
ç
);

6656 
RTL_GIGA_MAC_VER_39
:

6657 
	`πl_hw_°¨t_8106
(
ç
);

6659 
RTL_GIGA_MAC_VER_43
:

6660 
	`πl_hw_°¨t_8168g_2
(
ç
);

6662 
RTL_GIGA_MAC_VER_47
:

6663 
RTL_GIGA_MAC_VER_48
:

6664 
	`πl_hw_°¨t_8168h_1
(
ç
);

6668 
	`RTL_W8
(
ç
, 
Cfg9346
, 
Cfg9346_Lock
);

6670 
	`RTL_W16
(
ç
, 
I¡rMôig©e
, 0x0000);

6672 
	`RTL_W8
(
ç
, 
ChùCmd
, 
CmdTxEnb
 | 
CmdRxEnb
);

6674 
	`πl_£t_rx_mode
(
dev
);

6676 
	`RTL_R8
(
ç
, 
I¡rMask
);

6678 
	`RTL_W16
(
ç
, 
Mu…iI¡r
, 
	`RTL_R16
(tp, MultiIntr) & 0xf000);

6679 
	}
}

6681 
	$πl8169_ch™ge_mtu
(
√t_devi˚
 *
dev
, 
√w_mtu
)

6683 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

6685 i‡(
√w_mtu
 > 
ETH_DATA_LEN
)

6686 
	`πl_hw_jumbo_íabÀ
(
ç
);

6688 
	`πl_hw_jumbo_dißbÀ
(
ç
);

6690 
dev
->
mtu
 = 
√w_mtu
;

6691 
	`√tdev_upd©e_„©uªs
(
dev
);

6694 
	}
}

6696 
ölöe
 
	$πl8169_make_unußbÀ_by_asic
(
RxDesc
 *
desc
)

6698 
desc
->
addr
 = 
	`˝u_to_À64
(0x0badbadbadbadbadull);

6699 
desc
->
›ts1
 &~
	`˝u_to_À32
(
DescOwn
 | 
RsvdMask
);

6700 
	}
}

6702 
	$πl8169_‰ì_rx_d©abuff
(
πl8169_¥iv©e
 *
ç
,

6703 **
d©a_buff
, 
RxDesc
 *
desc
)

6705 
	`dma_unm≠_sögÀ
(
	`ç_to_dev
(
ç
), 
	`À64_to_˝u
(
desc
->
addr
), 
rx_buf_sz
,

6706 
DMA_FROM_DEVICE
);

6708 
	`k‰ì
(*
d©a_buff
);

6709 *
d©a_buff
 = 
NULL
;

6710 
	`πl8169_make_unußbÀ_by_asic
(
desc
);

6711 
	}
}

6713 
ölöe
 
	$πl8169_m¨k_to_asic
(
RxDesc
 *
desc
, 
u32
 
rx_buf_sz
)

6715 
u32
 
e‹
 = 
	`À32_to_˝u
(
desc
->
›ts1
Ë& 
RögEnd
;

6718 
	`dma_wmb
();

6720 
desc
->
›ts1
 = 
	`˝u_to_À32
(
DescOwn
 | 
e‹
 | 
rx_buf_sz
);

6721 
	}
}

6723 
ölöe
 
	$πl8169_m≠_to_asic
(
RxDesc
 *
desc
, 
dma_addr_t
 
m≠pög
,

6724 
u32
 
rx_buf_sz
)

6726 
desc
->
addr
 = 
	`˝u_to_À64
(
m≠pög
);

6727 
	`πl8169_m¨k_to_asic
(
desc
, 
rx_buf_sz
);

6728 
	}
}

6730 
ölöe
 *
	$πl8169_Æign
(*
d©a
)

6732  (*)
	`ALIGN
(()
d©a
, 16);

6733 
	}
}

6735 
sk_buff
 *
	$πl8169_Æloc_rx_d©a
(
πl8169_¥iv©e
 *
ç
,

6736 
RxDesc
 *
desc
)

6738 *
d©a
;

6739 
dma_addr_t
 
m≠pög
;

6740 
devi˚
 *
d
 = 
	`ç_to_dev
(
ç
);

6741 
√t_devi˚
 *
dev
 = 
ç
->dev;

6742 
node
 = 
dev
->dev.
∑ª¡
 ? 
	`dev_to_node
(dev->dev.parent) : -1;

6744 
d©a
 = 
	`kmÆloc_node
(
rx_buf_sz
, 
GFP_KERNEL
, 
node
);

6745 i‡(!
d©a
)

6746  
NULL
;

6748 i‡(
	`πl8169_Æign
(
d©a
) != data) {

6749 
	`k‰ì
(
d©a
);

6750 
d©a
 = 
	`kmÆloc_node
(
rx_buf_sz
 + 15, 
GFP_KERNEL
, 
node
);

6751 i‡(!
d©a
)

6752  
NULL
;

6755 
m≠pög
 = 
	`dma_m≠_sögÀ
(
d
, 
	`πl8169_Æign
(
d©a
), 
rx_buf_sz
,

6756 
DMA_FROM_DEVICE
);

6757 i‡(
	`u∆ikñy
(
	`dma_m≠pög_îr‹
(
d
, 
m≠pög
))) {

6758 i‡(
	`√t_øãlimô
())

6759 
	`√tif_îr
(
ç
, 
drv
,Åp->
dev
, "FailedÅo map RX DMA!\n");

6760 
îr_out
;

6763 
	`πl8169_m≠_to_asic
(
desc
, 
m≠pög
, 
rx_buf_sz
);

6764  
d©a
;

6766 
îr_out
:

6767 
	`k‰ì
(
d©a
);

6768  
NULL
;

6769 
	}
}

6771 
	$πl8169_rx_˛ór
(
πl8169_¥iv©e
 *
ç
)

6773 
i
;

6775 
i
 = 0; i < 
NUM_RX_DESC
; i++) {

6776 i‡(
ç
->
Rx_d©abuff
[
i
]) {

6777 
	`πl8169_‰ì_rx_d©abuff
(
ç
,Åp->
Rx_d©abuff
 + 
i
,

6778 
ç
->
RxDescAºay
 + 
i
);

6781 
	}
}

6783 
ölöe
 
	$πl8169_m¨k_as_œ°_des¸ùt‹
(
RxDesc
 *
desc
)

6785 
desc
->
›ts1
 |
	`˝u_to_À32
(
RögEnd
);

6786 
	}
}

6788 
	$πl8169_rx_fûl
(
πl8169_¥iv©e
 *
ç
)

6790 
i
;

6792 
i
 = 0; i < 
NUM_RX_DESC
; i++) {

6793 *
d©a
;

6795 i‡(
ç
->
Rx_d©abuff
[
i
])

6798 
d©a
 = 
	`πl8169_Æloc_rx_d©a
(
ç
,Åp->
RxDescAºay
 + 
i
);

6799 i‡(!
d©a
) {

6800 
	`πl8169_make_unußbÀ_by_asic
(
ç
->
RxDescAºay
 + 
i
);

6801 
îr_out
;

6803 
ç
->
Rx_d©abuff
[
i
] = 
d©a
;

6806 
	`πl8169_m¨k_as_œ°_des¸ùt‹
(
ç
->
RxDescAºay
 + 
NUM_RX_DESC
 - 1);

6809 
îr_out
:

6810 
	`πl8169_rx_˛ór
(
ç
);

6811  -
ENOMEM
;

6812 
	}
}

6814 
	$πl8169_öô_rög
(
√t_devi˚
 *
dev
)

6816 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

6818 
	`πl8169_öô_rög_ödexes
(
ç
);

6820 
	`mem£t
(
ç
->
tx_skb
, 0x0, 
NUM_TX_DESC
 * (
rög_öfo
));

6821 
	`mem£t
(
ç
->
Rx_d©abuff
, 0x0, 
NUM_RX_DESC
 * (*));

6823  
	`πl8169_rx_fûl
(
ç
);

6824 
	}
}

6826 
	$πl8169_unm≠_tx_skb
(
devi˚
 *
d
, 
rög_öfo
 *
tx_skb
,

6827 
TxDesc
 *
desc
)

6829 
Àn
 = 
tx_skb
->len;

6831 
	`dma_unm≠_sögÀ
(
d
, 
	`À64_to_˝u
(
desc
->
addr
), 
Àn
, 
DMA_TO_DEVICE
);

6833 
desc
->
›ts1
 = 0x00;

6834 
desc
->
›ts2
 = 0x00;

6835 
desc
->
addr
 = 0x00;

6836 
tx_skb
->
Àn
 = 0;

6837 
	}
}

6839 
	$πl8169_tx_˛ór_ønge
(
πl8169_¥iv©e
 *
ç
, 
u32
 
°¨t
,

6840 
n
)

6842 
i
;

6844 
i
 = 0; i < 
n
; i++) {

6845 
íåy
 = (
°¨t
 + 
i
Ë% 
NUM_TX_DESC
;

6846 
rög_öfo
 *
tx_skb
 = 
ç
->tx_skb + 
íåy
;

6847 
Àn
 = 
tx_skb
->len;

6849 i‡(
Àn
) {

6850 
sk_buff
 *
skb
 = 
tx_skb
->skb;

6852 
	`πl8169_unm≠_tx_skb
(
	`ç_to_dev
(
ç
), 
tx_skb
,

6853 
ç
->
TxDescAºay
 + 
íåy
);

6854 i‡(
skb
) {

6855 
	`dev_c⁄sume_skb_™y
(
skb
);

6856 
tx_skb
->
skb
 = 
NULL
;

6860 
	}
}

6862 
	$πl8169_tx_˛ór
(
πl8169_¥iv©e
 *
ç
)

6864 
	`πl8169_tx_˛ór_ønge
(
ç
,Åp->
dúty_tx
, 
NUM_TX_DESC
);

6865 
ç
->
cur_tx
 =Åp->
dúty_tx
 = 0;

6866 
	}
}

6868 
	$πl_ª£t_w‹k
(
πl8169_¥iv©e
 *
ç
)

6870 
√t_devi˚
 *
dev
 = 
ç
->dev;

6871 
i
;

6873 
	`«pi_dißbÀ
(&
ç
->
«pi
);

6874 
	`√tif_°›_queue
(
dev
);

6875 
	`synchr⁄ize_sched
();

6877 
	`πl8169_hw_ª£t
(
ç
);

6879 
i
 = 0; i < 
NUM_RX_DESC
; i++)

6880 
	`πl8169_m¨k_to_asic
(
ç
->
RxDescAºay
 + 
i
, 
rx_buf_sz
);

6882 
	`πl8169_tx_˛ór
(
ç
);

6883 
	`πl8169_öô_rög_ödexes
(
ç
);

6885 
	`«pi_íabÀ
(&
ç
->
«pi
);

6886 
	`πl_hw_°¨t
(
dev
);

6887 
	`√tif_wake_queue
(
dev
);

6888 
	`πl8169_check_lök_°©us
(
dev
, 
ç
);

6889 
	}
}

6891 
	$πl8169_tx_timeout
(
√t_devi˚
 *
dev
)

6893 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

6895 
	`πl_scheduÀ_èsk
(
ç
, 
RTL_FLAG_TASK_RESET_PENDING
);

6896 
	}
}

6898 
	$πl8169_xmô_‰ags
(
πl8169_¥iv©e
 *
ç
, 
sk_buff
 *
skb
,

6899 
u32
 *
›ts
)

6901 
skb_sh¨ed_öfo
 *
öfo
 = 
	`skb_shöfo
(
skb
);

6902 
cur_‰ag
, 
íåy
;

6903 
TxDesc
 *
	`unöôülized_v¨
(
txd
);

6904 
devi˚
 *
d
 = 
	`ç_to_dev
(
ç
);

6906 
íåy
 = 
ç
->
cur_tx
;

6907 
cur_‰ag
 = 0; cur_‰ag < 
öfo
->
ƒ_‰ags
; cur_frag++) {

6908 c⁄° 
skb_‰ag_t
 *
‰ag
 = 
öfo
->
‰ags
 + 
cur_‰ag
;

6909 
dma_addr_t
 
m≠pög
;

6910 
u32
 
°©us
, 
Àn
;

6911 *
addr
;

6913 
íåy
 = (íåy + 1Ë% 
NUM_TX_DESC
;

6915 
txd
 = 
ç
->
TxDescAºay
 + 
íåy
;

6916 
Àn
 = 
	`skb_‰ag_size
(
‰ag
);

6917 
addr
 = 
	`skb_‰ag_addªss
(
‰ag
);

6918 
m≠pög
 = 
	`dma_m≠_sögÀ
(
d
, 
addr
, 
Àn
, 
DMA_TO_DEVICE
);

6919 i‡(
	`u∆ikñy
(
	`dma_m≠pög_îr‹
(
d
, 
m≠pög
))) {

6920 i‡(
	`√t_øãlimô
())

6921 
	`√tif_îr
(
ç
, 
drv
,Åp->
dev
,

6923 
îr_out
;

6927 
°©us
 = 
›ts
[0] | 
Àn
 |

6928 (
RögEnd
 * !((
íåy
 + 1Ë% 
NUM_TX_DESC
));

6930 
txd
->
›ts1
 = 
	`˝u_to_À32
(
°©us
);

6931 
txd
->
›ts2
 = 
	`˝u_to_À32
(
›ts
[1]);

6932 
txd
->
addr
 = 
	`˝u_to_À64
(
m≠pög
);

6934 
ç
->
tx_skb
[
íåy
].
Àn
 =Üen;

6937 i‡(
cur_‰ag
) {

6938 
ç
->
tx_skb
[
íåy
].
skb
 = skb;

6939 
txd
->
›ts1
 |
	`˝u_to_À32
(
La°Føg
);

6942  
cur_‰ag
;

6944 
îr_out
:

6945 
	`πl8169_tx_˛ór_ønge
(
ç
,Åp->
cur_tx
 + 1, 
cur_‰ag
);

6946  -
EIO
;

6947 
	}
}

6949 
boﬁ
 
	$πl_ã°_hw_∑d_bug
(
πl8169_¥iv©e
 *
ç
, 
sk_buff
 *
skb
)

6951  
skb
->
Àn
 < 
ETH_ZLEN
 && 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_34
;

6952 
	}
}

6954 
√tdev_tx_t
 
πl8169_°¨t_xmô
(
sk_buff
 *
skb
,

6955 
√t_devi˚
 *
dev
);

6960 
	$r8169_csum_w‹k¨ound
(
πl8169_¥iv©e
 *
ç
,

6961 
sk_buff
 *
skb
)

6963 i‡(
	`skb_shöfo
(
skb
)->
gso_size
) {

6964 
√tdev_„©uªs_t
 
„©uªs
 = 
ç
->
dev
->features;

6965 
sk_buff
 *
£gs
, *
nskb
;

6967 
„©uªs
 &~(
NETIF_F_SG
 | 
NETIF_F_IPV6_CSUM
 | 
NETIF_F_TSO6
);

6968 
£gs
 = 
	`skb_gso_£gmít
(
skb
, 
„©uªs
);

6969 i‡(
	`IS_ERR
(
£gs
) || !segs)

6970 
dr›
;

6973 
nskb
 = 
£gs
;

6974 
£gs
 = segs->
√xt
;

6975 
nskb
->
√xt
 = 
NULL
;

6976 
	`πl8169_°¨t_xmô
(
nskb
, 
ç
->
dev
);

6977 } 
£gs
);

6979 
	`dev_c⁄sume_skb_™y
(
skb
);

6980 } i‡(
skb
->
ù_summed
 =
CHECKSUM_PARTIAL
) {

6981 i‡(
	`skb_checksum_hñp
(
skb
) < 0)

6982 
dr›
;

6984 
	`πl8169_°¨t_xmô
(
skb
, 
ç
->
dev
);

6986 
√t_devi˚_°©s
 *
°©s
;

6988 
dr›
:

6989 
°©s
 = &
ç
->
dev
->stats;

6990 
°©s
->
tx_dr›≥d
++;

6991 
	`dev_k‰ì_skb_™y
(
skb
);

6993 
	}
}

6999 
	$msdn_gü¡_£nd_check
(
sk_buff
 *
skb
)

7001 c⁄° 
ùv6hdr
 *
ùv6h
;

7002 
t˝hdr
 *
th
;

7003 
ªt
;

7005 
ªt
 = 
	`skb_cow_hód
(
skb
, 0);

7006 i‡(
ªt
)

7007  
ªt
;

7009 
ùv6h
 = 
	`ùv6_hdr
(
skb
);

7010 
th
 = 
	`t˝_hdr
(
skb
);

7012 
th
->
check
 = 0;

7013 
th
->
check
 = ~
	`t˝_v6_check
(0, &
ùv6h
->
ßddr
, &ùv6h->
daddr
, 0);

7015  
ªt
;

7016 
	}
}

7018 
ölöe
 
__be16
 
	$gë_¥Ÿocﬁ
(
sk_buff
 *
skb
)

7020 
__be16
 
¥Ÿocﬁ
;

7022 i‡(
skb
->
¥Ÿocﬁ
 =
	`ht⁄s
(
ETH_P_8021Q
))

7023 
¥Ÿocﬁ
 = 
	`vœn_ëh_hdr
(
skb
)->
h_vœn_íˇpsuœãd_¥Ÿo
;

7025 
¥Ÿocﬁ
 = 
skb
->protocol;

7027  
¥Ÿocﬁ
;

7028 
	}
}

7030 
boﬁ
 
	$πl8169_tso_csum_v1
(
πl8169_¥iv©e
 *
ç
,

7031 
sk_buff
 *
skb
, 
u32
 *
›ts
)

7033 
u32
 
mss
 = 
	`skb_shöfo
(
skb
)->
gso_size
;

7035 i‡(
mss
) {

7036 
›ts
[0] |
TD_LSO
;

7037 
›ts
[0] |
	`mö
(
mss
, 
TD_MSS_MAX
Ë<< 
TD0_MSS_SHIFT
;

7038 } i‡(
skb
->
ù_summed
 =
CHECKSUM_PARTIAL
) {

7039 c⁄° 
ùhdr
 *
ù
 = 
	`ù_hdr
(
skb
);

7041 i‡(
ù
->
¥Ÿocﬁ
 =
IPPROTO_TCP
)

7042 
›ts
[0] |
TD0_IP_CS
 | 
TD0_TCP_CS
;

7043 i‡(
ù
->
¥Ÿocﬁ
 =
IPPROTO_UDP
)

7044 
›ts
[0] |
TD0_IP_CS
 | 
TD0_UDP_CS
;

7046 
	`WARN_ON_ONCE
(1);

7049  
åue
;

7050 
	}
}

7052 
boﬁ
 
	$πl8169_tso_csum_v2
(
πl8169_¥iv©e
 *
ç
,

7053 
sk_buff
 *
skb
, 
u32
 *
›ts
)

7055 
u32
 
å™•‹t_off£t
 = (u32)
	`skb_å™•‹t_off£t
(
skb
);

7056 
u32
 
mss
 = 
	`skb_shöfo
(
skb
)->
gso_size
;

7058 i‡(
mss
) {

7059 i‡(
å™•‹t_off£t
 > 
GTTCPHO_MAX
) {

7060 
	`√tif_w¨n
(
ç
, 
tx_îr
,Åp->
dev
,

7062 
å™•‹t_off£t
);

7063  
Ál£
;

7066 
	`gë_¥Ÿocﬁ
(
skb
)) {

7067 
	`ht⁄s
(
ETH_P_IP
):

7068 
›ts
[0] |
TD1_GTSENV4
;

7071 
	`ht⁄s
(
ETH_P_IPV6
):

7072 i‡(
	`msdn_gü¡_£nd_check
(
skb
))

7073  
Ál£
;

7075 
›ts
[0] |
TD1_GTSENV6
;

7079 
	`WARN_ON_ONCE
(1);

7083 
›ts
[0] |
å™•‹t_off£t
 << 
GTTCPHO_SHIFT
;

7084 
›ts
[1] |
	`mö
(
mss
, 
TD_MSS_MAX
Ë<< 
TD1_MSS_SHIFT
;

7085 } i‡(
skb
->
ù_summed
 =
CHECKSUM_PARTIAL
) {

7086 
u8
 
ù_¥Ÿocﬁ
;

7088 i‡(
	`u∆ikñy
(
	`πl_ã°_hw_∑d_bug
(
ç
, 
skb
)))

7089  !(
	`skb_checksum_hñp
(
skb
Ë|| 
	`ëh_skb_∑d
(skb));

7091 i‡(
å™•‹t_off£t
 > 
TCPHO_MAX
) {

7092 
	`√tif_w¨n
(
ç
, 
tx_îr
,Åp->
dev
,

7094 
å™•‹t_off£t
);

7095  
Ál£
;

7098 
	`gë_¥Ÿocﬁ
(
skb
)) {

7099 
	`ht⁄s
(
ETH_P_IP
):

7100 
›ts
[1] |
TD1_IPv4_CS
;

7101 
ù_¥Ÿocﬁ
 = 
	`ù_hdr
(
skb
)->
¥Ÿocﬁ
;

7104 
	`ht⁄s
(
ETH_P_IPV6
):

7105 
›ts
[1] |
TD1_IPv6_CS
;

7106 
ù_¥Ÿocﬁ
 = 
	`ùv6_hdr
(
skb
)->
√xthdr
;

7110 
ù_¥Ÿocﬁ
 = 
IPPROTO_RAW
;

7114 i‡(
ù_¥Ÿocﬁ
 =
IPPROTO_TCP
)

7115 
›ts
[1] |
TD1_TCP_CS
;

7116 i‡(
ù_¥Ÿocﬁ
 =
IPPROTO_UDP
)

7117 
›ts
[1] |
TD1_UDP_CS
;

7119 
	`WARN_ON_ONCE
(1);

7121 
›ts
[1] |
å™•‹t_off£t
 << 
TCPHO_SHIFT
;

7123 i‡(
	`u∆ikñy
(
	`πl_ã°_hw_∑d_bug
(
ç
, 
skb
)))

7124  !
	`ëh_skb_∑d
(
skb
);

7127  
åue
;

7128 
	}
}

7130 
√tdev_tx_t
 
	$πl8169_°¨t_xmô
(
sk_buff
 *
skb
,

7131 
√t_devi˚
 *
dev
)

7133 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

7134 
íåy
 = 
ç
->
cur_tx
 % 
NUM_TX_DESC
;

7135 
TxDesc
 *
txd
 = 
ç
->
TxDescAºay
 + 
íåy
;

7136 
devi˚
 *
d
 = 
	`ç_to_dev
(
ç
);

7137 
dma_addr_t
 
m≠pög
;

7138 
u32
 
°©us
, 
Àn
;

7139 
u32
 
›ts
[2];

7140 
‰ags
;

7142 i‡(
	`u∆ikñy
(!
	`TX_FRAGS_READY_FOR
(
ç
, 
	`skb_shöfo
(
skb
)->
ƒ_‰ags
))) {

7143 
	`√tif_îr
(
ç
, 
drv
, 
dev
, "BUG! Tx Ring full when queueáwake!\n");

7144 
îr_°›_0
;

7147 i‡(
	`u∆ikñy
(
	`À32_to_˝u
(
txd
->
›ts1
Ë& 
DescOwn
))

7148 
îr_°›_0
;

7150 
›ts
[1] = 
	`˝u_to_À32
(
	`πl8169_tx_vœn_èg
(
skb
));

7151 
›ts
[0] = 
DescOwn
;

7153 i‡(!
ç
->
	`tso_csum
—p, 
skb
, 
›ts
)) {

7154 
	`r8169_csum_w‹k¨ound
(
ç
, 
skb
);

7155  
NETDEV_TX_OK
;

7158 
Àn
 = 
	`skb_hódÀn
(
skb
);

7159 
m≠pög
 = 
	`dma_m≠_sögÀ
(
d
, 
skb
->
d©a
, 
Àn
, 
DMA_TO_DEVICE
);

7160 i‡(
	`u∆ikñy
(
	`dma_m≠pög_îr‹
(
d
, 
m≠pög
))) {

7161 i‡(
	`√t_øãlimô
())

7162 
	`√tif_îr
(
ç
, 
drv
, 
dev
, "FailedÅo map TX DMA!\n");

7163 
îr_dma_0
;

7166 
ç
->
tx_skb
[
íåy
].
Àn
 =Üen;

7167 
txd
->
addr
 = 
	`˝u_to_À64
(
m≠pög
);

7169 
‰ags
 = 
	`πl8169_xmô_‰ags
(
ç
, 
skb
, 
›ts
);

7170 i‡(
‰ags
 < 0)

7171 
îr_dma_1
;

7172 i‡(
‰ags
)

7173 
›ts
[0] |
Fú°Føg
;

7175 
›ts
[0] |
Fú°Føg
 | 
La°Føg
;

7176 
ç
->
tx_skb
[
íåy
].
skb
 = skb;

7179 
txd
->
›ts2
 = 
	`˝u_to_À32
(
›ts
[1]);

7181 
	`skb_tx_time°amp
(
skb
);

7184 
	`dma_wmb
();

7187 
°©us
 = 
›ts
[0] | 
Àn
 | (
RögEnd
 * !((
íåy
 + 1Ë% 
NUM_TX_DESC
));

7188 
txd
->
›ts1
 = 
	`˝u_to_À32
(
°©us
);

7191 
	`wmb
();

7193 
ç
->
cur_tx
 +
‰ags
 + 1;

7195 
	`RTL_W8
(
ç
, 
TxPﬁl
, 
NPQ
);

7197 
	`mmiowb
();

7199 i‡(!
	`TX_FRAGS_READY_FOR
(
ç
, 
MAX_SKB_FRAGS
)) {

7203 
	`smp_wmb
();

7204 
	`√tif_°›_queue
(
dev
);

7212 
	`smp_mb
();

7213 i‡(
	`TX_FRAGS_READY_FOR
(
ç
, 
MAX_SKB_FRAGS
))

7214 
	`√tif_wake_queue
(
dev
);

7217  
NETDEV_TX_OK
;

7219 
îr_dma_1
:

7220 
	`πl8169_unm≠_tx_skb
(
d
, 
ç
->
tx_skb
 + 
íåy
, 
txd
);

7221 
îr_dma_0
:

7222 
	`dev_k‰ì_skb_™y
(
skb
);

7223 
dev
->
°©s
.
tx_dr›≥d
++;

7224  
NETDEV_TX_OK
;

7226 
îr_°›_0
:

7227 
	`√tif_°›_queue
(
dev
);

7228 
dev
->
°©s
.
tx_dr›≥d
++;

7229  
NETDEV_TX_BUSY
;

7230 
	}
}

7232 
	$πl8169_pcõº_öãºu±
(
√t_devi˚
 *
dev
)

7234 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

7235 
pci_dev
 *
pdev
 = 
ç
->pci_dev;

7236 
u16
 
pci_°©us
, 
pci_cmd
;

7238 
	`pci_ªad_c⁄fig_w‹d
(
pdev
, 
PCI_COMMAND
, &
pci_cmd
);

7239 
	`pci_ªad_c⁄fig_w‹d
(
pdev
, 
PCI_STATUS
, &
pci_°©us
);

7241 
	`√tif_îr
(
ç
, 
öå
, 
dev
, "PCIÉrror (cmd = 0x%04x, status = 0x%04x)\n",

7242 
pci_cmd
, 
pci_°©us
);

7252 i‡(
pdev
->
brokí_∑rôy_°©us
)

7253 
pci_cmd
 &~
PCI_COMMAND_PARITY
;

7255 
pci_cmd
 |
PCI_COMMAND_SERR
 | 
PCI_COMMAND_PARITY
;

7257 
	`pci_wrôe_c⁄fig_w‹d
(
pdev
, 
PCI_COMMAND
, 
pci_cmd
);

7259 
	`pci_wrôe_c⁄fig_w‹d
(
pdev
, 
PCI_STATUS
,

7260 
pci_°©us
 & (
PCI_STATUS_DETECTED_PARITY
 |

7261 
PCI_STATUS_SIG_SYSTEM_ERROR
 | 
PCI_STATUS_REC_MASTER_ABORT
 |

7262 
PCI_STATUS_REC_TARGET_ABORT
 | 
PCI_STATUS_SIG_TARGET_ABORT
));

7265 i‡((
ç
->
˝_cmd
 & 
PCIDAC
Ë&& !ç->
cur_rx
) {

7266 
	`√tif_öfo
(
ç
, 
öå
, 
dev
, "disabling PCI DAC\n");

7267 
ç
->
˝_cmd
 &~
PCIDAC
;

7268 
	`RTL_W16
(
ç
, 
CPlusCmd
,Åp->
˝_cmd
);

7269 
dev
->
„©uªs
 &~
NETIF_F_HIGHDMA
;

7272 
	`πl8169_hw_ª£t
(
ç
);

7274 
	`πl_scheduÀ_èsk
(
ç
, 
RTL_FLAG_TASK_RESET_PENDING
);

7275 
	}
}

7277 
	$πl_tx
(
√t_devi˚
 *
dev
, 
πl8169_¥iv©e
 *
ç
)

7279 
dúty_tx
, 
tx_À·
;

7281 
dúty_tx
 = 
ç
->dirty_tx;

7282 
	`smp_rmb
();

7283 
tx_À·
 = 
ç
->
cur_tx
 - 
dúty_tx
;

7285 
tx_À·
 > 0) {

7286 
íåy
 = 
dúty_tx
 % 
NUM_TX_DESC
;

7287 
rög_öfo
 *
tx_skb
 = 
ç
->tx_skb + 
íåy
;

7288 
u32
 
°©us
;

7290 
°©us
 = 
	`À32_to_˝u
(
ç
->
TxDescAºay
[
íåy
].
›ts1
);

7291 i‡(
°©us
 & 
DescOwn
)

7298 
	`dma_rmb
();

7300 
	`πl8169_unm≠_tx_skb
(
	`ç_to_dev
(
ç
), 
tx_skb
,

7301 
ç
->
TxDescAºay
 + 
íåy
);

7302 i‡(
°©us
 & 
La°Føg
) {

7303 
	`u64_°©s_upd©e_begö
(&
ç
->
tx_°©s
.
syn˝
);

7304 
ç
->
tx_°©s
.
∑ckës
++;

7305 
ç
->
tx_°©s
.
byãs
 +
tx_skb
->
skb
->
Àn
;

7306 
	`u64_°©s_upd©e_íd
(&
ç
->
tx_°©s
.
syn˝
);

7307 
	`dev_c⁄sume_skb_™y
(
tx_skb
->
skb
);

7308 
tx_skb
->
skb
 = 
NULL
;

7310 
dúty_tx
++;

7311 
tx_À·
--;

7314 i‡(
ç
->
dúty_tx
 != dirty_tx) {

7315 
ç
->
dúty_tx
 = dirty_tx;

7323 
	`smp_mb
();

7324 i‡(
	`√tif_queue_°›≥d
(
dev
) &&

7325 
	`TX_FRAGS_READY_FOR
(
ç
, 
MAX_SKB_FRAGS
)) {

7326 
	`√tif_wake_queue
(
dev
);

7334 i‡(
ç
->
cur_tx
 !
dúty_tx
)

7335 
	`RTL_W8
(
ç
, 
TxPﬁl
, 
NPQ
);

7337 
	}
}

7339 
ölöe
 
	$πl8169_‰agmíãd_‰ame
(
u32
 
°©us
)

7341  (
°©us
 & (
Fú°Føg
 | 
La°Føg
)) != (FirstFrag | LastFrag);

7342 
	}
}

7344 
ölöe
 
	$πl8169_rx_csum
(
sk_buff
 *
skb
, 
u32
 
›ts1
)

7346 
u32
 
°©us
 = 
›ts1
 & 
RxPrŸoMask
;

7348 i‡(((
°©us
 =
RxPrŸoTCP
Ë&& !(
›ts1
 & 
TCPFaû
)) ||

7349 ((
°©us
 =
RxPrŸoUDP
Ë&& !(
›ts1
 & 
UDPFaû
)))

7350 
skb
->
ù_summed
 = 
CHECKSUM_UNNECESSARY
;

7352 
	`skb_checksum_n⁄e_as£π
(
skb
);

7353 
	}
}

7355 
sk_buff
 *
	$πl8169_åy_rx_c›y
(*
d©a
,

7356 
πl8169_¥iv©e
 *
ç
,

7357 
pkt_size
,

7358 
dma_addr_t
 
addr
)

7360 
sk_buff
 *
skb
;

7361 
devi˚
 *
d
 = 
	`ç_to_dev
(
ç
);

7363 
d©a
 = 
	`πl8169_Æign
(data);

7364 
	`dma_sync_sögÀ_f‹_˝u
(
d
, 
addr
, 
pkt_size
, 
DMA_FROM_DEVICE
);

7365 
	`¥e„tch
(
d©a
);

7366 
skb
 = 
	`«pi_Æloc_skb
(&
ç
->
«pi
, 
pkt_size
);

7367 i‡(
skb
)

7368 
	`mem˝y
(
skb
->
d©a
, d©a, 
pkt_size
);

7369 
	`dma_sync_sögÀ_f‹_devi˚
(
d
, 
addr
, 
pkt_size
, 
DMA_FROM_DEVICE
);

7371  
skb
;

7372 
	}
}

7374 
	$πl_rx
(
√t_devi˚
 *
dev
, 
πl8169_¥iv©e
 *
ç
, 
u32
 
budgë
)

7376 
cur_rx
, 
rx_À·
;

7377 
cou¡
;

7379 
cur_rx
 = 
ç
->cur_rx;

7381 
rx_À·
 = 
	`mö
(
budgë
, 
NUM_RX_DESC
);Ñx_À· > 0;Ñx_À·--, 
cur_rx
++) {

7382 
íåy
 = 
cur_rx
 % 
NUM_RX_DESC
;

7383 
RxDesc
 *
desc
 = 
ç
->
RxDescAºay
 + 
íåy
;

7384 
u32
 
°©us
;

7386 
°©us
 = 
	`À32_to_˝u
(
desc
->
›ts1
Ë& 
ç
->
›ts1_mask
;

7387 i‡(
°©us
 & 
DescOwn
)

7394 
	`dma_rmb
();

7396 i‡(
	`u∆ikñy
(
°©us
 & 
RxRES
)) {

7397 
	`√tif_öfo
(
ç
, 
rx_îr
, 
dev
, "Rx ERROR. status = %08x\n",

7398 
°©us
);

7399 
dev
->
°©s
.
rx_îr‹s
++;

7400 i‡(
°©us
 & (
RxRWT
 | 
RxRUNT
))

7401 
dev
->
°©s
.
rx_Àngth_îr‹s
++;

7402 i‡(
°©us
 & 
RxCRC
)

7403 
dev
->
°©s
.
rx_¸c_îr‹s
++;

7404 i‡(
°©us
 & 
RxFOVF
) {

7405 
	`πl_scheduÀ_èsk
(
ç
, 
RTL_FLAG_TASK_RESET_PENDING
);

7406 
dev
->
°©s
.
rx_fifo_îr‹s
++;

7408 i‡((
°©us
 & (
RxRUNT
 | 
RxCRC
)) &&

7409 !(
°©us
 & (
RxRWT
 | 
RxFOVF
)) &&

7410 (
dev
->
„©uªs
 & 
NETIF_F_RXALL
))

7411 
¥o˚ss_pkt
;

7413 
sk_buff
 *
skb
;

7414 
dma_addr_t
 
addr
;

7415 
pkt_size
;

7417 
¥o˚ss_pkt
:

7418 
addr
 = 
	`À64_to_˝u
(
desc
->addr);

7419 i‡(
	`likñy
(!(
dev
->
„©uªs
 & 
NETIF_F_RXFCS
)))

7420 
pkt_size
 = (
°©us
 & 0x00003fff) - 4;

7422 
pkt_size
 = 
°©us
 & 0x00003fff;

7429 i‡(
	`u∆ikñy
(
	`πl8169_‰agmíãd_‰ame
(
°©us
))) {

7430 
dev
->
°©s
.
rx_dr›≥d
++;

7431 
dev
->
°©s
.
rx_Àngth_îr‹s
++;

7432 
ªÀa£_des¸ùt‹
;

7435 
skb
 = 
	`πl8169_åy_rx_c›y
(
ç
->
Rx_d©abuff
[
íåy
],

7436 
ç
, 
pkt_size
, 
addr
);

7437 i‡(!
skb
) {

7438 
dev
->
°©s
.
rx_dr›≥d
++;

7439 
ªÀa£_des¸ùt‹
;

7442 
	`πl8169_rx_csum
(
skb
, 
°©us
);

7443 
	`skb_put
(
skb
, 
pkt_size
);

7444 
skb
->
¥Ÿocﬁ
 = 
	`ëh_ty≥_å™s
(skb, 
dev
);

7446 
	`πl8169_rx_vœn_èg
(
desc
, 
skb
);

7448 i‡(
skb
->
pkt_ty≥
 =
PACKET_MULTICAST
)

7449 
dev
->
°©s
.
mu…iˇ°
++;

7451 
	`«pi_gro_ª˚ive
(&
ç
->
«pi
, 
skb
);

7453 
	`u64_°©s_upd©e_begö
(&
ç
->
rx_°©s
.
syn˝
);

7454 
ç
->
rx_°©s
.
∑ckës
++;

7455 
ç
->
rx_°©s
.
byãs
 +
pkt_size
;

7456 
	`u64_°©s_upd©e_íd
(&
ç
->
rx_°©s
.
syn˝
);

7458 
ªÀa£_des¸ùt‹
:

7459 
desc
->
›ts2
 = 0;

7460 
	`πl8169_m¨k_to_asic
(
desc
, 
rx_buf_sz
);

7463 
cou¡
 = 
cur_rx
 - 
ç
->cur_rx;

7464 
ç
->
cur_rx
 = cur_rx;

7466  
cou¡
;

7467 
	}
}

7469 
úqªtu∫_t
 
	$πl8169_öãºu±
(
úq
, *
dev_ö°™˚
)

7471 
√t_devi˚
 *
dev
 = 
dev_ö°™˚
;

7472 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

7473 
h™dÀd
 = 0;

7474 
u16
 
°©us
;

7476 
°©us
 = 
	`πl_gë_evíts
(
ç
);

7477 i‡(
°©us
 && status != 0xffff) {

7478 
°©us
 &
RTL_EVENT_NAPI
 | 
ç
->
evít_¶ow
;

7479 i‡(
°©us
) {

7480 
h™dÀd
 = 1;

7482 
	`πl_úq_dißbÀ
(
ç
);

7483 
	`«pi_scheduÀ
(&
ç
->
«pi
);

7486  
	`IRQ_RETVAL
(
h™dÀd
);

7487 
	}
}

7492 
	$πl_¶ow_evít_w‹k
(
πl8169_¥iv©e
 *
ç
)

7494 
√t_devi˚
 *
dev
 = 
ç
->dev;

7495 
u16
 
°©us
;

7497 
°©us
 = 
	`πl_gë_evíts
(
ç
Ë&Åp->
evít_¶ow
;

7498 
	`πl_ack_evíts
(
ç
, 
°©us
);

7500 i‡(
	`u∆ikñy
(
°©us
 & 
RxFIFOOvî
)) {

7501 
ç
->
mac_vîsi⁄
) {

7503 
RTL_GIGA_MAC_VER_11
:

7504 
	`√tif_°›_queue
(
dev
);

7506 
	`£t_bô
(
RTL_FLAG_TASK_RESET_PENDING
, 
ç
->
wk
.
Êags
);

7512 i‡(
	`u∆ikñy
(
°©us
 & 
SYSEº
))

7513 
	`πl8169_pcõº_öãºu±
(
dev
);

7515 i‡(
°©us
 & 
LökChg
)

7516 
	`πl8169_check_lök_°©us
(
dev
, 
ç
);

7518 
	`πl_úq_íabÀ_Æl
(
ç
);

7519 
	}
}

7521 
	$πl_èsk
(
w‹k_°ru˘
 *
w‹k
)

7524 
bôƒ
;

7525 (*
a˘i⁄
)(
πl8169_¥iv©e
 *);

7526 } 
πl_w‹k
[] = {

7528 { 
RTL_FLAG_TASK_SLOW_PENDING
, 
πl_¶ow_evít_w‹k
 },

7529 { 
RTL_FLAG_TASK_RESET_PENDING
, 
πl_ª£t_w‹k
 },

7530 { 
RTL_FLAG_TASK_PHY_PENDING
, 
πl_phy_w‹k
 }

7532 
πl8169_¥iv©e
 *
ç
 =

7533 
	`c⁄èöî_of
(
w‹k
, 
πl8169_¥iv©e
, 
wk
.work);

7534 
√t_devi˚
 *
dev
 = 
ç
->dev;

7535 
i
;

7537 
	`πl_lock_w‹k
(
ç
);

7539 i‡(!
	`√tif_ru¬ög
(
dev
) ||

7540 !
	`ã°_bô
(
RTL_FLAG_TASK_ENABLED
, 
ç
->
wk
.
Êags
))

7541 
out_u∆ock
;

7543 
i
 = 0; i < 
	`ARRAY_SIZE
(
πl_w‹k
); i++) {

7544 
boﬁ
 
≥ndög
;

7546 
≥ndög
 = 
	`ã°_™d_˛ór_bô
(
πl_w‹k
[
i
].
bôƒ
, 
ç
->
wk
.
Êags
);

7547 i‡(
≥ndög
)

7548 
πl_w‹k
[
i
].
	`a˘i⁄
(
ç
);

7551 
out_u∆ock
:

7552 
	`πl_u∆ock_w‹k
(
ç
);

7553 
	}
}

7555 
	$πl8169_pﬁl
(
«pi_°ru˘
 *
«pi
, 
budgë
)

7557 
πl8169_¥iv©e
 *
ç
 = 
	`c⁄èöî_of
(
«pi
, rtl8169_private,Çapi);

7558 
√t_devi˚
 *
dev
 = 
ç
->dev;

7559 
u16
 
íabÀ_mask
 = 
RTL_EVENT_NAPI
 | 
ç
->
evít_¶ow
;

7560 
w‹k_d⁄e
= 0;

7561 
u16
 
°©us
;

7563 
°©us
 = 
	`πl_gë_evíts
(
ç
);

7564 
	`πl_ack_evíts
(
ç
, 
°©us
 & ~ç->
evít_¶ow
);

7566 i‡(
°©us
 & 
RTL_EVENT_NAPI_RX
)

7567 
w‹k_d⁄e
 = 
	`πl_rx
(
dev
, 
ç
, (
u32
Ë
budgë
);

7569 i‡(
°©us
 & 
RTL_EVENT_NAPI_TX
)

7570 
	`πl_tx
(
dev
, 
ç
);

7572 i‡(
°©us
 & 
ç
->
evít_¶ow
) {

7573 
íabÀ_mask
 &~
ç
->
evít_¶ow
;

7575 
	`πl_scheduÀ_èsk
(
ç
, 
RTL_FLAG_TASK_SLOW_PENDING
);

7578 i‡(
w‹k_d⁄e
 < 
budgë
) {

7579 
	`«pi_com∂ëe_d⁄e
(
«pi
, 
w‹k_d⁄e
);

7581 
	`πl_úq_íabÀ
(
ç
, 
íabÀ_mask
);

7582 
	`mmiowb
();

7585  
w‹k_d⁄e
;

7586 
	}
}

7588 
	$πl8169_rx_mis£d
(
√t_devi˚
 *
dev
)

7590 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

7592 i‡(
ç
->
mac_vîsi⁄
 > 
RTL_GIGA_MAC_VER_06
)

7595 
dev
->
°©s
.
rx_mis£d_îr‹s
 +
	`RTL_R32
(
ç
, 
RxMis£d
) & 0xffffff;

7596 
	`RTL_W32
(
ç
, 
RxMis£d
, 0);

7597 
	}
}

7599 
	$πl8169_down
(
√t_devi˚
 *
dev
)

7601 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

7603 
	`dñ_timî_sync
(&
ç
->
timî
);

7605 
	`«pi_dißbÀ
(&
ç
->
«pi
);

7606 
	`√tif_°›_queue
(
dev
);

7608 
	`πl8169_hw_ª£t
(
ç
);

7614 
	`πl8169_rx_mis£d
(
dev
);

7617 
	`synchr⁄ize_sched
();

7619 
	`πl8169_tx_˛ór
(
ç
);

7621 
	`πl8169_rx_˛ór
(
ç
);

7623 
	`πl_∂l_powî_down
(
ç
);

7624 
	}
}

7626 
	$πl8169_˛o£
(
√t_devi˚
 *
dev
)

7628 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

7629 
pci_dev
 *
pdev
 = 
ç
->pci_dev;

7631 
	`pm_ru¡ime_gë_sync
(&
pdev
->
dev
);

7634 
	`πl8169_upd©e_cou¡îs
(
dev
);

7636 
	`πl_lock_w‹k
(
ç
);

7637 
	`˛ór_bô
(
RTL_FLAG_TASK_ENABLED
, 
ç
->
wk
.
Êags
);

7639 
	`πl8169_down
(
dev
);

7640 
	`πl_u∆ock_w‹k
(
ç
);

7642 
	`ˇn˚l_w‹k_sync
(&
ç
->
wk
.
w‹k
);

7644 
	`pci_‰ì_úq
(
pdev
, 0, 
dev
);

7646 
	`dma_‰ì_cohîít
(&
pdev
->
dev
, 
R8169_RX_RING_BYTES
, 
ç
->
RxDescAºay
,

7647 
ç
->
RxPhyAddr
);

7648 
	`dma_‰ì_cohîít
(&
pdev
->
dev
, 
R8169_TX_RING_BYTES
, 
ç
->
TxDescAºay
,

7649 
ç
->
TxPhyAddr
);

7650 
ç
->
TxDescAºay
 = 
NULL
;

7651 
ç
->
RxDescAºay
 = 
NULL
;

7653 
	`pm_ru¡ime_put_sync
(&
pdev
->
dev
);

7656 
	}
}

7658 #ifde‡
CONFIG_NET_POLL_CONTROLLER


7659 
	$πl8169_√çﬁl
(
√t_devi˚
 *
dev
)

7661 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

7663 
	`πl8169_öãºu±
(
	`pci_úq_ve˘‹
(
ç
->
pci_dev
, 0), 
dev
);

7664 
	}
}

7667 
	$πl_›í
(
√t_devi˚
 *
dev
)

7669 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

7670 
pci_dev
 *
pdev
 = 
ç
->pci_dev;

7671 
ªtvÆ
 = -
ENOMEM
;

7673 
	`pm_ru¡ime_gë_sync
(&
pdev
->
dev
);

7679 
ç
->
TxDescAºay
 = 
	`dma_Æloc_cohîít
(&
pdev
->
dev
, 
R8169_TX_RING_BYTES
,

7680 &
ç
->
TxPhyAddr
, 
GFP_KERNEL
);

7681 i‡(!
ç
->
TxDescAºay
)

7682 
îr_pm_ru¡ime_put
;

7684 
ç
->
RxDescAºay
 = 
	`dma_Æloc_cohîít
(&
pdev
->
dev
, 
R8169_RX_RING_BYTES
,

7685 &
ç
->
RxPhyAddr
, 
GFP_KERNEL
);

7686 i‡(!
ç
->
RxDescAºay
)

7687 
îr_‰ì_tx_0
;

7689 
ªtvÆ
 = 
	`πl8169_öô_rög
(
dev
);

7690 i‡(
ªtvÆ
 < 0)

7691 
îr_‰ì_rx_1
;

7693 
	`INIT_WORK
(&
ç
->
wk
.
w‹k
, 
πl_èsk
);

7695 
	`smp_mb
();

7697 
	`πl_ªque°_fúmw¨e
(
ç
);

7699 
ªtvÆ
 = 
	`pci_ªque°_úq
(
pdev
, 0, 
πl8169_öãºu±
, 
NULL
, 
dev
,

7700 
dev
->
«me
);

7701 i‡(
ªtvÆ
 < 0)

7702 
îr_ªÀa£_fw_2
;

7704 
	`πl_lock_w‹k
(
ç
);

7706 
	`£t_bô
(
RTL_FLAG_TASK_ENABLED
, 
ç
->
wk
.
Êags
);

7708 
	`«pi_íabÀ
(&
ç
->
«pi
);

7710 
	`πl8169_öô_phy
(
dev
, 
ç
);

7712 
	`__πl8169_£t_„©uªs
(
dev
, dev->
„©uªs
);

7714 
	`πl_∂l_powî_up
(
ç
);

7716 
	`πl_hw_°¨t
(
dev
);

7718 i‡(!
	`πl8169_öô_cou¡î_off£ts
(
dev
))

7719 
	`√tif_w¨n
(
ç
, 
hw
, 
dev
, "counterÑeset/update failed\n");

7721 
	`√tif_°¨t_queue
(
dev
);

7723 
	`πl_u∆ock_w‹k
(
ç
);

7725 
ç
->
ßved_wﬁ›ts
 = 0;

7726 
	`pm_ru¡ime_put_sync
(&
pdev
->
dev
);

7728 
	`πl8169_check_lök_°©us
(
dev
, 
ç
);

7729 
out
:

7730  
ªtvÆ
;

7732 
îr_ªÀa£_fw_2
:

7733 
	`πl_ªÀa£_fúmw¨e
(
ç
);

7734 
	`πl8169_rx_˛ór
(
ç
);

7735 
îr_‰ì_rx_1
:

7736 
	`dma_‰ì_cohîít
(&
pdev
->
dev
, 
R8169_RX_RING_BYTES
, 
ç
->
RxDescAºay
,

7737 
ç
->
RxPhyAddr
);

7738 
ç
->
RxDescAºay
 = 
NULL
;

7739 
îr_‰ì_tx_0
:

7740 
	`dma_‰ì_cohîít
(&
pdev
->
dev
, 
R8169_TX_RING_BYTES
, 
ç
->
TxDescAºay
,

7741 
ç
->
TxPhyAddr
);

7742 
ç
->
TxDescAºay
 = 
NULL
;

7743 
îr_pm_ru¡ime_put
:

7744 
	`pm_ru¡ime_put_noidÀ
(&
pdev
->
dev
);

7745 
out
;

7746 
	}
}

7749 
	$πl8169_gë_°©s64
(
√t_devi˚
 *
dev
, 
π∆_lök_°©s64
 *
°©s
)

7751 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

7752 
pci_dev
 *
pdev
 = 
ç
->pci_dev;

7753 
πl8169_cou¡îs
 *
cou¡îs
 = 
ç
->counters;

7754 
°¨t
;

7756 
	`pm_ru¡ime_gë_n‹esume
(&
pdev
->
dev
);

7758 i‡(
	`√tif_ru¬ög
(
dev
Ë&& 
	`pm_ru¡ime_a˘ive
(&
pdev
->dev))

7759 
	`πl8169_rx_mis£d
(
dev
);

7762 
°¨t
 = 
	`u64_°©s_„tch_begö_úq
(&
ç
->
rx_°©s
.
syn˝
);

7763 
°©s
->
rx_∑ckës
 = 
ç
->
rx_°©s
.
∑ckës
;

7764 
°©s
->
rx_byãs
 = 
ç
->
rx_°©s
.
byãs
;

7765 } 
	`u64_°©s_„tch_ªåy_úq
(&
ç
->
rx_°©s
.
syn˝
, 
°¨t
));

7768 
°¨t
 = 
	`u64_°©s_„tch_begö_úq
(&
ç
->
tx_°©s
.
syn˝
);

7769 
°©s
->
tx_∑ckës
 = 
ç
->
tx_°©s
.
∑ckës
;

7770 
°©s
->
tx_byãs
 = 
ç
->
tx_°©s
.
byãs
;

7771 } 
	`u64_°©s_„tch_ªåy_úq
(&
ç
->
tx_°©s
.
syn˝
, 
°¨t
));

7773 
°©s
->
rx_dr›≥d
 = 
dev
->stats.rx_dropped;

7774 
°©s
->
tx_dr›≥d
 = 
dev
->stats.tx_dropped;

7775 
°©s
->
rx_Àngth_îr‹s
 = 
dev
->stats.rx_length_errors;

7776 
°©s
->
rx_îr‹s
 = 
dev
->stats.rx_errors;

7777 
°©s
->
rx_¸c_îr‹s
 = 
dev
->stats.rx_crc_errors;

7778 
°©s
->
rx_fifo_îr‹s
 = 
dev
->stats.rx_fifo_errors;

7779 
°©s
->
rx_mis£d_îr‹s
 = 
dev
->stats.rx_missed_errors;

7780 
°©s
->
mu…iˇ°
 = 
dev
->stats.multicast;

7786 i‡(
	`pm_ru¡ime_a˘ive
(&
pdev
->
dev
))

7787 
	`πl8169_upd©e_cou¡îs
(
dev
);

7793 
°©s
->
tx_îr‹s
 = 
	`À64_to_˝u
(
cou¡îs
->tx_errors) -

7794 
	`À64_to_˝u
(
ç
->
tc_off£t
.
tx_îr‹s
);

7795 
°©s
->
cﬁlisi⁄s
 = 
	`À32_to_˝u
(
cou¡îs
->
tx_mu…i_cﬁlisi⁄
) -

7796 
	`À32_to_˝u
(
ç
->
tc_off£t
.
tx_mu…i_cﬁlisi⁄
);

7797 
°©s
->
tx_ab‹ãd_îr‹s
 = 
	`À16_to_˝u
(
cou¡îs
->
tx_ab‹ãd
) -

7798 
	`À16_to_˝u
(
ç
->
tc_off£t
.
tx_ab‹ãd
);

7800 
	`pm_ru¡ime_put_noidÀ
(&
pdev
->
dev
);

7801 
	}
}

7803 
	$πl8169_√t_su•íd
(
√t_devi˚
 *
dev
)

7805 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

7807 i‡(!
	`√tif_ru¬ög
(
dev
))

7810 
	`√tif_devi˚_dëach
(
dev
);

7811 
	`√tif_°›_queue
(
dev
);

7813 
	`πl_lock_w‹k
(
ç
);

7814 
	`«pi_dißbÀ
(&
ç
->
«pi
);

7815 
	`˛ór_bô
(
RTL_FLAG_TASK_ENABLED
, 
ç
->
wk
.
Êags
);

7816 
	`πl_u∆ock_w‹k
(
ç
);

7818 
	`πl_∂l_powî_down
(
ç
);

7819 
	}
}

7821 #ifde‡
CONFIG_PM


7823 
	$πl8169_su•íd
(
devi˚
 *device)

7825 
pci_dev
 *
pdev
 = 
	`to_pci_dev
(
devi˚
);

7826 
√t_devi˚
 *
dev
 = 
	`pci_gë_drvd©a
(
pdev
);

7828 
	`πl8169_√t_su•íd
(
dev
);

7831 
	}
}

7833 
	$__πl8169_ªsume
(
√t_devi˚
 *
dev
)

7835 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

7837 
	`√tif_devi˚_©èch
(
dev
);

7839 
	`πl_∂l_powî_up
(
ç
);

7841 
	`πl_lock_w‹k
(
ç
);

7842 
	`«pi_íabÀ
(&
ç
->
«pi
);

7843 
	`£t_bô
(
RTL_FLAG_TASK_ENABLED
, 
ç
->
wk
.
Êags
);

7844 
	`πl_u∆ock_w‹k
(
ç
);

7846 
	`πl_scheduÀ_èsk
(
ç
, 
RTL_FLAG_TASK_RESET_PENDING
);

7847 
	}
}

7849 
	$πl8169_ªsume
(
devi˚
 *device)

7851 
pci_dev
 *
pdev
 = 
	`to_pci_dev
(
devi˚
);

7852 
√t_devi˚
 *
dev
 = 
	`pci_gë_drvd©a
(
pdev
);

7853 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

7855 
	`πl8169_öô_phy
(
dev
, 
ç
);

7857 i‡(
	`√tif_ru¬ög
(
dev
))

7858 
	`__πl8169_ªsume
(
dev
);

7861 
	}
}

7863 
	$πl8169_ru¡ime_su•íd
(
devi˚
 *device)

7865 
pci_dev
 *
pdev
 = 
	`to_pci_dev
(
devi˚
);

7866 
√t_devi˚
 *
dev
 = 
	`pci_gë_drvd©a
(
pdev
);

7867 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

7869 i‡(!
ç
->
TxDescAºay
) {

7870 
	`πl_∂l_powî_down
(
ç
);

7874 
	`πl_lock_w‹k
(
ç
);

7875 
ç
->
ßved_wﬁ›ts
 = 
	`__πl8169_gë_wﬁ
(tp);

7876 
	`__πl8169_£t_wﬁ
(
ç
, 
WAKE_ANY
);

7877 
	`πl_u∆ock_w‹k
(
ç
);

7879 
	`πl8169_√t_su•íd
(
dev
);

7882 
	`πl8169_rx_mis£d
(
dev
);

7883 
	`πl8169_upd©e_cou¡îs
(
dev
);

7886 
	}
}

7888 
	$πl8169_ru¡ime_ªsume
(
devi˚
 *device)

7890 
pci_dev
 *
pdev
 = 
	`to_pci_dev
(
devi˚
);

7891 
√t_devi˚
 *
dev
 = 
	`pci_gë_drvd©a
(
pdev
);

7892 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

7893 
	`πl_ør_£t
(
ç
, 
dev
->
dev_addr
);

7895 i‡(!
ç
->
TxDescAºay
)

7898 
	`πl_lock_w‹k
(
ç
);

7899 
	`__πl8169_£t_wﬁ
(
ç
,Åp->
ßved_wﬁ›ts
);

7900 
ç
->
ßved_wﬁ›ts
 = 0;

7901 
	`πl_u∆ock_w‹k
(
ç
);

7903 
	`πl8169_öô_phy
(
dev
, 
ç
);

7905 
	`__πl8169_ªsume
(
dev
);

7908 
	}
}

7910 
	$πl8169_ru¡ime_idÀ
(
devi˚
 *device)

7912 
pci_dev
 *
pdev
 = 
	`to_pci_dev
(
devi˚
);

7913 
√t_devi˚
 *
dev
 = 
	`pci_gë_drvd©a
(
pdev
);

7915 i‡(!
	`√tif_ru¬ög
(
dev
Ë|| !
	`√tif_ˇºõr_ok
(dev))

7916 
	`pm_scheduÀ_su•íd
(
devi˚
, 10000);

7918  -
EBUSY
;

7919 
	}
}

7921 c⁄° 
dev_pm_›s
 
	gπl8169_pm_›s
 = {

7922 .
su•íd
 = 
πl8169_su•íd
,

7923 .
	gªsume
 = 
πl8169_ªsume
,

7924 .
	g‰ìze
 = 
πl8169_su•íd
,

7925 .
	gthaw
 = 
πl8169_ªsume
,

7926 .
	gpowîoff
 = 
πl8169_su•íd
,

7927 .
	gª°‹e
 = 
πl8169_ªsume
,

7928 .
	gru¡ime_su•íd
 = 
πl8169_ru¡ime_su•íd
,

7929 .
	gru¡ime_ªsume
 = 
πl8169_ru¡ime_ªsume
,

7930 .
	gru¡ime_idÀ
 = 
πl8169_ru¡ime_idÀ
,

7933 
	#RTL8169_PM_OPS
 (&
πl8169_pm_›s
)

	)

7937 
	#RTL8169_PM_OPS
 
NULL


	)

7941 
	$πl_wﬁ_shutdown_quúk
(
πl8169_¥iv©e
 *
ç
)

7944 
ç
->
mac_vîsi⁄
) {

7945 
RTL_GIGA_MAC_VER_11
:

7946 
RTL_GIGA_MAC_VER_12
:

7947 
RTL_GIGA_MAC_VER_17
:

7948 
	`pci_˛ór_ma°î
(
ç
->
pci_dev
);

7950 
	`RTL_W8
(
ç
, 
ChùCmd
, 
CmdRxEnb
);

7952 
	`RTL_R8
(
ç
, 
ChùCmd
);

7957 
	}
}

7959 
	$πl_shutdown
(
pci_dev
 *
pdev
)

7961 
√t_devi˚
 *
dev
 = 
	`pci_gë_drvd©a
(
pdev
);

7962 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

7964 
	`πl8169_√t_su•íd
(
dev
);

7967 
	`πl_ør_£t
(
ç
, 
dev
->
≥rm_addr
);

7969 
	`πl8169_hw_ª£t
(
ç
);

7971 i‡(
sy°em_°©e
 =
SYSTEM_POWER_OFF
) {

7972 i‡(
	`__πl8169_gë_wﬁ
(
ç
Ë& 
WAKE_ANY
) {

7973 
	`πl_wﬁ_su•íd_quúk
(
ç
);

7974 
	`πl_wﬁ_shutdown_quúk
(
ç
);

7977 
	`pci_wake_‰om_d3
(
pdev
, 
åue
);

7978 
	`pci_£t_powî_°©e
(
pdev
, 
PCI_D3hŸ
);

7980 
	}
}

7982 
	$πl_ªmove_⁄e
(
pci_dev
 *
pdev
)

7984 
√t_devi˚
 *
dev
 = 
	`pci_gë_drvd©a
(
pdev
);

7985 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

7987 i‡(
	`r8168_check_dash
(
ç
))

7988 
	`πl8168_drivî_°›
(
ç
);

7990 
	`√tif_«pi_dñ
(&
ç
->
«pi
);

7992 
	`uƒegi°î_√tdev
(
dev
);

7994 
	`πl_ªÀa£_fúmw¨e
(
ç
);

7996 i‡(
	`pci_dev_run_wake
(
pdev
))

7997 
	`pm_ru¡ime_gë_n‹esume
(&
pdev
->
dev
);

8000 
	`πl_ør_£t
(
ç
, 
dev
->
≥rm_addr
);

8001 
	}
}

8003 c⁄° 
√t_devi˚_›s
 
	gπl_√tdev_›s
 = {

8004 .
ndo_›í
 = 
πl_›í
,

8005 .
	gndo_°›
 = 
πl8169_˛o£
,

8006 .
	gndo_gë_°©s64
 = 
πl8169_gë_°©s64
,

8007 .
	gndo_°¨t_xmô
 = 
πl8169_°¨t_xmô
,

8008 .
	gndo_tx_timeout
 = 
πl8169_tx_timeout
,

8009 .
	gndo_vÆid©e_addr
 = 
ëh_vÆid©e_addr
,

8010 .
	gndo_ch™ge_mtu
 = 
πl8169_ch™ge_mtu
,

8011 .
	gndo_fix_„©uªs
 = 
πl8169_fix_„©uªs
,

8012 .
	gndo_£t_„©uªs
 = 
πl8169_£t_„©uªs
,

8013 .
	gndo_£t_mac_addªss
 = 
πl_£t_mac_addªss
,

8014 .
	gndo_do_io˘l
 = 
πl8169_io˘l
,

8015 .
	gndo_£t_rx_mode
 = 
πl_£t_rx_mode
,

8016 #ifde‡
CONFIG_NET_POLL_CONTROLLER


8017 .
	gndo_pﬁl_c⁄åﬁÀr
 = 
πl8169_√çﬁl
,

8022 c⁄° 
	sπl_cfg_öfo
 {

8023 (*
	mhw_°¨t
)(
	m√t_devi˚
 *);

8024 
	mªgi⁄
;

8025 
	mÆign
;

8026 
u16
 
	mevít_¶ow
;

8027 
	mhas_gmii
:1;

8028 c⁄° 
πl_cﬂÀs˚_öfo
 *
	mcﬂÀs˚_öfo
;

8029 
u8
 
	mdeÁu…_vî
;

8030 } 
	gπl_cfg_öfos
 [] = {

8031 [
RTL_CFG_0
] = {

8032 .
hw_°¨t
 = 
πl_hw_°¨t_8169
,

8033 .
	gªgi⁄
 = 1,

8034 .
	gÆign
 = 0,

8035 .
	gevít_¶ow
 = 
SYSEº
 | 
LökChg
 | 
RxOvîÊow
 | 
RxFIFOOvî
,

8036 .
	ghas_gmii
 = 1,

8037 .
	gcﬂÀs˚_öfo
 = 
πl_cﬂÀs˚_öfo_8169
,

8038 .
	gdeÁu…_vî
 = 
RTL_GIGA_MAC_VER_01
,

8040 [
RTL_CFG_1
] = {

8041 .
hw_°¨t
 = 
πl_hw_°¨t_8168
,

8042 .
	gªgi⁄
 = 2,

8043 .
	gÆign
 = 8,

8044 .
	gevít_¶ow
 = 
SYSEº
 | 
LökChg
 | 
RxOvîÊow
,

8045 .
	ghas_gmii
 = 1,

8046 .
	gcﬂÀs˚_öfo
 = 
πl_cﬂÀs˚_öfo_8168_8136
,

8047 .
	gdeÁu…_vî
 = 
RTL_GIGA_MAC_VER_11
,

8049 [
RTL_CFG_2
] = {

8050 .
hw_°¨t
 = 
πl_hw_°¨t_8101
,

8051 .
	gªgi⁄
 = 2,

8052 .
	gÆign
 = 8,

8053 .
	gevít_¶ow
 = 
SYSEº
 | 
LökChg
 | 
RxOvîÊow
 | 
RxFIFOOvî
 |

8054 
PCSTimeout
,

8055 .
	gcﬂÀs˚_öfo
 = 
πl_cﬂÀs˚_öfo_8168_8136
,

8056 .
	gdeÁu…_vî
 = 
RTL_GIGA_MAC_VER_13
,

8060 
	$πl_Æloc_úq
(
πl8169_¥iv©e
 *
ç
)

8062 
Êags
;

8064 i‡(
ç
->
mac_vîsi⁄
 <
RTL_GIGA_MAC_VER_06
) {

8065 
	`RTL_W8
(
ç
, 
Cfg9346
, 
Cfg9346_U∆ock
);

8066 
	`RTL_W8
(
ç
, 
C⁄fig2
, 
	`RTL_R8
—p, C⁄fig2Ë& ~
MSIE«bÀ
);

8067 
	`RTL_W8
(
ç
, 
Cfg9346
, 
Cfg9346_Lock
);

8068 
Êags
 = 
PCI_IRQ_LEGACY
;

8070 
Êags
 = 
PCI_IRQ_ALL_TYPES
;

8073  
	`pci_Æloc_úq_ve˘‹s
(
ç
->
pci_dev
, 1, 1, 
Êags
);

8074 
	}
}

8076 
	$DECLARE_RTL_COND
(
πl_lök_li°_ªady_c⁄d
)

8078  
	`RTL_R8
(
ç
, 
MCU
Ë& 
LINK_LIST_RDY
;

8079 
	}
}

8081 
	$DECLARE_RTL_COND
(
πl_rxtx_em±y_c⁄d
)

8083  (
	`RTL_R8
(
ç
, 
MCU
Ë& 
RXTX_EMPTY
) == RXTX_EMPTY;

8084 
	}
}

8086 
	$πl_hw_öô_8168g
(
πl8169_¥iv©e
 *
ç
)

8088 
u32
 
d©a
;

8090 
ç
->
o˝_ba£
 = 
OCP_STD_PHY_BASE
;

8092 
	`RTL_W32
(
ç
, 
MISC
, 
	`RTL_R32
—p, MISCË| 
RXDV_GATED_EN
);

8094 i‡(!
	`πl_udñay_lo›_waô_high
(
ç
, &
πl_txcfg_em±y_c⁄d
, 100, 42))

8097 i‡(!
	`πl_udñay_lo›_waô_high
(
ç
, &
πl_rxtx_em±y_c⁄d
, 100, 42))

8100 
	`RTL_W8
(
ç
, 
ChùCmd
, 
	`RTL_R8
—p, ChùCmdË& ~(
CmdTxEnb
 | 
CmdRxEnb
));

8101 
	`m¶ìp
(1);

8102 
	`RTL_W8
(
ç
, 
MCU
, 
	`RTL_R8
—p, MCUË& ~
NOW_IS_OOB
);

8104 
d©a
 = 
	`r8168_mac_o˝_ªad
(
ç
, 0xe8de);

8105 
d©a
 &= ~(1 << 14);

8106 
	`r8168_mac_o˝_wrôe
(
ç
, 0xe8de, 
d©a
);

8108 i‡(!
	`πl_udñay_lo›_waô_high
(
ç
, &
πl_lök_li°_ªady_c⁄d
, 100, 42))

8111 
d©a
 = 
	`r8168_mac_o˝_ªad
(
ç
, 0xe8de);

8112 
d©a
 |= (1 << 15);

8113 
	`r8168_mac_o˝_wrôe
(
ç
, 0xe8de, 
d©a
);

8115 i‡(!
	`πl_udñay_lo›_waô_high
(
ç
, &
πl_lök_li°_ªady_c⁄d
, 100, 42))

8117 
	}
}

8119 
	$πl_hw_öô_8168ï
(
πl8169_¥iv©e
 *
ç
)

8121 
	`πl8168ï_°›_cmac
(
ç
);

8122 
	`πl_hw_öô_8168g
(
ç
);

8123 
	}
}

8125 
	$πl_hw_öôülize
(
πl8169_¥iv©e
 *
ç
)

8127 
ç
->
mac_vîsi⁄
) {

8128 
RTL_GIGA_MAC_VER_40
:

8129 
RTL_GIGA_MAC_VER_41
:

8130 
RTL_GIGA_MAC_VER_42
:

8131 
RTL_GIGA_MAC_VER_43
:

8132 
RTL_GIGA_MAC_VER_44
:

8133 
RTL_GIGA_MAC_VER_45
:

8134 
RTL_GIGA_MAC_VER_46
:

8135 
RTL_GIGA_MAC_VER_47
:

8136 
RTL_GIGA_MAC_VER_48
:

8137 
	`πl_hw_öô_8168g
(
ç
);

8139 
RTL_GIGA_MAC_VER_49
:

8140 
RTL_GIGA_MAC_VER_50
:

8141 
RTL_GIGA_MAC_VER_51
:

8142 
	`πl_hw_öô_8168ï
(
ç
);

8147 
	}
}

8149 
	$πl_öô_⁄e
(
pci_dev
 *
pdev
, c⁄° 
pci_devi˚_id
 *
ít
)

8151 c⁄° 
πl_cfg_öfo
 *
cfg
 = 
πl_cfg_öfos
 + 
ít
->
drivî_d©a
;

8152 c⁄° 
ªgi⁄
 = 
cfg
->region;

8153 
πl8169_¥iv©e
 *
ç
;

8154 
mii_if_öfo
 *
mii
;

8155 
√t_devi˚
 *
dev
;

8156 
chù£t
, 
i
;

8157 
rc
;

8159 i‡(
	`√tif_msg_drv
(&
debug
)) {

8160 
	`¥ötk
(
KERN_INFO
 "%s Gigabit Ethernet driver %sÜoaded\n",

8161 
MODULENAME
, 
RTL8169_VERSION
);

8164 
dev
 = 
	`devm_Æloc_ëhîdev
(&
pdev
->dev,  (*
ç
));

8165 i‡(!
dev
)

8166  -
ENOMEM
;

8168 
	`SET_NETDEV_DEV
(
dev
, &
pdev
->dev);

8169 
dev
->
√tdev_›s
 = &
πl_√tdev_›s
;

8170 
ç
 = 
	`√tdev_¥iv
(
dev
);

8171 
ç
->
dev
 = dev;

8172 
ç
->
pci_dev
 = 
pdev
;

8173 
ç
->
msg_íabÀ
 = 
	`√tif_msg_öô
(
debug
.msg_íabÀ, 
R8169_MSG_DEFAULT
);

8175 
mii
 = &
ç
->mii;

8176 
mii
->
dev
 = dev;

8177 
mii
->
mdio_ªad
 = 
πl_mdio_ªad
;

8178 
mii
->
mdio_wrôe
 = 
πl_mdio_wrôe
;

8179 
mii
->
phy_id_mask
 = 0x1f;

8180 
mii
->
ªg_num_mask
 = 0x1f;

8181 
mii
->
suµ‹ts_gmii
 = 
cfg
->
has_gmii
;

8185 
	`pci_dißbÀ_lök_°©e
(
pdev
, 
PCIE_LINK_STATE_L0S
 | 
PCIE_LINK_STATE_L1
 |

8186 
PCIE_LINK_STATE_CLKPM
);

8189 
rc
 = 
	`pcim_íabÀ_devi˚
(
pdev
);

8190 i‡(
rc
 < 0) {

8191 
	`√tif_îr
(
ç
, 
¥obe
, 
dev
, "enable failure\n");

8192  
rc
;

8195 i‡(
	`pcim_£t_mwi
(
pdev
) < 0)

8196 
	`√tif_öfo
(
ç
, 
¥obe
, 
dev
, "Mem-Wr-Inval unavailable\n");

8199 i‡(!(
	`pci_ªsour˚_Êags
(
pdev
, 
ªgi⁄
Ë& 
IORESOURCE_MEM
)) {

8200 
	`√tif_îr
(
ç
, 
¥obe
, 
dev
,

8202 
ªgi⁄
);

8203  -
ENODEV
;

8207 i‡(
	`pci_ªsour˚_Àn
(
pdev
, 
ªgi⁄
Ë< 
R8169_REGS_SIZE
) {

8208 
	`√tif_îr
(
ç
, 
¥obe
, 
dev
,

8210  -
ENODEV
;

8213 
rc
 = 
	`pcim_iom≠_ªgi⁄s
(
pdev
, 
	`BIT
(
ªgi⁄
), 
MODULENAME
);

8214 i‡(
rc
 < 0) {

8215 
	`√tif_îr
(
ç
, 
¥obe
, 
dev
, "cannotÑemap MMIO,áborting\n");

8216  
rc
;

8219 
ç
->
mmio_addr
 = 
	`pcim_iom≠_èbÀ
(
pdev
)[
ªgi⁄
];

8221 i‡(!
	`pci_is_pcõ
(
pdev
))

8222 
	`√tif_öfo
(
ç
, 
¥obe
, 
dev
, "not PCI Express\n");

8225 
	`πl8169_gë_mac_vîsi⁄
(
ç
, 
dev
, 
cfg
->
deÁu…_vî
);

8227 
ç
->
˝_cmd
 = 0;

8229 i‡(((
dma_addr_t
) > 4) &&

8230 (
u£_dac
 =1 || (u£_da¯=-1 && 
	`pci_is_pcõ
(
pdev
) &&

8231 
ç
->
mac_vîsi⁄
 >
RTL_GIGA_MAC_VER_18
)) &&

8232 !
	`pci_£t_dma_mask
(
pdev
, 
	`DMA_BIT_MASK
(64)) &&

8233 !
	`pci_£t_c⁄si°ít_dma_mask
(
pdev
, 
	`DMA_BIT_MASK
(64))) {

8236 i‡(!
	`pci_is_pcõ
(
pdev
))

8237 
ç
->
˝_cmd
 |
PCIDAC
;

8238 
dev
->
„©uªs
 |
NETIF_F_HIGHDMA
;

8240 
rc
 = 
	`pci_£t_dma_mask
(
pdev
, 
	`DMA_BIT_MASK
(32));

8241 i‡(
rc
 < 0) {

8242 
	`√tif_îr
(
ç
, 
¥obe
, 
dev
, "DMA configuration failed\n");

8243  
rc
;

8247 
	`πl_öô_rxcfg
(
ç
);

8249 
	`πl_úq_dißbÀ
(
ç
);

8251 
	`πl_hw_öôülize
(
ç
);

8253 
	`πl_hw_ª£t
(
ç
);

8255 
	`πl_ack_evíts
(
ç
, 0xffff);

8257 
	`pci_£t_ma°î
(
pdev
);

8259 
	`πl_öô_mdio_›s
(
ç
);

8260 
	`πl_öô_∂l_powî_›s
(
ç
);

8261 
	`πl_öô_jumbo_›s
(
ç
);

8262 
	`πl_öô_csi_›s
(
ç
);

8264 
	`πl8169_¥öt_mac_vîsi⁄
(
ç
);

8266 
chù£t
 = 
ç
->
mac_vîsi⁄
;

8267 
ç
->
txd_vîsi⁄
 = 
πl_chù_öfos
[
chù£t
].txd_version;

8269 
rc
 = 
	`πl_Æloc_úq
(
ç
);

8270 i‡(
rc
 < 0) {

8271 
	`√tif_îr
(
ç
, 
¥obe
, 
dev
, "Can'tállocate interrupt\n");

8272  
rc
;

8275 
ç
->
ßved_wﬁ›ts
 = 
	`__πl8169_gë_wﬁ
(tp);

8277 i‡(
	`πl_tbi_íabÀd
(
ç
)) {

8278 
ç
->
£t_•ìd
 = 
πl8169_£t_•ìd_tbi
;

8279 
ç
->
gë_lök_k£âögs
 = 
πl8169_gë_lök_k£âögs_tbi
;

8280 
ç
->
phy_ª£t_íabÀ
 = 
πl8169_tbi_ª£t_íabÀ
;

8281 
ç
->
phy_ª£t_≥ndög
 = 
πl8169_tbi_ª£t_≥ndög
;

8282 
ç
->
lök_ok
 = 
πl8169_tbi_lök_ok
;

8283 
ç
->
do_io˘l
 = 
πl_tbi_io˘l
;

8285 
ç
->
£t_•ìd
 = 
πl8169_£t_•ìd_xmii
;

8286 
ç
->
gë_lök_k£âögs
 = 
πl8169_gë_lök_k£âögs_xmii
;

8287 
ç
->
phy_ª£t_íabÀ
 = 
πl8169_xmii_ª£t_íabÀ
;

8288 
ç
->
phy_ª£t_≥ndög
 = 
πl8169_xmii_ª£t_≥ndög
;

8289 
ç
->
lök_ok
 = 
πl8169_xmii_lök_ok
;

8290 
ç
->
do_io˘l
 = 
πl_xmii_io˘l
;

8293 
	`muãx_öô
(&
ç
->
wk
.
muãx
);

8294 
	`u64_°©s_öô
(&
ç
->
rx_°©s
.
syn˝
);

8295 
	`u64_°©s_öô
(&
ç
->
tx_°©s
.
syn˝
);

8298 i‡(
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_35
 ||

8299 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_36
 ||

8300 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_37
 ||

8301 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_38
 ||

8302 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_40
 ||

8303 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_41
 ||

8304 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_42
 ||

8305 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_43
 ||

8306 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_44
 ||

8307 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_45
 ||

8308 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_46
 ||

8309 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_47
 ||

8310 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_48
 ||

8311 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_49
 ||

8312 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_50
 ||

8313 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_51
) {

8314 
u16
 
mac_addr
[3];

8316 *(
u32
 *)&
mac_addr
[0] = 
	`πl_îi_ªad
(
ç
, 0xe0, 
ERIAR_EXGMAC
);

8317 *(
u16
 *)&
mac_addr
[2] = 
	`πl_îi_ªad
(
ç
, 0xe4, 
ERIAR_EXGMAC
);

8319 i‡(
	`is_vÆid_ëhî_addr
((
u8
 *)
mac_addr
))

8320 
	`πl_ør_£t
(
ç
, (
u8
 *)
mac_addr
);

8322 
i
 = 0; i < 
ETH_ALEN
; i++)

8323 
dev
->
dev_addr
[
i
] = 
	`RTL_R8
(
ç
, 
MAC0
 + i);

8325 
dev
->
ëhtoﬁ_›s
 = &
πl8169_ëhtoﬁ_›s
;

8326 
dev
->
w©chdog_timeo
 = 
RTL8169_TX_TIMEOUT
;

8328 
	`√tif_«pi_add
(
dev
, &
ç
->
«pi
, 
πl8169_pﬁl
, 
R8169_NAPI_WEIGHT
);

8332 
dev
->
„©uªs
 |
NETIF_F_RXCSUM
 |

8333 
NETIF_F_HW_VLAN_CTAG_TX
 | 
NETIF_F_HW_VLAN_CTAG_RX
;

8335 
dev
->
hw_„©uªs
 = 
NETIF_F_SG
 | 
NETIF_F_IP_CSUM
 | 
NETIF_F_TSO
 |

8336 
NETIF_F_RXCSUM
 | 
NETIF_F_HW_VLAN_CTAG_TX
 |

8337 
NETIF_F_HW_VLAN_CTAG_RX
;

8338 
dev
->
vœn_„©uªs
 = 
NETIF_F_SG
 | 
NETIF_F_IP_CSUM
 | 
NETIF_F_TSO
 |

8339 
NETIF_F_HIGHDMA
;

8341 
ç
->
˝_cmd
 |
RxChkSum
 | 
RxVœn
;

8347 i‡(
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_05
)

8349 
dev
->
hw_„©uªs
 &~
NETIF_F_HW_VLAN_CTAG_RX
;

8351 i‡(
ç
->
txd_vîsi⁄
 =
RTL_TD_0
)

8352 
ç
->
tso_csum
 = 
πl8169_tso_csum_v1
;

8353 i‡(
ç
->
txd_vîsi⁄
 =
RTL_TD_1
) {

8354 
ç
->
tso_csum
 = 
πl8169_tso_csum_v2
;

8355 
dev
->
hw_„©uªs
 |
NETIF_F_IPV6_CSUM
 | 
NETIF_F_TSO6
;

8357 
	`WARN_ON_ONCE
(1);

8359 
dev
->
hw_„©uªs
 |
NETIF_F_RXALL
;

8360 
dev
->
hw_„©uªs
 |
NETIF_F_RXFCS
;

8363 
dev
->
mö_mtu
 = 
ETH_ZLEN
;

8364 
dev
->
max_mtu
 = 
πl_chù_öfos
[
chù£t
].
jumbo_max
;

8366 
ç
->
hw_°¨t
 = 
cfg
->hw_start;

8367 
ç
->
evít_¶ow
 = 
cfg
->event_slow;

8368 
ç
->
cﬂÀs˚_öfo
 = 
cfg
->coalesce_info;

8370 
ç
->
›ts1_mask
 = (ç->
mac_vîsi⁄
 !
RTL_GIGA_MAC_VER_01
) ?

8371 ~(
RxBOVF
 | 
RxFOVF
) : ~0;

8373 
	`timî_£tup
(&
ç
->
timî
, 
πl8169_phy_timî
, 0);

8375 
ç
->
πl_fw
 = 
RTL_FIRMWARE_UNKNOWN
;

8377 
ç
->
cou¡îs
 = 
	`dmam_Æloc_cohîít
 (&
pdev
->
dev
, (*tp->counters),

8378 &
ç
->
cou¡îs_phys_addr
,

8379 
GFP_KERNEL
);

8380 i‡(!
ç
->
cou¡îs
)

8381  -
ENOMEM
;

8383 
	`pci_£t_drvd©a
(
pdev
, 
dev
);

8385 
rc
 = 
	`ªgi°î_√tdev
(
dev
);

8386 i‡(
rc
 < 0)

8387  
rc
;

8389 
	`√tif_öfo
(
ç
, 
¥obe
, 
dev
, "%sát 0x%p, %pM, XID %08x IRQ %d\n",

8390 
πl_chù_öfos
[
chù£t
].
«me
, 
ç
->
mmio_addr
, 
dev
->
dev_addr
,

8391 (
u32
)(
	`RTL_R32
(
ç
, 
TxC⁄fig
) & 0x9cf0f8ff),

8392 
	`pci_úq_ve˘‹
(
pdev
, 0));

8393 i‡(
πl_chù_öfos
[
chù£t
].
jumbo_max
 !
JUMBO_1K
) {

8394 
	`√tif_öfo
(
ç
, 
¥obe
, 
dev
, "jumbo features [frames: %d bytes, "

8396 
πl_chù_öfos
[
chù£t
].
jumbo_max
,

8397 
πl_chù_öfos
[
chù£t
].
jumbo_tx_csum
 ? "ok" : "ko");

8400 i‡(
	`r8168_check_dash
(
ç
))

8401 
	`πl8168_drivî_°¨t
(
ç
);

8403 
	`√tif_ˇºõr_off
(
dev
);

8405 i‡(
	`pci_dev_run_wake
(
pdev
))

8406 
	`pm_ru¡ime_put_sync
(&
pdev
->
dev
);

8409 
	}
}

8411 
pci_drivî
 
	gπl8169_pci_drivî
 = {

8412 .
«me
 = 
MODULENAME
,

8413 .
	gid_èbÀ
 = 
πl8169_pci_tbl
,

8414 .
	g¥obe
 = 
πl_öô_⁄e
,

8415 .
	gªmove
 = 
πl_ªmove_⁄e
,

8416 .
	gshutdown
 = 
πl_shutdown
,

8417 .
	gdrivî
.
	gpm
 = 
RTL8169_PM_OPS
,

8420 
moduÀ_pci_drivî
(
πl8169_pci_drivî
);

	@r8169.c

11 
	~<löux/moduÀ.h
>

12 
	~<löux/moduÀ∑øm.h
>

13 
	~<löux/pci.h
>

14 
	~<löux/√tdevi˚.h
>

15 
	~<löux/ëhîdevi˚.h
>

16 
	~<löux/dñay.h
>

17 
	~<löux/ëhtoﬁ.h
>

18 
	~<löux/mii.h
>

19 
	~<löux/if_vœn.h
>

20 
	~<löux/¸c32.h
>

21 
	~<löux/ö.h
>

22 
	~<löux/ù.h
>

23 
	~<löux/t˝.h
>

24 
	~<löux/öãºu±.h
>

25 
	~<löux/dma-m≠pög.h
>

26 
	~<löux/pm_ru¡ime.h
>

27 
	~<löux/fúmw¨e.h
>

28 
	~<löux/pci-a•m.h
>

29 
	~<löux/¥e„tch.h
>

30 
	~<löux/ùv6.h
>

31 
	~<√t/ù6_checksum.h
>

32 
	~<löux/bpf.h
>

33 
	~<löux/rcupd©e.h
>

35 
	~<asm/io.h
>

36 
	~<asm/úq.h
>

38 
	#RTL8169_VERSION
 "2.3LK-NAPI"

	)

39 
	#MODULENAME
 "r8169"

	)

40 
	#PFX
 
MODULENAME
 ": "

	)

42 
	#FIRMWARE_8168D_1
 "πl_nic/πl8168d-1.fw"

	)

43 
	#FIRMWARE_8168D_2
 "πl_nic/πl8168d-2.fw"

	)

44 
	#FIRMWARE_8168E_1
 "πl_nic/πl8168e-1.fw"

	)

45 
	#FIRMWARE_8168E_2
 "πl_nic/πl8168e-2.fw"

	)

46 
	#FIRMWARE_8168E_3
 "πl_nic/πl8168e-3.fw"

	)

47 
	#FIRMWARE_8168F_1
 "πl_nic/πl8168f-1.fw"

	)

48 
	#FIRMWARE_8168F_2
 "πl_nic/πl8168f-2.fw"

	)

49 
	#FIRMWARE_8105E_1
 "πl_nic/πl8105e-1.fw"

	)

50 
	#FIRMWARE_8402_1
 "πl_nic/πl8402-1.fw"

	)

51 
	#FIRMWARE_8411_1
 "πl_nic/πl8411-1.fw"

	)

52 
	#FIRMWARE_8411_2
 "πl_nic/πl8411-2.fw"

	)

53 
	#FIRMWARE_8106E_1
 "πl_nic/πl8106e-1.fw"

	)

54 
	#FIRMWARE_8106E_2
 "πl_nic/πl8106e-2.fw"

	)

55 
	#FIRMWARE_8168G_2
 "πl_nic/πl8168g-2.fw"

	)

56 
	#FIRMWARE_8168G_3
 "πl_nic/πl8168g-3.fw"

	)

57 
	#FIRMWARE_8168H_1
 "πl_nic/πl8168h-1.fw"

	)

58 
	#FIRMWARE_8168H_2
 "πl_nic/πl8168h-2.fw"

	)

59 
	#FIRMWARE_8107E_1
 "πl_nic/πl8107e-1.fw"

	)

60 
	#FIRMWARE_8107E_2
 "πl_nic/πl8107e-2.fw"

	)

62 #ifde‡
RTL8169_DEBUG


63 
	#as£π
(
ex¥
) \

64 i‡(!(
ex¥
)) { \

65 
	`¥ötk
( "Assertion failed! %s,%s,%s,line=%d\n", \

66 #ex¥,
__FILE__
,
__func__
,
__LINE__
); \

67 }

	)

68 
	#d¥ötk
(
fmt
, 
¨gs
...) \

69 dÿ{ 
	`¥ötk
(
KERN_DEBUG
 
PFX
 
fmt
, ## 
¨gs
); } 0)

	)

71 
	#as£π
(
ex¥
Ëdÿ{} 0)

	)

72 
	#d¥ötk
(
fmt
, 
¨gs
...Ëdÿ{} 0)

	)

75 
	#R8169_MSG_DEFAULT
 \

76 (
NETIF_MSG_DRV
 | 
NETIF_MSG_PROBE
 | 
NETIF_MSG_IFUP
 | 
NETIF_MSG_IFDOWN
)

	)

78 
	#TX_SLOTS_AVAIL
(
ç
) \

79 (
ç
->
dúty_tx
 + 
NUM_TX_DESC
 -Åp->
cur_tx
)

	)

82 
	#TX_FRAGS_READY_FOR
(
ç
,
ƒ_‰ags
) \

83 (
	`TX_SLOTS_AVAIL
(
ç
Ë>(
ƒ_‰ags
 + 1))

	)

87 c⁄° 
	gmu…iˇ°_fûãr_limô
 = 32;

89 
	#MAX_READ_REQUEST_SHIFT
 12

	)

90 
	#TX_DMA_BURST
 7

	)

91 
	#I¡îFømeG≠
 0x03

	)

93 
	#R8169_REGS_SIZE
 256

	)

94 
	#R8169_NAPI_WEIGHT
 64

	)

95 
	#NUM_TX_DESC
 64

	)

96 
	#NUM_RX_DESC
 256U

	)

97 
	#R8169_TX_RING_BYTES
 (
NUM_TX_DESC
 * (
TxDesc
))

	)

98 
	#R8169_RX_RING_BYTES
 (
NUM_RX_DESC
 * (
RxDesc
))

	)

100 
	#RTL8169_TX_TIMEOUT
 (6*
HZ
)

	)

101 
	#RTL8169_PHY_TIMEOUT
 (10*
HZ
)

	)

104 
	#RTL_W8
(
ªg
, 
vÆ8
Ë
	`wrôeb
 ((vÆ8), 
iﬂddr
 + (ªg))

	)

105 
	#RTL_W16
(
ªg
, 
vÆ16
Ë
	`wrôew
 ((vÆ16), 
iﬂddr
 + (ªg))

	)

106 
	#RTL_W32
(
ªg
, 
vÆ32
Ë
	`wrôñ
 ((vÆ32), 
iﬂddr
 + (ªg))

	)

107 
	#RTL_R8
(
ªg
Ë
	`ªadb
 (
iﬂddr
 + (ªg))

	)

108 
	#RTL_R16
(
ªg
Ë
	`ªadw
 (
iﬂddr
 + (ªg))

	)

109 
	#RTL_R32
(
ªg
Ë
	`ªadl
 (
iﬂddr
 + (ªg))

	)

111 
	emac_vîsi⁄
 {

112 
	mRTL_GIGA_MAC_VER_01
 = 0,

113 
	mRTL_GIGA_MAC_VER_02
,

114 
	mRTL_GIGA_MAC_VER_03
,

115 
	mRTL_GIGA_MAC_VER_04
,

116 
	mRTL_GIGA_MAC_VER_05
,

117 
	mRTL_GIGA_MAC_VER_06
,

118 
	mRTL_GIGA_MAC_VER_07
,

119 
	mRTL_GIGA_MAC_VER_08
,

120 
	mRTL_GIGA_MAC_VER_09
,

121 
	mRTL_GIGA_MAC_VER_10
,

122 
	mRTL_GIGA_MAC_VER_11
,

123 
	mRTL_GIGA_MAC_VER_12
,

124 
	mRTL_GIGA_MAC_VER_13
,

125 
	mRTL_GIGA_MAC_VER_14
,

126 
	mRTL_GIGA_MAC_VER_15
,

127 
	mRTL_GIGA_MAC_VER_16
,

128 
	mRTL_GIGA_MAC_VER_17
,

129 
	mRTL_GIGA_MAC_VER_18
,

130 
	mRTL_GIGA_MAC_VER_19
,

131 
	mRTL_GIGA_MAC_VER_20
,

132 
	mRTL_GIGA_MAC_VER_21
,

133 
	mRTL_GIGA_MAC_VER_22
,

134 
	mRTL_GIGA_MAC_VER_23
,

135 
	mRTL_GIGA_MAC_VER_24
,

136 
	mRTL_GIGA_MAC_VER_25
,

137 
	mRTL_GIGA_MAC_VER_26
,

138 
	mRTL_GIGA_MAC_VER_27
,

139 
	mRTL_GIGA_MAC_VER_28
,

140 
	mRTL_GIGA_MAC_VER_29
,

141 
	mRTL_GIGA_MAC_VER_30
,

142 
	mRTL_GIGA_MAC_VER_31
,

143 
	mRTL_GIGA_MAC_VER_32
,

144 
	mRTL_GIGA_MAC_VER_33
,

145 
	mRTL_GIGA_MAC_VER_34
,

146 
	mRTL_GIGA_MAC_VER_35
,

147 
	mRTL_GIGA_MAC_VER_36
,

148 
	mRTL_GIGA_MAC_VER_37
,

149 
	mRTL_GIGA_MAC_VER_38
,

150 
	mRTL_GIGA_MAC_VER_39
,

151 
	mRTL_GIGA_MAC_VER_40
,

152 
	mRTL_GIGA_MAC_VER_41
,

153 
	mRTL_GIGA_MAC_VER_42
,

154 
	mRTL_GIGA_MAC_VER_43
,

155 
	mRTL_GIGA_MAC_VER_44
,

156 
	mRTL_GIGA_MAC_VER_45
,

157 
	mRTL_GIGA_MAC_VER_46
,

158 
	mRTL_GIGA_MAC_VER_47
,

159 
	mRTL_GIGA_MAC_VER_48
,

160 
	mRTL_GIGA_MAC_VER_49
,

161 
	mRTL_GIGA_MAC_VER_50
,

162 
	mRTL_GIGA_MAC_VER_51
,

163 
	mRTL_GIGA_MAC_NONE
 = 0xff,

166 
	eπl_tx_desc_vîsi⁄
 {

167 
	mRTL_TD_0
 = 0,

168 
	mRTL_TD_1
 = 1,

171 
	#JUMBO_1K
 
ETH_DATA_LEN


	)

172 
	#JUMBO_4K
 (4*1024 - 
ETH_HLEN
 - 2)

	)

173 
	#JUMBO_6K
 (6*1024 - 
ETH_HLEN
 - 2)

	)

174 
	#JUMBO_7K
 (7*1024 - 
ETH_HLEN
 - 2)

	)

175 
	#JUMBO_9K
 (9*1024 - 
ETH_HLEN
 - 2)

	)

177 
	#_R
(
NAME
,
TD
,
FW
,
SZ
,
B
) { \

178 .
«me
 = 
NAME
, \

179 .
txd_vîsi⁄
 = 
TD
, \

180 .
fw_«me
 = 
FW
, \

181 .
jumbo_max
 = 
SZ
, \

182 .
jumbo_tx_csum
 = 
B
 \

183 }

	)

186 c⁄° *
	m«me
;

187 
πl_tx_desc_vîsi⁄
 
	mtxd_vîsi⁄
;

188 c⁄° *
	mfw_«me
;

189 
u16
 
	mjumbo_max
;

190 
boﬁ
 
	mjumbo_tx_csum
;

191 } 
	gπl_chù_öfos
[] = {

193 [
RTL_GIGA_MAC_VER_01
] =

194 
_R
("RTL8169", 
RTL_TD_0
, 
NULL
, 
JUMBO_7K
, 
åue
),

195 [
RTL_GIGA_MAC_VER_02
] =

196 
_R
("RTL8169s", 
RTL_TD_0
, 
NULL
, 
JUMBO_7K
, 
åue
),

197 [
RTL_GIGA_MAC_VER_03
] =

198 
_R
("RTL8110s", 
RTL_TD_0
, 
NULL
, 
JUMBO_7K
, 
åue
),

199 [
RTL_GIGA_MAC_VER_04
] =

200 
_R
("RTL8169sb/8110sb", 
RTL_TD_0
, 
NULL
, 
JUMBO_7K
, 
åue
),

201 [
RTL_GIGA_MAC_VER_05
] =

202 
_R
("RTL8169sc/8110sc", 
RTL_TD_0
, 
NULL
, 
JUMBO_7K
, 
åue
),

203 [
RTL_GIGA_MAC_VER_06
] =

204 
_R
("RTL8169sc/8110sc", 
RTL_TD_0
, 
NULL
, 
JUMBO_7K
, 
åue
),

206 [
RTL_GIGA_MAC_VER_07
] =

207 
_R
("RTL8102e", 
RTL_TD_1
, 
NULL
, 
JUMBO_1K
, 
åue
),

208 [
RTL_GIGA_MAC_VER_08
] =

209 
_R
("RTL8102e", 
RTL_TD_1
, 
NULL
, 
JUMBO_1K
, 
åue
),

210 [
RTL_GIGA_MAC_VER_09
] =

211 
_R
("RTL8102e", 
RTL_TD_1
, 
NULL
, 
JUMBO_1K
, 
åue
),

212 [
RTL_GIGA_MAC_VER_10
] =

213 
_R
("RTL8101e", 
RTL_TD_0
, 
NULL
, 
JUMBO_1K
, 
åue
),

214 [
RTL_GIGA_MAC_VER_11
] =

215 
_R
("RTL8168b/8111b", 
RTL_TD_0
, 
NULL
, 
JUMBO_4K
, 
Ál£
),

216 [
RTL_GIGA_MAC_VER_12
] =

217 
_R
("RTL8168b/8111b", 
RTL_TD_0
, 
NULL
, 
JUMBO_4K
, 
Ál£
),

218 [
RTL_GIGA_MAC_VER_13
] =

219 
_R
("RTL8101e", 
RTL_TD_0
, 
NULL
, 
JUMBO_1K
, 
åue
),

220 [
RTL_GIGA_MAC_VER_14
] =

221 
_R
("RTL8100e", 
RTL_TD_0
, 
NULL
, 
JUMBO_1K
, 
åue
),

222 [
RTL_GIGA_MAC_VER_15
] =

223 
_R
("RTL8100e", 
RTL_TD_0
, 
NULL
, 
JUMBO_1K
, 
åue
),

224 [
RTL_GIGA_MAC_VER_16
] =

225 
_R
("RTL8101e", 
RTL_TD_0
, 
NULL
, 
JUMBO_1K
, 
åue
),

226 [
RTL_GIGA_MAC_VER_17
] =

227 
_R
("RTL8168b/8111b", 
RTL_TD_0
, 
NULL
, 
JUMBO_4K
, 
Ál£
),

228 [
RTL_GIGA_MAC_VER_18
] =

229 
_R
("RTL8168˝/8111˝", 
RTL_TD_1
, 
NULL
, 
JUMBO_6K
, 
Ál£
),

230 [
RTL_GIGA_MAC_VER_19
] =

231 
_R
("RTL8168c/8111c", 
RTL_TD_1
, 
NULL
, 
JUMBO_6K
, 
Ál£
),

232 [
RTL_GIGA_MAC_VER_20
] =

233 
_R
("RTL8168c/8111c", 
RTL_TD_1
, 
NULL
, 
JUMBO_6K
, 
Ál£
),

234 [
RTL_GIGA_MAC_VER_21
] =

235 
_R
("RTL8168c/8111c", 
RTL_TD_1
, 
NULL
, 
JUMBO_6K
, 
Ál£
),

236 [
RTL_GIGA_MAC_VER_22
] =

237 
_R
("RTL8168c/8111c", 
RTL_TD_1
, 
NULL
, 
JUMBO_6K
, 
Ál£
),

238 [
RTL_GIGA_MAC_VER_23
] =

239 
_R
("RTL8168˝/8111˝", 
RTL_TD_1
, 
NULL
, 
JUMBO_6K
, 
Ál£
),

240 [
RTL_GIGA_MAC_VER_24
] =

241 
_R
("RTL8168˝/8111˝", 
RTL_TD_1
, 
NULL
, 
JUMBO_6K
, 
Ál£
),

242 [
RTL_GIGA_MAC_VER_25
] =

243 
_R
("RTL8168d/8111d", 
RTL_TD_1
, 
FIRMWARE_8168D_1
,

244 
JUMBO_9K
, 
Ál£
),

245 [
RTL_GIGA_MAC_VER_26
] =

246 
_R
("RTL8168d/8111d", 
RTL_TD_1
, 
FIRMWARE_8168D_2
,

247 
JUMBO_9K
, 
Ál£
),

248 [
RTL_GIGA_MAC_VER_27
] =

249 
_R
("RTL8168dp/8111dp", 
RTL_TD_1
, 
NULL
, 
JUMBO_9K
, 
Ál£
),

250 [
RTL_GIGA_MAC_VER_28
] =

251 
_R
("RTL8168dp/8111dp", 
RTL_TD_1
, 
NULL
, 
JUMBO_9K
, 
Ál£
),

252 [
RTL_GIGA_MAC_VER_29
] =

253 
_R
("RTL8105e", 
RTL_TD_1
, 
FIRMWARE_8105E_1
,

254 
JUMBO_1K
, 
åue
),

255 [
RTL_GIGA_MAC_VER_30
] =

256 
_R
("RTL8105e", 
RTL_TD_1
, 
FIRMWARE_8105E_1
,

257 
JUMBO_1K
, 
åue
),

258 [
RTL_GIGA_MAC_VER_31
] =

259 
_R
("RTL8168dp/8111dp", 
RTL_TD_1
, 
NULL
, 
JUMBO_9K
, 
Ál£
),

260 [
RTL_GIGA_MAC_VER_32
] =

261 
_R
("RTL8168e/8111e", 
RTL_TD_1
, 
FIRMWARE_8168E_1
,

262 
JUMBO_9K
, 
Ál£
),

263 [
RTL_GIGA_MAC_VER_33
] =

264 
_R
("RTL8168e/8111e", 
RTL_TD_1
, 
FIRMWARE_8168E_2
,

265 
JUMBO_9K
, 
Ál£
),

266 [
RTL_GIGA_MAC_VER_34
] =

267 
_R
("RTL8168evl/8111evl",
RTL_TD_1
, 
FIRMWARE_8168E_3
,

268 
JUMBO_9K
, 
Ál£
),

269 [
RTL_GIGA_MAC_VER_35
] =

270 
_R
("RTL8168f/8111f", 
RTL_TD_1
, 
FIRMWARE_8168F_1
,

271 
JUMBO_9K
, 
Ál£
),

272 [
RTL_GIGA_MAC_VER_36
] =

273 
_R
("RTL8168f/8111f", 
RTL_TD_1
, 
FIRMWARE_8168F_2
,

274 
JUMBO_9K
, 
Ál£
),

275 [
RTL_GIGA_MAC_VER_37
] =

276 
_R
("RTL8402", 
RTL_TD_1
, 
FIRMWARE_8402_1
,

277 
JUMBO_1K
, 
åue
),

278 [
RTL_GIGA_MAC_VER_38
] =

279 
_R
("RTL8411", 
RTL_TD_1
, 
FIRMWARE_8411_1
,

280 
JUMBO_9K
, 
Ál£
),

281 [
RTL_GIGA_MAC_VER_39
] =

282 
_R
("RTL8106e", 
RTL_TD_1
, 
FIRMWARE_8106E_1
,

283 
JUMBO_1K
, 
åue
),

284 [
RTL_GIGA_MAC_VER_40
] =

285 
_R
("RTL8168g/8111g", 
RTL_TD_1
, 
FIRMWARE_8168G_2
,

286 
JUMBO_9K
, 
Ál£
),

287 [
RTL_GIGA_MAC_VER_41
] =

288 
_R
("RTL8168g/8111g", 
RTL_TD_1
, 
NULL
, 
JUMBO_9K
, 
Ál£
),

289 [
RTL_GIGA_MAC_VER_42
] =

290 
_R
("RTL8168g/8111g", 
RTL_TD_1
, 
FIRMWARE_8168G_3
,

291 
JUMBO_9K
, 
Ál£
),

292 [
RTL_GIGA_MAC_VER_43
] =

293 
_R
("RTL8106e", 
RTL_TD_1
, 
FIRMWARE_8106E_2
,

294 
JUMBO_1K
, 
åue
),

295 [
RTL_GIGA_MAC_VER_44
] =

296 
_R
("RTL8411", 
RTL_TD_1
, 
FIRMWARE_8411_2
,

297 
JUMBO_9K
, 
Ál£
),

298 [
RTL_GIGA_MAC_VER_45
] =

299 
_R
("RTL8168h/8111h", 
RTL_TD_1
, 
FIRMWARE_8168H_1
,

300 
JUMBO_9K
, 
Ál£
),

301 [
RTL_GIGA_MAC_VER_46
] =

302 
_R
("RTL8168h/8111h", 
RTL_TD_1
, 
FIRMWARE_8168H_2
,

303 
JUMBO_9K
, 
Ál£
),

304 [
RTL_GIGA_MAC_VER_47
] =

305 
_R
("RTL8107e", 
RTL_TD_1
, 
FIRMWARE_8107E_1
,

306 
JUMBO_1K
, 
Ál£
),

307 [
RTL_GIGA_MAC_VER_48
] =

308 
_R
("RTL8107e", 
RTL_TD_1
, 
FIRMWARE_8107E_2
,

309 
JUMBO_1K
, 
Ál£
),

310 [
RTL_GIGA_MAC_VER_49
] =

311 
_R
("RTL8168ï/8111ï", 
RTL_TD_1
, 
NULL
,

312 
JUMBO_9K
, 
Ál£
),

313 [
RTL_GIGA_MAC_VER_50
] =

314 
_R
("RTL8168ï/8111ï", 
RTL_TD_1
, 
NULL
,

315 
JUMBO_9K
, 
Ál£
),

316 [
RTL_GIGA_MAC_VER_51
] =

317 
_R
("RTL8168ï/8111ï", 
RTL_TD_1
, 
NULL
,

318 
JUMBO_9K
, 
Ál£
),

320 #unde‡
_R


322 
	ecfg_vîsi⁄
 {

323 
	mRTL_CFG_0
 = 0x00,

324 
	mRTL_CFG_1
,

325 
	mRTL_CFG_2


328 c⁄° 
pci_devi˚_id
 
	gπl8169_pci_tbl
[] = {

329 { 
PCI_DEVICE
(
PCI_VENDOR_ID_REALTEK
, 0x8129), 0, 0, 
RTL_CFG_0
 },

330 { 
PCI_DEVICE
(
PCI_VENDOR_ID_REALTEK
, 0x8136), 0, 0, 
RTL_CFG_2
 },

331 { 
PCI_DEVICE
(
PCI_VENDOR_ID_REALTEK
, 0x8161), 0, 0, 
RTL_CFG_1
 },

332 { 
PCI_DEVICE
(
PCI_VENDOR_ID_REALTEK
, 0x8167), 0, 0, 
RTL_CFG_0
 },

333 { 
PCI_DEVICE
(
PCI_VENDOR_ID_REALTEK
, 0x8168), 0, 0, 
RTL_CFG_1
 },

334 { 
PCI_DEVICE
(
PCI_VENDOR_ID_REALTEK
, 0x8169), 0, 0, 
RTL_CFG_0
 },

335 { 
PCI_VENDOR_ID_DLINK
, 0x4300,

336 
PCI_VENDOR_ID_DLINK
, 0x4b10, 0, 0, 
RTL_CFG_1
 },

337 { 
PCI_DEVICE
(
PCI_VENDOR_ID_DLINK
, 0x4300), 0, 0, 
RTL_CFG_0
 },

338 { 
PCI_DEVICE
(
PCI_VENDOR_ID_DLINK
, 0x4302), 0, 0, 
RTL_CFG_0
 },

339 { 
PCI_DEVICE
(
PCI_VENDOR_ID_AT
, 0xc107), 0, 0, 
RTL_CFG_0
 },

340 { 
PCI_DEVICE
(0x16ec, 0x0116), 0, 0, 
RTL_CFG_0
 },

341 { 
PCI_VENDOR_ID_LINKSYS
, 0x1032,

342 
PCI_ANY_ID
, 0x0024, 0, 0, 
RTL_CFG_0
 },

344 
PCI_ANY_ID
, 0x2410, 0, 0, 
RTL_CFG_2
 },

348 
MODULE_DEVICE_TABLE
(
pci
, 
πl8169_pci_tbl
);

350 
	grx_buf_sz
 = 16383;

351 
	gu£_dac
 = -1;

353 
u32
 
	mmsg_íabÀ
;

354 } 
	gdebug
 = { -1 };

356 
	eπl_ªgi°îs
 {

357 
	mMAC0
 = 0,

358 
	mMAC4
 = 4,

359 
	mMAR0
 = 8,

360 
	mCou¡îAddrLow
 = 0x10,

361 
	mCou¡îAddrHigh
 = 0x14,

362 
	mTxDescSèπAddrLow
 = 0x20,

363 
	mTxDescSèπAddrHigh
 = 0x24,

364 
	mTxHDescSèπAddrLow
 = 0x28,

365 
	mTxHDescSèπAddrHigh
 = 0x2c,

366 
	mFLASH
 = 0x30,

367 
	mERSR
 = 0x36,

368 
	mChùCmd
 = 0x37,

369 
	mTxPﬁl
 = 0x38,

370 
	mI¡rMask
 = 0x3c,

371 
	mI¡rSètus
 = 0x3e,

373 
	mTxC⁄fig
 = 0x40,

374 
	#TXCFG_AUTO_FIFO
 (1 << 7Ë

	)

375 
	#TXCFG_EMPTY
 (1 << 11Ë

	)

377 
	mRxC⁄fig
 = 0x44,

378 
	#RX128_INT_EN
 (1 << 15Ë

	)

379 
	#RX_MULTI_EN
 (1 << 14Ë

	)

380 
	#RXCFG_FIFO_SHIFT
 13

	)

382 
	#RX_FIFO_THRESH
 (7 << 
RXCFG_FIFO_SHIFT
)

	)

383 
	#RX_EARLY_OFF
 (1 << 11)

	)

384 
	#RXCFG_DMA_SHIFT
 8

	)

386 
	#RX_DMA_BURST
 (7 << 
RXCFG_DMA_SHIFT
)

	)

388 
	mRxMis£d
 = 0x4c,

389 
	mCfg9346
 = 0x50,

390 
	mC⁄fig0
 = 0x51,

391 
	mC⁄fig1
 = 0x52,

392 
	mC⁄fig2
 = 0x53,

393 
	#PME_SIGNAL
 (1 << 5Ë

	)

395 
	mC⁄fig3
 = 0x54,

396 
	mC⁄fig4
 = 0x55,

397 
	mC⁄fig5
 = 0x56,

398 
	mMu…iI¡r
 = 0x5c,

399 
	mPHYAR
 = 0x60,

400 
	mPHY°©us
 = 0x6c,

401 
	mRxMaxSize
 = 0xda,

402 
	mCPlusCmd
 = 0xe0,

403 
	mI¡rMôig©e
 = 0xe2,

404 
	mRxDescAddrLow
 = 0xe4,

405 
	mRxDescAddrHigh
 = 0xe8,

406 
	mE¨lyTxThªs
 = 0xec,

408 
	#NoE¨lyTx
 0x3‡

	)

410 
	mMaxTxPackëSize
 = 0xec,

412 
	#TxPackëMax
 (8064 >> 7)

	)

413 
	#E¨lySize
 0x27

	)

415 
	mFuncEvít
 = 0xf0,

416 
	mFuncEvítMask
 = 0xf4,

417 
	mFuncPª£tSèã
 = 0xf8,

418 
	mIBCR0
 = 0xf8,

419 
	mIBCR2
 = 0xf9,

420 
	mIBIMR0
 = 0xfa,

421 
	mIBISR0
 = 0xfb,

422 
	mFuncF‹˚Evít
 = 0xfc,

425 
	eπl8110_ªgi°îs
 {

426 
	mTBICSR
 = 0x64,

427 
	mTBI_ANAR
 = 0x68,

428 
	mTBI_LPAR
 = 0x6a,

431 
	eπl8168_8101_ªgi°îs
 {

432 
	mCSIDR
 = 0x64,

433 
	mCSIAR
 = 0x68,

434 
	#CSIAR_FLAG
 0x80000000

	)

435 
	#CSIAR_WRITE_CMD
 0x80000000

	)

436 
	#CSIAR_BYTE_ENABLE
 0x0f

	)

437 
	#CSIAR_BYTE_ENABLE_SHIFT
 12

	)

438 
	#CSIAR_ADDR_MASK
 0x0fff

	)

439 
	#CSIAR_FUNC_CARD
 0x00000000

	)

440 
	#CSIAR_FUNC_SDIO
 0x00010000

	)

441 
	#CSIAR_FUNC_NIC
 0x00020000

	)

442 
	#CSIAR_FUNC_NIC2
 0x00010000

	)

443 
	mPMCH
 = 0x6f,

444 
	mEPHYAR
 = 0x80,

445 
	#EPHYAR_FLAG
 0x80000000

	)

446 
	#EPHYAR_WRITE_CMD
 0x80000000

	)

447 
	#EPHYAR_REG_MASK
 0x1f

	)

448 
	#EPHYAR_REG_SHIFT
 16

	)

449 
	#EPHYAR_DATA_MASK
 0xffff

	)

450 
	mDLLPR
 = 0xd0,

451 
	#PFM_EN
 (1 << 6)

	)

452 
	#TX_10M_PS_EN
 (1 << 7)

	)

453 
	mDBG_REG
 = 0xd1,

454 
	#FIX_NAK_1
 (1 << 4)

	)

455 
	#FIX_NAK_2
 (1 << 3)

	)

456 
	mTWSI
 = 0xd2,

457 
	mMCU
 = 0xd3,

458 
	#NOW_IS_OOB
 (1 << 7)

	)

459 
	#TX_EMPTY
 (1 << 5)

	)

460 
	#RX_EMPTY
 (1 << 4)

	)

461 
	#RXTX_EMPTY
 (
TX_EMPTY
 | 
RX_EMPTY
)

	)

462 
	#EN_NDP
 (1 << 3)

	)

463 
	#EN_OOB_RESET
 (1 << 2)

	)

464 
	#LINK_LIST_RDY
 (1 << 1)

	)

465 
	mEFUSEAR
 = 0xdc,

466 
	#EFUSEAR_FLAG
 0x80000000

	)

467 
	#EFUSEAR_WRITE_CMD
 0x80000000

	)

468 
	#EFUSEAR_READ_CMD
 0x00000000

	)

469 
	#EFUSEAR_REG_MASK
 0x03ff

	)

470 
	#EFUSEAR_REG_SHIFT
 8

	)

471 
	#EFUSEAR_DATA_MASK
 0xff

	)

472 
	mMISC_1
 = 0xf2,

473 
	#PFM_D3COLD_EN
 (1 << 6)

	)

476 
	eπl8168_ªgi°îs
 {

477 
	mLED_FREQ
 = 0x1a,

478 
	mEEE_LED
 = 0x1b,

479 
	mERIDR
 = 0x70,

480 
	mERIAR
 = 0x74,

481 
	#ERIAR_FLAG
 0x80000000

	)

482 
	#ERIAR_WRITE_CMD
 0x80000000

	)

483 
	#ERIAR_READ_CMD
 0x00000000

	)

484 
	#ERIAR_ADDR_BYTE_ALIGN
 4

	)

485 
	#ERIAR_TYPE_SHIFT
 16

	)

486 
	#ERIAR_EXGMAC
 (0x00 << 
ERIAR_TYPE_SHIFT
)

	)

487 
	#ERIAR_MSIX
 (0x01 << 
ERIAR_TYPE_SHIFT
)

	)

488 
	#ERIAR_ASF
 (0x02 << 
ERIAR_TYPE_SHIFT
)

	)

489 
	#ERIAR_OOB
 (0x02 << 
ERIAR_TYPE_SHIFT
)

	)

490 
	#ERIAR_MASK_SHIFT
 12

	)

491 
	#ERIAR_MASK_0001
 (0x1 << 
ERIAR_MASK_SHIFT
)

	)

492 
	#ERIAR_MASK_0011
 (0x3 << 
ERIAR_MASK_SHIFT
)

	)

493 
	#ERIAR_MASK_0100
 (0x4 << 
ERIAR_MASK_SHIFT
)

	)

494 
	#ERIAR_MASK_0101
 (0x5 << 
ERIAR_MASK_SHIFT
)

	)

495 
	#ERIAR_MASK_1111
 (0x‡<< 
ERIAR_MASK_SHIFT
)

	)

496 
	mEPHY_RXER_NUM
 = 0x7c,

497 
	mOCPDR
 = 0xb0,

498 
	#OCPDR_WRITE_CMD
 0x80000000

	)

499 
	#OCPDR_READ_CMD
 0x00000000

	)

500 
	#OCPDR_REG_MASK
 0x7f

	)

501 
	#OCPDR_GPHY_REG_SHIFT
 16

	)

502 
	#OCPDR_DATA_MASK
 0xffff

	)

503 
	mOCPAR
 = 0xb4,

504 
	#OCPAR_FLAG
 0x80000000

	)

505 
	#OCPAR_GPHY_WRITE_CMD
 0x8000f060

	)

506 
	#OCPAR_GPHY_READ_CMD
 0x0000f060

	)

507 
	mGPHY_OCP
 = 0xb8,

508 
	mRDSAR1
 = 0xd0,

509 
	mMISC
 = 0xf0,

510 
	#TXPLA_RST
 (1 << 29)

	)

511 
	#DISABLE_LAN_EN
 (1 << 23Ë

	)

512 
	#PWM_EN
 (1 << 22)

	)

513 
	#RXDV_GATED_EN
 (1 << 19)

	)

514 
	#EARLY_TALLY_EN
 (1 << 16)

	)

517 
	eπl_ªgi°î_c⁄ã¡
 {

519 
	mSYSEº
 = 0x8000,

520 
	mPCSTimeout
 = 0x4000,

521 
	mSWI¡
 = 0x0100,

522 
	mTxDescU«vaû
 = 0x0080,

523 
	mRxFIFOOvî
 = 0x0040,

524 
	mLökChg
 = 0x0020,

525 
	mRxOvîÊow
 = 0x0010,

526 
	mTxEº
 = 0x0008,

527 
	mTxOK
 = 0x0004,

528 
	mRxEº
 = 0x0002,

529 
	mRxOK
 = 0x0001,

532 
	mRxBOVF
 = (1 << 24),

533 
	mRxFOVF
 = (1 << 23),

534 
	mRxRWT
 = (1 << 22),

535 
	mRxRES
 = (1 << 21),

536 
	mRxRUNT
 = (1 << 20),

537 
	mRxCRC
 = (1 << 19),

540 
	mSt›Req
 = 0x80,

541 
	mCmdRe£t
 = 0x10,

542 
	mCmdRxEnb
 = 0x08,

543 
	mCmdTxEnb
 = 0x04,

544 
	mRxBufEm±y
 = 0x01,

547 
	mHPQ
 = 0x80,

548 
	mNPQ
 = 0x40,

549 
	mFSWI¡
 = 0x01,

552 
	mCfg9346_Lock
 = 0x00,

553 
	mCfg9346_U∆ock
 = 0xc0,

556 
	mAc˚±Eº
 = 0x20,

557 
	mAc˚±Ru¡
 = 0x10,

558 
	mAc˚±Brﬂdˇ°
 = 0x08,

559 
	mAc˚±Mu…iˇ°
 = 0x04,

560 
	mAc˚±MyPhys
 = 0x02,

561 
	mAc˚±AŒPhys
 = 0x01,

562 
	#RX_CONFIG_ACCEPT_MASK
 0x3f

	)

565 
	mTxI¡îFømeG≠Shi·
 = 24,

566 
	mTxDMAShi·
 = 8,

569 
	mLEDS1
 = (1 << 7),

570 
	mLEDS0
 = (1 << 6),

571 
	mS≥ed_down
 = (1 << 4),

572 
	mMEMMAP
 = (1 << 3),

573 
	mIOMAP
 = (1 << 2),

574 
	mVPD
 = (1 << 1),

575 
	mPME«bÀ
 = (1 << 0),

578 
	mClkReqEn
 = (1 << 7),

579 
	mMSIE«bÀ
 = (1 << 5),

580 
	mPCI_Clock_66MHz
 = 0x01,

581 
	mPCI_Clock_33MHz
 = 0x00,

584 
	mMagicPackë
 = (1 << 5),

585 
	mLökUp
 = (1 << 4),

586 
	mJumbo_En0
 = (1 << 2),

587 
	mRdy_to_L23
 = (1 << 1),

588 
	mBóc⁄_í
 = (1 << 0),

591 
	mJumbo_En1
 = (1 << 1),

594 
	mBWF
 = (1 << 6),

595 
	mMWF
 = (1 << 5),

596 
	mUWF
 = (1 << 4),

597 
	mSpi_í
 = (1 << 3),

598 
	mL™Wake
 = (1 << 1),

599 
	mPMESètus
 = (1 << 0),

600 
	mASPM_í
 = (1 << 0),

603 
	mTBIRe£t
 = 0x80000000,

604 
	mTBILo›back
 = 0x40000000,

605 
	mTBINwE«bÀ
 = 0x20000000,

606 
	mTBINwRe°¨t
 = 0x10000000,

607 
	mTBILökOk
 = 0x02000000,

608 
	mTBINwCom∂ëe
 = 0x01000000,

611 
	mE«bÀBi°
 = (1 << 15),

612 
	mMac_dbgo_€
 = (1 << 14),

613 
	mN‹mÆ_mode
 = (1 << 13),

614 
	mF‹˚_hÆf_dup
 = (1 << 12),

615 
	mF‹˚_rxÊow_í
 = (1 << 11),

616 
	mF‹˚_txÊow_í
 = (1 << 10),

617 
	mCx∂_dbg_£l
 = (1 << 9),

618 
	mASF
 = (1 << 8),

619 
	mPktC¡rDißbÀ
 = (1 << 7),

620 
	mMac_dbgo_£l
 = 0x001c,

621 
	mRxVœn
 = (1 << 6),

622 
	mRxChkSum
 = (1 << 5),

623 
	mPCIDAC
 = (1 << 4),

624 
	mPCIMulRW
 = (1 << 3),

625 
	mINTT_0
 = 0x0000,

626 
	mINTT_1
 = 0x0001,

627 
	mINTT_2
 = 0x0002,

628 
	mINTT_3
 = 0x0003,

631 
	mTBI_E«bÀ
 = 0x80,

632 
	mTxFlowCål
 = 0x40,

633 
	mRxFlowCål
 = 0x20,

634 
	m_1000bpsF
 = 0x10,

635 
	m_100bps
 = 0x08,

636 
	m_10bps
 = 0x04,

637 
	mLökSètus
 = 0x02,

638 
	mFuŒDup
 = 0x01,

641 
	mTBILökOK
 = 0x02000000,

644 
	mCou¡îRe£t
 = 0x1,

647 
	mCou¡îDump
 = 0x8,

650 
	mMagicPackë_v2
 = (1 << 16),

653 
	eπl_desc_bô
 {

655 
	mDescOwn
 = (1 << 31),

656 
	mRögEnd
 = (1 << 30),

657 
	mFú°Føg
 = (1 << 29),

658 
	mLa°Føg
 = (1 << 28),

662 
	eπl_tx_desc_bô
 {

664 
	mTD_LSO
 = (1 << 27),

665 
	#TD_MSS_MAX
 0x07ffu

	)

668 
	mTxVœnTag
 = (1 << 17),

672 
	eπl_tx_desc_bô_0
 {

674 
	#TD0_MSS_SHIFT
 16

	)

675 
	mTD0_TCP_CS
 = (1 << 16),

676 
	mTD0_UDP_CS
 = (1 << 17),

677 
	mTD0_IP_CS
 = (1 << 18),

681 
	eπl_tx_desc_bô_1
 {

683 
	mTD1_GTSENV4
 = (1 << 26),

684 
	mTD1_GTSENV6
 = (1 << 25),

685 
	#GTTCPHO_SHIFT
 18

	)

686 
	#GTTCPHO_MAX
 0x7fU

	)

689 
	#TCPHO_SHIFT
 18

	)

690 
	#TCPHO_MAX
 0x3ffU

	)

691 
	#TD1_MSS_SHIFT
 18

	)

692 
	mTD1_IPv6_CS
 = (1 << 28),

693 
	mTD1_IPv4_CS
 = (1 << 29),

694 
	mTD1_TCP_CS
 = (1 << 30),

695 
	mTD1_UDP_CS
 = (1 << 31),

698 
	eπl_rx_desc_bô
 {

700 
	mPID1
 = (1 << 18),

701 
	mPID0
 = (1 << 17),

703 
	#RxPrŸoUDP
 (
PID1
)

	)

704 
	#RxPrŸoTCP
 (
PID0
)

	)

705 
	#RxPrŸoIP
 (
PID1
 | 
PID0
)

	)

706 
	#RxPrŸoMask
 
RxPrŸoIP


	)

708 
	mIPFaû
 = (1 << 16),

709 
	mUDPFaû
 = (1 << 15),

710 
	mTCPFaû
 = (1 << 14),

711 
	mRxVœnTag
 = (1 << 16),

714 
	#RsvdMask
 0x3fffc000

	)

716 
	sTxDesc
 {

717 
__À32
 
	m›ts1
;

718 
__À32
 
	m›ts2
;

719 
__À64
 
	maddr
;

722 
	sRxDesc
 {

723 
__À32
 
	m›ts1
;

724 
__À32
 
	m›ts2
;

725 
__À64
 
	maddr
;

728 
	srög_öfo
 {

729 
sk_buff
 *
	mskb
;

730 
u32
 
	mÀn
;

731 
u8
 
	m__∑d
[(*Ë- (
u32
)];

734 
	e„©uªs
 {

735 
	mRTL_FEATURE_WOL
 = (1 << 0),

736 
	mRTL_FEATURE_MSI
 = (1 << 1),

737 
	mRTL_FEATURE_GMII
 = (1 << 2),

740 
	sπl8169_cou¡îs
 {

741 
__À64
 
	mtx_∑ckës
;

742 
__À64
 
	mrx_∑ckës
;

743 
__À64
 
	mtx_îr‹s
;

744 
__À32
 
	mrx_îr‹s
;

745 
__À16
 
	mrx_mis£d
;

746 
__À16
 
	mÆign_îr‹s
;

747 
__À32
 
	mtx_⁄e_cﬁlisi⁄
;

748 
__À32
 
	mtx_mu…i_cﬁlisi⁄
;

749 
__À64
 
	mrx_uniˇ°
;

750 
__À64
 
	mrx_brﬂdˇ°
;

751 
__À32
 
	mrx_mu…iˇ°
;

752 
__À16
 
	mtx_ab‹ãd
;

753 
__À16
 
	mtx_undîun
;

756 
	sπl8169_tc_off£ts
 {

757 
boﬁ
 
	möôed
;

758 
__À64
 
	mtx_îr‹s
;

759 
__À32
 
	mtx_mu…i_cﬁlisi⁄
;

760 
__À16
 
	mtx_ab‹ãd
;

763 
	eπl_Êag
 {

764 
	mRTL_FLAG_TASK_ENABLED
,

765 
	mRTL_FLAG_TASK_SLOW_PENDING
,

766 
	mRTL_FLAG_TASK_RESET_PENDING
,

767 
	mRTL_FLAG_TASK_PHY_PENDING
,

768 
	mRTL_FLAG_MAX


771 
	sπl8169_°©s
 {

772 
u64
 
	m∑ckës
;

773 
u64
 
	mbyãs
;

774 
u64_°©s_sync
 
	msyn˝
;

777 
	sπl8169_¥iv©e
 {

778 
__iomem
 *
	mmmio_addr
;

779 
pci_dev
 *
	mpci_dev
;

780 
√t_devi˚
 *
	mdev
;

781 
«pi_°ru˘
 
	m«pi
;

782 
u32
 
	mmsg_íabÀ
;

783 
u16
 
	mtxd_vîsi⁄
;

784 
u16
 
	mmac_vîsi⁄
;

785 
u32
 
	mcur_rx
;

786 
u32
 
	mcur_tx
;

787 
u32
 
	mdúty_tx
;

788 
πl8169_°©s
 
	mrx_°©s
;

789 
πl8169_°©s
 
	mtx_°©s
;

790 
TxDesc
 *
	mTxDescAºay
;

791 
RxDesc
 *
	mRxDescAºay
;

792 
dma_addr_t
 
	mTxPhyAddr
;

793 
dma_addr_t
 
	mRxPhyAddr
;

794 *
	mRx_d©abuff
[
NUM_RX_DESC
];

795 
rög_öfo
 
	mtx_skb
[
NUM_TX_DESC
];

796 
timî_li°
 
	mtimî
;

797 
u16
 
	m˝_cmd
;

799 
u16
 
	mevít_¶ow
;

801 
	smdio_›s
 {

802 (*
	mwrôe
)(
	mπl8169_¥iv©e
 *, , );

803 (*
	mªad
)(
	mπl8169_¥iv©e
 *, );

804 } 
	mmdio_›s
;

806 
	s∂l_powî_›s
 {

807 (*
	mdown
)(
	mπl8169_¥iv©e
 *);

808 (*
	mup
)(
	mπl8169_¥iv©e
 *);

809 } 
	m∂l_powî_›s
;

811 
	sjumbo_›s
 {

812 (*
	míabÀ
)(
	mπl8169_¥iv©e
 *);

813 (*
	mdißbÀ
)(
	mπl8169_¥iv©e
 *);

814 } 
	mjumbo_›s
;

816 
	scsi_›s
 {

817 (*
	mwrôe
)(
	mπl8169_¥iv©e
 *, , );

818 
u32
 (*
ªad
)(
	mπl8169_¥iv©e
 *, );

819 } 
	mcsi_›s
;

821 (*
	m£t_•ìd
)(
	m√t_devi˚
 *, 
u8
 
	m™eg
, 
u16
 
	m•
, u8 
	mdpx
, 
u32
 
	madv
);

822 (*
	mgë_£âögs
)(
	m√t_devi˚
 *, 
	mëhtoﬁ_cmd
 *);

823 (*
	mphy_ª£t_íabÀ
)(
πl8169_¥iv©e
 *
	mç
);

824 (*
	mhw_°¨t
)(
	m√t_devi˚
 *);

825 (*
	mphy_ª£t_≥ndög
)(
πl8169_¥iv©e
 *
	mç
);

826 (*
	mlök_ok
)(
	m__iomem
 *);

827 (*
	mdo_io˘l
)(
πl8169_¥iv©e
 *
	mç
, 
mii_io˘l_d©a
 *
	md©a
, 
	mcmd
);

828 
boﬁ
 (*
tso_csum
)(
	mπl8169_¥iv©e
 *, 
	msk_buff
 *, 
	mu32
 *);

831 
DECLARE_BITMAP
(
Êags
, 
RTL_FLAG_MAX
);

832 
muãx
 
	mmuãx
;

833 
w‹k_°ru˘
 
	mw‹k
;

834 } 
	mwk
;

836 
	m„©uªs
;

838 
mii_if_öfo
 
	mmii
;

839 
dma_addr_t
 
	mcou¡îs_phys_addr
;

840 
πl8169_cou¡îs
 *
	mcou¡îs
;

841 
πl8169_tc_off£ts
 
	mtc_off£t
;

842 
u32
 
	mßved_wﬁ›ts
;

843 
u32
 
	m›ts1_mask
;

845 
	sπl_fw
 {

846 c⁄° 
fúmw¨e
 *
	mfw
;

848 
	#RTL_VER_SIZE
 32

	)

850 
	mvîsi⁄
[
RTL_VER_SIZE
];

852 
	sπl_fw_phy_a˘i⁄
 {

853 
__À32
 *
	mcode
;

854 
size_t
 
	msize
;

855 } 
	mphy_a˘i⁄
;

856 } *
	mπl_fw
;

857 
	#RTL_FIRMWARE_UNKNOWN
 
	`ERR_PTR
(-
EAGAIN
)

	)

859 
u32
 
	mo˝_ba£
;

861 
bpf_¥og
 
__rcu
 *
	mxdp_¥og
;

862 
	sπl_xdp_cou¡îs
 {

863 
u64
 
	m£t
;

864 
u64
 
	m∑ss
;

865 
u64
 
	mdr›
;

866 
u64
 
	mtx
;

867 
u64
 
	mab‹ãd
;

868 
u64
 
	munknown
;

869 } 
	mxdp_cou¡îs
;

872 
MODULE_AUTHOR
("RealtekándÅhe LinuxÑ8169 crew <netdev@vger.kernel.org>");

873 
MODULE_DESCRIPTION
("RealTek RTL-8169 Gigabit Ethernet driver");

874 
moduÀ_∑øm
(
u£_dac
, , 0);

875 
MODULE_PARM_DESC
(
u£_dac
, "Enable PCI DAC. Unsafe on 32 bit PCI slot.");

876 
moduÀ_∑øm_«med
(
debug
, debug.
msg_íabÀ
, , 0);

877 
MODULE_PARM_DESC
(
debug
, "Debug verbosityÜevel (0=none, ..., 16=all)");

878 
MODULE_LICENSE
("GPL");

879 
MODULE_VERSION
(
RTL8169_VERSION
);

880 
MODULE_FIRMWARE
(
FIRMWARE_8168D_1
);

881 
MODULE_FIRMWARE
(
FIRMWARE_8168D_2
);

882 
MODULE_FIRMWARE
(
FIRMWARE_8168E_1
);

883 
MODULE_FIRMWARE
(
FIRMWARE_8168E_2
);

884 
MODULE_FIRMWARE
(
FIRMWARE_8168E_3
);

885 
MODULE_FIRMWARE
(
FIRMWARE_8105E_1
);

886 
MODULE_FIRMWARE
(
FIRMWARE_8168F_1
);

887 
MODULE_FIRMWARE
(
FIRMWARE_8168F_2
);

888 
MODULE_FIRMWARE
(
FIRMWARE_8402_1
);

889 
MODULE_FIRMWARE
(
FIRMWARE_8411_1
);

890 
MODULE_FIRMWARE
(
FIRMWARE_8411_2
);

891 
MODULE_FIRMWARE
(
FIRMWARE_8106E_1
);

892 
MODULE_FIRMWARE
(
FIRMWARE_8106E_2
);

893 
MODULE_FIRMWARE
(
FIRMWARE_8168G_2
);

894 
MODULE_FIRMWARE
(
FIRMWARE_8168G_3
);

895 
MODULE_FIRMWARE
(
FIRMWARE_8168H_1
);

896 
MODULE_FIRMWARE
(
FIRMWARE_8168H_2
);

897 
MODULE_FIRMWARE
(
FIRMWARE_8107E_1
);

898 
MODULE_FIRMWARE
(
FIRMWARE_8107E_2
);

900 
	$πl_lock_w‹k
(
πl8169_¥iv©e
 *
ç
)

902 
	`muãx_lock
(&
ç
->
wk
.
muãx
);

903 
	}
}

905 
	$πl_u∆ock_w‹k
(
πl8169_¥iv©e
 *
ç
)

907 
	`muãx_u∆ock
(&
ç
->
wk
.
muãx
);

908 
	}
}

911 
	#πl_w‹k_lock_hñd
(
ç
Ë
	`lockdï_is_hñd
(&ç->
wk
.
muãx
)

	)

913 
	$πl_tx_≥rf‹m™˚_twók
(
pci_dev
 *
pdev
, 
u16
 
f‹˚
)

915 
	`pcõ_ˇ∑bûôy_˛ór_™d_£t_w‹d
(
pdev
, 
PCI_EXP_DEVCTL
,

916 
PCI_EXP_DEVCTL_READRQ
, 
f‹˚
);

917 
	}
}

919 
	sπl_c⁄d
 {

920 
boﬁ
 (*
check
)(
	mπl8169_¥iv©e
 *);

921 c⁄° *
	mmsg
;

924 
	$πl_udñay
(
d
)

926 
	`udñay
(
d
);

927 
	}
}

929 
boﬁ
 
	$πl_lo›_waô
(
πl8169_¥iv©e
 *
ç
, c⁄° 
πl_c⁄d
 *
c
,

930 (*
dñay
)(), 
d
, 
n
,

931 
boﬁ
 
high
)

933 
i
;

935 
i
 = 0; i < 
n
; i++) {

936 
	`dñay
(
d
);

937 i‡(
c
->
	`check
(
ç
Ë=
high
)

938  
åue
;

940 
	`√tif_îr
(
ç
, 
drv
,Åp->
dev
, "%s == %d (loop: %d, delay: %d).\n",

941 
c
->
msg
, !
high
, 
n
, 
d
);

942  
Ál£
;

943 
	}
}

945 
boﬁ
 
	$πl_udñay_lo›_waô_high
(
πl8169_¥iv©e
 *
ç
,

946 c⁄° 
πl_c⁄d
 *
c
,

947 
d
, 
n
)

949  
	`πl_lo›_waô
(
ç
, 
c
, 
πl_udñay
, 
d
, 
n
, 
åue
);

950 
	}
}

952 
boﬁ
 
	$πl_udñay_lo›_waô_low
(
πl8169_¥iv©e
 *
ç
,

953 c⁄° 
πl_c⁄d
 *
c
,

954 
d
, 
n
)

956  
	`πl_lo›_waô
(
ç
, 
c
, 
πl_udñay
, 
d
, 
n
, 
Ál£
);

957 
	}
}

959 
boﬁ
 
	$πl_m¶ìp_lo›_waô_high
(
πl8169_¥iv©e
 *
ç
,

960 c⁄° 
πl_c⁄d
 *
c
,

961 
d
, 
n
)

963  
	`πl_lo›_waô
(
ç
, 
c
, 
m¶ìp
, 
d
, 
n
, 
åue
);

964 
	}
}

966 
boﬁ
 
	$πl_m¶ìp_lo›_waô_low
(
πl8169_¥iv©e
 *
ç
,

967 c⁄° 
πl_c⁄d
 *
c
,

968 
d
, 
n
)

970  
	`πl_lo›_waô
(
ç
, 
c
, 
m¶ìp
, 
d
, 
n
, 
Ál£
);

971 
	}
}

973 
	#DECLARE_RTL_COND
(
«me
) \

974 
boﬁ
 
«me
 ## 
	`_check
(
πl8169_¥iv©e
 *); \

976 c⁄° 
πl_c⁄d
 
«me
 = { \

977 .
check
 = 
«me
 ## 
_check
, \

978 .
msg
 = #name \

981 
boﬁ
 
«me
 ## 
	`_check
(
πl8169_¥iv©e
 *
ç
)

	)

983 
boﬁ
 
	$πl_o˝_ªg_Áûuª
(
πl8169_¥iv©e
 *
ç
, 
u32
 
ªg
)

985 i‡(
ªg
 & 0xffff0001) {

986 
	`√tif_îr
(
ç
, 
drv
,Åp->
dev
, "InvÆid o˝Ñeg %x!\n", 
ªg
);

987  
åue
;

989  
Ál£
;

990 
	}
}

992 
	$DECLARE_RTL_COND
(
πl_o˝_gphy_c⁄d
)

994 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

996  
	`RTL_R32
(
GPHY_OCP
Ë& 
OCPAR_FLAG
;

997 
	}
}

999 
	$r8168_phy_o˝_wrôe
(
πl8169_¥iv©e
 *
ç
, 
u32
 
ªg
, u32 
d©a
)

1001 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

1003 i‡(
	`πl_o˝_ªg_Áûuª
(
ç
, 
ªg
))

1006 
	`RTL_W32
(
GPHY_OCP
, 
OCPAR_FLAG
 | (
ªg
 << 15Ë| 
d©a
);

1008 
	`πl_udñay_lo›_waô_low
(
ç
, &
πl_o˝_gphy_c⁄d
, 25, 10);

1009 
	}
}

1011 
u16
 
	$r8168_phy_o˝_ªad
(
πl8169_¥iv©e
 *
ç
, 
u32
 
ªg
)

1013 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

1015 i‡(
	`πl_o˝_ªg_Áûuª
(
ç
, 
ªg
))

1018 
	`RTL_W32
(
GPHY_OCP
, 
ªg
 << 15);

1020  
	`πl_udñay_lo›_waô_high
(
ç
, &
πl_o˝_gphy_c⁄d
, 25, 10) ?

1021 (
	`RTL_R32
(
GPHY_OCP
) & 0xffff) : ~0;

1022 
	}
}

1024 
	$r8168_mac_o˝_wrôe
(
πl8169_¥iv©e
 *
ç
, 
u32
 
ªg
, u32 
d©a
)

1026 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

1028 i‡(
	`πl_o˝_ªg_Áûuª
(
ç
, 
ªg
))

1031 
	`RTL_W32
(
OCPDR
, 
OCPAR_FLAG
 | (
ªg
 << 15Ë| 
d©a
);

1032 
	}
}

1034 
u16
 
	$r8168_mac_o˝_ªad
(
πl8169_¥iv©e
 *
ç
, 
u32
 
ªg
)

1036 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

1038 i‡(
	`πl_o˝_ªg_Áûuª
(
ç
, 
ªg
))

1041 
	`RTL_W32
(
OCPDR
, 
ªg
 << 15);

1043  
	`RTL_R32
(
OCPDR
);

1044 
	}
}

1046 
	#OCP_STD_PHY_BASE
 0xa400

	)

1048 
	$r8168g_mdio_wrôe
(
πl8169_¥iv©e
 *
ç
, 
ªg
, 
vÆue
)

1050 i‡(
ªg
 == 0x1f) {

1051 
ç
->
o˝_ba£
 = 
vÆue
 ? vÆuê<< 4 : 
OCP_STD_PHY_BASE
;

1055 i‡(
ç
->
o˝_ba£
 !
OCP_STD_PHY_BASE
)

1056 
ªg
 -= 0x10;

1058 
	`r8168_phy_o˝_wrôe
(
ç
,Åp->
o˝_ba£
 + 
ªg
 * 2, 
vÆue
);

1059 
	}
}

1061 
	$r8168g_mdio_ªad
(
πl8169_¥iv©e
 *
ç
, 
ªg
)

1063 i‡(
ç
->
o˝_ba£
 !
OCP_STD_PHY_BASE
)

1064 
ªg
 -= 0x10;

1066  
	`r8168_phy_o˝_ªad
(
ç
,Åp->
o˝_ba£
 + 
ªg
 * 2);

1067 
	}
}

1069 
	$mac_mcu_wrôe
(
πl8169_¥iv©e
 *
ç
, 
ªg
, 
vÆue
)

1071 i‡(
ªg
 == 0x1f) {

1072 
ç
->
o˝_ba£
 = 
vÆue
 << 4;

1076 
	`r8168_mac_o˝_wrôe
(
ç
,Åp->
o˝_ba£
 + 
ªg
, 
vÆue
);

1077 
	}
}

1079 
	$mac_mcu_ªad
(
πl8169_¥iv©e
 *
ç
, 
ªg
)

1081  
	`r8168_mac_o˝_ªad
(
ç
,Åp->
o˝_ba£
 + 
ªg
);

1082 
	}
}

1084 
	$DECLARE_RTL_COND
(
πl_phy¨_c⁄d
)

1086 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

1088  
	`RTL_R32
(
PHYAR
) & 0x80000000;

1089 
	}
}

1091 
	$r8169_mdio_wrôe
(
πl8169_¥iv©e
 *
ç
, 
ªg
, 
vÆue
)

1093 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

1095 
	`RTL_W32
(
PHYAR
, 0x80000000 | (
ªg
 & 0x1fË<< 16 | (
vÆue
 & 0xffff));

1097 
	`πl_udñay_lo›_waô_low
(
ç
, &
πl_phy¨_c⁄d
, 25, 20);

1102 
	`udñay
(20);

1103 
	}
}

1105 
	$r8169_mdio_ªad
(
πl8169_¥iv©e
 *
ç
, 
ªg
)

1107 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

1108 
vÆue
;

1110 
	`RTL_W32
(
PHYAR
, 0x0 | (
ªg
 & 0x1f) << 16);

1112 
vÆue
 = 
	`πl_udñay_lo›_waô_high
(
ç
, &
πl_phy¨_c⁄d
, 25, 20) ?

1113 
	`RTL_R32
(
PHYAR
) & 0xffff : ~0;

1119 
	`udñay
(20);

1121  
vÆue
;

1122 
	}
}

1124 
	$DECLARE_RTL_COND
(
πl_o˝¨_c⁄d
)

1126 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

1128  
	`RTL_R32
(
OCPAR
Ë& 
OCPAR_FLAG
;

1129 
	}
}

1131 
	$r8168dp_1_mdio_ac˚ss
(
πl8169_¥iv©e
 *
ç
, 
ªg
, 
u32
 
d©a
)

1133 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

1135 
	`RTL_W32
(
OCPDR
, 
d©a
 | ((
ªg
 & 
OCPDR_REG_MASK
Ë<< 
OCPDR_GPHY_REG_SHIFT
));

1136 
	`RTL_W32
(
OCPAR
, 
OCPAR_GPHY_WRITE_CMD
);

1137 
	`RTL_W32
(
EPHY_RXER_NUM
, 0);

1139 
	`πl_udñay_lo›_waô_low
(
ç
, &
πl_o˝¨_c⁄d
, 1000, 100);

1140 
	}
}

1142 
	$r8168dp_1_mdio_wrôe
(
πl8169_¥iv©e
 *
ç
, 
ªg
, 
vÆue
)

1144 
	`r8168dp_1_mdio_ac˚ss
(
ç
, 
ªg
,

1145 
OCPDR_WRITE_CMD
 | (
vÆue
 & 
OCPDR_DATA_MASK
));

1146 
	}
}

1148 
	$r8168dp_1_mdio_ªad
(
πl8169_¥iv©e
 *
ç
, 
ªg
)

1150 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

1152 
	`r8168dp_1_mdio_ac˚ss
(
ç
, 
ªg
, 
OCPDR_READ_CMD
);

1154 
	`mdñay
(1);

1155 
	`RTL_W32
(
OCPAR
, 
OCPAR_GPHY_READ_CMD
);

1156 
	`RTL_W32
(
EPHY_RXER_NUM
, 0);

1158  
	`πl_udñay_lo›_waô_high
(
ç
, &
πl_o˝¨_c⁄d
, 1000, 100) ?

1159 
	`RTL_R32
(
OCPDR
Ë& 
OCPDR_DATA_MASK
 : ~0;

1160 
	}
}

1162 
	#R8168DP_1_MDIO_ACCESS_BIT
 0x00020000

	)

1164 
	$r8168dp_2_mdio_°¨t
(
__iomem
 *
iﬂddr
)

1166 
	`RTL_W32
(0xd0, 
	`RTL_R32
(0xd0Ë& ~
R8168DP_1_MDIO_ACCESS_BIT
);

1167 
	}
}

1169 
	$r8168dp_2_mdio_°›
(
__iomem
 *
iﬂddr
)

1171 
	`RTL_W32
(0xd0, 
	`RTL_R32
(0xd0Ë| 
R8168DP_1_MDIO_ACCESS_BIT
);

1172 
	}
}

1174 
	$r8168dp_2_mdio_wrôe
(
πl8169_¥iv©e
 *
ç
, 
ªg
, 
vÆue
)

1176 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

1178 
	`r8168dp_2_mdio_°¨t
(
iﬂddr
);

1180 
	`r8169_mdio_wrôe
(
ç
, 
ªg
, 
vÆue
);

1182 
	`r8168dp_2_mdio_°›
(
iﬂddr
);

1183 
	}
}

1185 
	$r8168dp_2_mdio_ªad
(
πl8169_¥iv©e
 *
ç
, 
ªg
)

1187 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

1188 
vÆue
;

1190 
	`r8168dp_2_mdio_°¨t
(
iﬂddr
);

1192 
vÆue
 = 
	`r8169_mdio_ªad
(
ç
, 
ªg
);

1194 
	`r8168dp_2_mdio_°›
(
iﬂddr
);

1196  
vÆue
;

1197 
	}
}

1199 
	$πl_wrôïhy
(
πl8169_¥iv©e
 *
ç
, 
loˇti⁄
, 
u32
 
vÆ
)

1201 
ç
->
mdio_›s
.
	`wrôe
—p, 
loˇti⁄
, 
vÆ
);

1202 
	}
}

1204 
	$πl_ªadphy
(
πl8169_¥iv©e
 *
ç
, 
loˇti⁄
)

1206  
ç
->
mdio_›s
.
	`ªad
—p, 
loˇti⁄
);

1207 
	}
}

1209 
	$πl_∑tchphy
(
πl8169_¥iv©e
 *
ç
, 
ªg_addr
, 
vÆue
)

1211 
	`πl_wrôïhy
(
ç
, 
ªg_addr
, 
	`πl_ªadphy
—p,Ñeg_addrË| 
vÆue
);

1212 
	}
}

1214 
	$πl_w0w1_phy
(
πl8169_¥iv©e
 *
ç
, 
ªg_addr
, 
p
, 
m
)

1216 
vÆ
;

1218 
vÆ
 = 
	`πl_ªadphy
(
ç
, 
ªg_addr
);

1219 
	`πl_wrôïhy
(
ç
, 
ªg_addr
, (
vÆ
 & ~
m
Ë| 
p
);

1220 
	}
}

1222 
	$πl_mdio_wrôe
(
√t_devi˚
 *
dev
, 
phy_id
, 
loˇti⁄
,

1223 
vÆ
)

1225 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

1227 
	`πl_wrôïhy
(
ç
, 
loˇti⁄
, 
vÆ
);

1228 
	}
}

1230 
	$πl_mdio_ªad
(
√t_devi˚
 *
dev
, 
phy_id
, 
loˇti⁄
)

1232 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

1234  
	`πl_ªadphy
(
ç
, 
loˇti⁄
);

1235 
	}
}

1237 
	$DECLARE_RTL_COND
(
πl_ïhy¨_c⁄d
)

1239 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

1241  
	`RTL_R32
(
EPHYAR
Ë& 
EPHYAR_FLAG
;

1242 
	}
}

1244 
	$πl_ïhy_wrôe
(
πl8169_¥iv©e
 *
ç
, 
ªg_addr
, 
vÆue
)

1246 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

1248 
	`RTL_W32
(
EPHYAR
, 
EPHYAR_WRITE_CMD
 | (
vÆue
 & 
EPHYAR_DATA_MASK
) |

1249 (
ªg_addr
 & 
EPHYAR_REG_MASK
Ë<< 
EPHYAR_REG_SHIFT
);

1251 
	`πl_udñay_lo›_waô_low
(
ç
, &
πl_ïhy¨_c⁄d
, 10, 100);

1253 
	`udñay
(10);

1254 
	}
}

1256 
u16
 
	$πl_ïhy_ªad
(
πl8169_¥iv©e
 *
ç
, 
ªg_addr
)

1258 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

1260 
	`RTL_W32
(
EPHYAR
, (
ªg_addr
 & 
EPHYAR_REG_MASK
Ë<< 
EPHYAR_REG_SHIFT
);

1262  
	`πl_udñay_lo›_waô_high
(
ç
, &
πl_ïhy¨_c⁄d
, 10, 100) ?

1263 
	`RTL_R32
(
EPHYAR
Ë& 
EPHYAR_DATA_MASK
 : ~0;

1264 
	}
}

1266 
	$DECLARE_RTL_COND
(
πl_îür_c⁄d
)

1268 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

1270  
	`RTL_R32
(
ERIAR
Ë& 
ERIAR_FLAG
;

1271 
	}
}

1273 
	$πl_îi_wrôe
(
πl8169_¥iv©e
 *
ç
, 
addr
, 
u32
 
mask
,

1274 
u32
 
vÆ
, 
ty≥
)

1276 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

1278 
	`BUG_ON
((
addr
 & 3Ë|| (
mask
 == 0));

1279 
	`RTL_W32
(
ERIDR
, 
vÆ
);

1280 
	`RTL_W32
(
ERIAR
, 
ERIAR_WRITE_CMD
 | 
ty≥
 | 
mask
 | 
addr
);

1282 
	`πl_udñay_lo›_waô_low
(
ç
, &
πl_îür_c⁄d
, 100, 100);

1283 
	}
}

1285 
u32
 
	$πl_îi_ªad
(
πl8169_¥iv©e
 *
ç
, 
addr
, 
ty≥
)

1287 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

1289 
	`RTL_W32
(
ERIAR
, 
ERIAR_READ_CMD
 | 
ty≥
 | 
ERIAR_MASK_1111
 | 
addr
);

1291  
	`πl_udñay_lo›_waô_high
(
ç
, &
πl_îür_c⁄d
, 100, 100) ?

1292 
	`RTL_R32
(
ERIDR
) : ~0;

1293 
	}
}

1295 
	$πl_w0w1_îi
(
πl8169_¥iv©e
 *
ç
, 
addr
, 
u32
 
mask
, u32 
p
,

1296 
u32
 
m
, 
ty≥
)

1298 
u32
 
vÆ
;

1300 
vÆ
 = 
	`πl_îi_ªad
(
ç
, 
addr
, 
ty≥
);

1301 
	`πl_îi_wrôe
(
ç
, 
addr
, 
mask
, (
vÆ
 & ~
m
Ë| 
p
, 
ty≥
);

1302 
	}
}

1304 
u32
 
	$r8168dp_o˝_ªad
(
πl8169_¥iv©e
 *
ç
, 
u8
 
mask
, 
u16
 
ªg
)

1306 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

1308 
	`RTL_W32
(
OCPAR
, ((
u32
)
mask
 & 0x0fË<< 12 | (
ªg
 & 0x0fff));

1309  
	`πl_udñay_lo›_waô_high
(
ç
, &
πl_o˝¨_c⁄d
, 100, 20) ?

1310 
	`RTL_R32
(
OCPDR
) : ~0;

1311 
	}
}

1313 
u32
 
	$r8168ï_o˝_ªad
(
πl8169_¥iv©e
 *
ç
, 
u8
 
mask
, 
u16
 
ªg
)

1315  
	`πl_îi_ªad
(
ç
, 
ªg
, 
ERIAR_OOB
);

1316 
	}
}

1318 
u32
 
	$o˝_ªad
(
πl8169_¥iv©e
 *
ç
, 
u8
 
mask
, 
u16
 
ªg
)

1320 
ç
->
mac_vîsi⁄
) {

1321 
RTL_GIGA_MAC_VER_27
:

1322 
RTL_GIGA_MAC_VER_28
:

1323 
RTL_GIGA_MAC_VER_31
:

1324  
	`r8168dp_o˝_ªad
(
ç
, 
mask
, 
ªg
);

1325 
RTL_GIGA_MAC_VER_49
:

1326 
RTL_GIGA_MAC_VER_50
:

1327 
RTL_GIGA_MAC_VER_51
:

1328  
	`r8168ï_o˝_ªad
(
ç
, 
mask
, 
ªg
);

1330 
	`BUG
();

1333 
	}
}

1335 
	$r8168dp_o˝_wrôe
(
πl8169_¥iv©e
 *
ç
, 
u8
 
mask
, 
u16
 
ªg
,

1336 
u32
 
d©a
)

1338 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

1340 
	`RTL_W32
(
OCPDR
, 
d©a
);

1341 
	`RTL_W32
(
OCPAR
, 
OCPAR_FLAG
 | ((
u32
)
mask
 & 0x0fË<< 12 | (
ªg
 & 0x0fff));

1342 
	`πl_udñay_lo›_waô_low
(
ç
, &
πl_o˝¨_c⁄d
, 100, 20);

1343 
	}
}

1345 
	$r8168ï_o˝_wrôe
(
πl8169_¥iv©e
 *
ç
, 
u8
 
mask
, 
u16
 
ªg
,

1346 
u32
 
d©a
)

1348 
	`πl_îi_wrôe
(
ç
, 
ªg
, ((
u32
)
mask
 & 0x0fË<< 
ERIAR_MASK_SHIFT
,

1349 
d©a
, 
ERIAR_OOB
);

1350 
	}
}

1352 
	$o˝_wrôe
(
πl8169_¥iv©e
 *
ç
, 
u8
 
mask
, 
u16
 
ªg
, 
u32
 
d©a
)

1354 
ç
->
mac_vîsi⁄
) {

1355 
RTL_GIGA_MAC_VER_27
:

1356 
RTL_GIGA_MAC_VER_28
:

1357 
RTL_GIGA_MAC_VER_31
:

1358 
	`r8168dp_o˝_wrôe
(
ç
, 
mask
, 
ªg
, 
d©a
);

1360 
RTL_GIGA_MAC_VER_49
:

1361 
RTL_GIGA_MAC_VER_50
:

1362 
RTL_GIGA_MAC_VER_51
:

1363 
	`r8168ï_o˝_wrôe
(
ç
, 
mask
, 
ªg
, 
d©a
);

1366 
	`BUG
();

1369 
	}
}

1371 
	$πl8168_oob_nŸify
(
πl8169_¥iv©e
 *
ç
, 
u8
 
cmd
)

1373 
	`πl_îi_wrôe
(
ç
, 0xe8, 
ERIAR_MASK_0001
, 
cmd
, 
ERIAR_EXGMAC
);

1375 
	`o˝_wrôe
(
ç
, 0x1, 0x30, 0x00000001);

1376 
	}
}

1378 
	#OOB_CMD_RESET
 0x00

	)

1379 
	#OOB_CMD_DRIVER_START
 0x05

	)

1380 
	#OOB_CMD_DRIVER_STOP
 0x06

	)

1382 
u16
 
	$πl8168_gë_o˝_ªg
(
πl8169_¥iv©e
 *
ç
)

1384  (
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_31
) ? 0xb8 : 0x10;

1385 
	}
}

1387 
	$DECLARE_RTL_COND
(
πl_o˝_ªad_c⁄d
)

1389 
u16
 
ªg
;

1391 
ªg
 = 
	`πl8168_gë_o˝_ªg
(
ç
);

1393  
	`o˝_ªad
(
ç
, 0x0f, 
ªg
) & 0x00000800;

1394 
	}
}

1396 
	$DECLARE_RTL_COND
(
πl_ï_o˝_ªad_c⁄d
)

1398  
	`o˝_ªad
(
ç
, 0x0f, 0x124) & 0x00000001;

1399 
	}
}

1401 
	$DECLARE_RTL_COND
(
πl_o˝_tx_c⁄d
)

1403 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

1405  
	`RTL_R8
(
IBISR0
) & 0x02;

1406 
	}
}

1408 
	$πl8168ï_°›_cmac
(
πl8169_¥iv©e
 *
ç
)

1410 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

1412 
	`RTL_W8
(
IBCR2
, 
	`RTL_R8
(IBCR2) & ~0x01);

1413 
	`πl_m¶ìp_lo›_waô_low
(
ç
, &
πl_o˝_tx_c⁄d
, 50, 2000);

1414 
	`RTL_W8
(
IBISR0
, 
	`RTL_R8
(IBISR0) | 0x20);

1415 
	`RTL_W8
(
IBCR0
, 
	`RTL_R8
(IBCR0) & ~0x01);

1416 
	}
}

1418 
	$πl8168dp_drivî_°¨t
(
πl8169_¥iv©e
 *
ç
)

1420 
	`πl8168_oob_nŸify
(
ç
, 
OOB_CMD_DRIVER_START
);

1421 
	`πl_m¶ìp_lo›_waô_high
(
ç
, &
πl_o˝_ªad_c⁄d
, 10, 10);

1422 
	}
}

1424 
	$πl8168ï_drivî_°¨t
(
πl8169_¥iv©e
 *
ç
)

1426 
	`o˝_wrôe
(
ç
, 0x01, 0x180, 
OOB_CMD_DRIVER_START
);

1427 
	`o˝_wrôe
(
ç
, 0x01, 0x30, 
	`o˝_ªad
(tp, 0x01, 0x30) | 0x01);

1428 
	`πl_m¶ìp_lo›_waô_high
(
ç
, &
πl_ï_o˝_ªad_c⁄d
, 10, 10);

1429 
	}
}

1431 
	$πl8168_drivî_°¨t
(
πl8169_¥iv©e
 *
ç
)

1433 
ç
->
mac_vîsi⁄
) {

1434 
RTL_GIGA_MAC_VER_27
:

1435 
RTL_GIGA_MAC_VER_28
:

1436 
RTL_GIGA_MAC_VER_31
:

1437 
	`πl8168dp_drivî_°¨t
(
ç
);

1439 
RTL_GIGA_MAC_VER_49
:

1440 
RTL_GIGA_MAC_VER_50
:

1441 
RTL_GIGA_MAC_VER_51
:

1442 
	`πl8168ï_drivî_°¨t
(
ç
);

1445 
	`BUG
();

1448 
	}
}

1450 
	$πl8168dp_drivî_°›
(
πl8169_¥iv©e
 *
ç
)

1452 
	`πl8168_oob_nŸify
(
ç
, 
OOB_CMD_DRIVER_STOP
);

1453 
	`πl_m¶ìp_lo›_waô_low
(
ç
, &
πl_o˝_ªad_c⁄d
, 10, 10);

1454 
	}
}

1456 
	$πl8168ï_drivî_°›
(
πl8169_¥iv©e
 *
ç
)

1458 
	`πl8168ï_°›_cmac
(
ç
);

1459 
	`o˝_wrôe
(
ç
, 0x01, 0x180, 
OOB_CMD_DRIVER_STOP
);

1460 
	`o˝_wrôe
(
ç
, 0x01, 0x30, 
	`o˝_ªad
(tp, 0x01, 0x30) | 0x01);

1461 
	`πl_m¶ìp_lo›_waô_low
(
ç
, &
πl_ï_o˝_ªad_c⁄d
, 10, 10);

1462 
	}
}

1464 
	$πl8168_drivî_°›
(
πl8169_¥iv©e
 *
ç
)

1466 
ç
->
mac_vîsi⁄
) {

1467 
RTL_GIGA_MAC_VER_27
:

1468 
RTL_GIGA_MAC_VER_28
:

1469 
RTL_GIGA_MAC_VER_31
:

1470 
	`πl8168dp_drivî_°›
(
ç
);

1472 
RTL_GIGA_MAC_VER_49
:

1473 
RTL_GIGA_MAC_VER_50
:

1474 
RTL_GIGA_MAC_VER_51
:

1475 
	`πl8168ï_drivî_°›
(
ç
);

1478 
	`BUG
();

1481 
	}
}

1483 
	$r8168dp_check_dash
(
πl8169_¥iv©e
 *
ç
)

1485 
u16
 
ªg
 = 
	`πl8168_gë_o˝_ªg
(
ç
);

1487  (
	`o˝_ªad
(
ç
, 0x0f, 
ªg
) & 0x00008000) ? 1 : 0;

1488 
	}
}

1490 
	$r8168ï_check_dash
(
πl8169_¥iv©e
 *
ç
)

1492  (
	`o˝_ªad
(
ç
, 0x0f, 0x128) & 0x00000001) ? 1 : 0;

1493 
	}
}

1495 
	$r8168_check_dash
(
πl8169_¥iv©e
 *
ç
)

1497 
ç
->
mac_vîsi⁄
) {

1498 
RTL_GIGA_MAC_VER_27
:

1499 
RTL_GIGA_MAC_VER_28
:

1500 
RTL_GIGA_MAC_VER_31
:

1501  
	`r8168dp_check_dash
(
ç
);

1502 
RTL_GIGA_MAC_VER_49
:

1503 
RTL_GIGA_MAC_VER_50
:

1504 
RTL_GIGA_MAC_VER_51
:

1505  
	`r8168ï_check_dash
(
ç
);

1509 
	}
}

1511 
	sexgmac_ªg
 {

1512 
u16
 
	maddr
;

1513 
u16
 
	mmask
;

1514 
u32
 
	mvÆ
;

1517 
	$πl_wrôe_exgmac_b©ch
(
πl8169_¥iv©e
 *
ç
,

1518 c⁄° 
exgmac_ªg
 *
r
, 
Àn
)

1520 
Àn
-- > 0) {

1521 
	`πl_îi_wrôe
(
ç
, 
r
->
addr
,Ñ->
mask
,Ñ->
vÆ
, 
ERIAR_EXGMAC
);

1522 
r
++;

1524 
	}
}

1526 
	$DECLARE_RTL_COND
(
πl_efu£¨_c⁄d
)

1528 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

1530  
	`RTL_R32
(
EFUSEAR
Ë& 
EFUSEAR_FLAG
;

1531 
	}
}

1533 
u8
 
	$πl8168d_efu£_ªad
(
πl8169_¥iv©e
 *
ç
, 
ªg_addr
)

1535 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

1537 
	`RTL_W32
(
EFUSEAR
, (
ªg_addr
 & 
EFUSEAR_REG_MASK
Ë<< 
EFUSEAR_REG_SHIFT
);

1539  
	`πl_udñay_lo›_waô_high
(
ç
, &
πl_efu£¨_c⁄d
, 100, 300) ?

1540 
	`RTL_R32
(
EFUSEAR
Ë& 
EFUSEAR_DATA_MASK
 : ~0;

1541 
	}
}

1543 
u16
 
	$πl_gë_evíts
(
πl8169_¥iv©e
 *
ç
)

1545 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

1547  
	`RTL_R16
(
I¡rSètus
);

1548 
	}
}

1550 
	$πl_ack_evíts
(
πl8169_¥iv©e
 *
ç
, 
u16
 
bôs
)

1552 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

1554 
	`RTL_W16
(
I¡rSètus
, 
bôs
);

1555 
	`mmiowb
();

1556 
	}
}

1558 
	$πl_úq_dißbÀ
(
πl8169_¥iv©e
 *
ç
)

1560 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

1562 
	`RTL_W16
(
I¡rMask
, 0);

1563 
	`mmiowb
();

1564 
	}
}

1566 
	$πl_úq_íabÀ
(
πl8169_¥iv©e
 *
ç
, 
u16
 
bôs
)

1568 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

1570 
	`RTL_W16
(
I¡rMask
, 
bôs
);

1571 
	}
}

1573 
	#RTL_EVENT_NAPI_RX
 (
RxOK
 | 
RxEº
)

	)

1574 
	#RTL_EVENT_NAPI_TX
 (
TxOK
 | 
TxEº
)

	)

1575 
	#RTL_EVENT_NAPI
 (
RTL_EVENT_NAPI_RX
 | 
RTL_EVENT_NAPI_TX
)

	)

1577 
	$πl_úq_íabÀ_Æl
(
πl8169_¥iv©e
 *
ç
)

1579 
	`πl_úq_íabÀ
(
ç
, 
RTL_EVENT_NAPI
 |Åp->
evít_¶ow
);

1580 
	}
}

1582 
	$πl8169_úq_mask_™d_ack
(
πl8169_¥iv©e
 *
ç
)

1584 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

1586 
	`πl_úq_dißbÀ
(
ç
);

1587 
	`πl_ack_evíts
(
ç
, 
RTL_EVENT_NAPI
 |Åp->
evít_¶ow
);

1588 
	`RTL_R8
(
ChùCmd
);

1589 
	}
}

1591 
	$πl8169_tbi_ª£t_≥ndög
(
πl8169_¥iv©e
 *
ç
)

1593 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

1595  
	`RTL_R32
(
TBICSR
Ë& 
TBIRe£t
;

1596 
	}
}

1598 
	$πl8169_xmii_ª£t_≥ndög
(
πl8169_¥iv©e
 *
ç
)

1600  
	`πl_ªadphy
(
ç
, 
MII_BMCR
Ë& 
BMCR_RESET
;

1601 
	}
}

1603 
	$πl8169_tbi_lök_ok
(
__iomem
 *
iﬂddr
)

1605  
	`RTL_R32
(
TBICSR
Ë& 
TBILökOk
;

1606 
	}
}

1608 
	$πl8169_xmii_lök_ok
(
__iomem
 *
iﬂddr
)

1610  
	`RTL_R8
(
PHY°©us
Ë& 
LökSètus
;

1611 
	}
}

1613 
	$πl8169_tbi_ª£t_íabÀ
(
πl8169_¥iv©e
 *
ç
)

1615 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

1617 
	`RTL_W32
(
TBICSR
, 
	`RTL_R32
(TBICSRË| 
TBIRe£t
);

1618 
	}
}

1620 
	$πl8169_xmii_ª£t_íabÀ
(
πl8169_¥iv©e
 *
ç
)

1622 
vÆ
;

1624 
vÆ
 = 
	`πl_ªadphy
(
ç
, 
MII_BMCR
Ë| 
BMCR_RESET
;

1625 
	`πl_wrôïhy
(
ç
, 
MII_BMCR
, 
vÆ
 & 0xffff);

1626 
	}
}

1628 
	$πl_lök_chg_∑tch
(
πl8169_¥iv©e
 *
ç
)

1630 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

1631 
√t_devi˚
 *
dev
 = 
ç
->dev;

1633 i‡(!
	`√tif_ru¬ög
(
dev
))

1636 i‡(
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_34
 ||

1637 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_38
) {

1638 i‡(
	`RTL_R8
(
PHY°©us
Ë& 
_1000bpsF
) {

1639 
	`πl_îi_wrôe
(
ç
, 0x1bc, 
ERIAR_MASK_1111
, 0x00000011,

1640 
ERIAR_EXGMAC
);

1641 
	`πl_îi_wrôe
(
ç
, 0x1dc, 
ERIAR_MASK_1111
, 0x00000005,

1642 
ERIAR_EXGMAC
);

1643 } i‡(
	`RTL_R8
(
PHY°©us
Ë& 
_100bps
) {

1644 
	`πl_îi_wrôe
(
ç
, 0x1bc, 
ERIAR_MASK_1111
, 0x0000001f,

1645 
ERIAR_EXGMAC
);

1646 
	`πl_îi_wrôe
(
ç
, 0x1dc, 
ERIAR_MASK_1111
, 0x00000005,

1647 
ERIAR_EXGMAC
);

1649 
	`πl_îi_wrôe
(
ç
, 0x1bc, 
ERIAR_MASK_1111
, 0x0000001f,

1650 
ERIAR_EXGMAC
);

1651 
	`πl_îi_wrôe
(
ç
, 0x1dc, 
ERIAR_MASK_1111
, 0x0000003f,

1652 
ERIAR_EXGMAC
);

1655 
	`πl_w0w1_îi
(
ç
, 0xdc, 
ERIAR_MASK_0001
, 0x00, 0x01,

1656 
ERIAR_EXGMAC
);

1657 
	`πl_w0w1_îi
(
ç
, 0xdc, 
ERIAR_MASK_0001
, 0x01, 0x00,

1658 
ERIAR_EXGMAC
);

1659 } i‡(
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_35
 ||

1660 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_36
) {

1661 i‡(
	`RTL_R8
(
PHY°©us
Ë& 
_1000bpsF
) {

1662 
	`πl_îi_wrôe
(
ç
, 0x1bc, 
ERIAR_MASK_1111
, 0x00000011,

1663 
ERIAR_EXGMAC
);

1664 
	`πl_îi_wrôe
(
ç
, 0x1dc, 
ERIAR_MASK_1111
, 0x00000005,

1665 
ERIAR_EXGMAC
);

1667 
	`πl_îi_wrôe
(
ç
, 0x1bc, 
ERIAR_MASK_1111
, 0x0000001f,

1668 
ERIAR_EXGMAC
);

1669 
	`πl_îi_wrôe
(
ç
, 0x1dc, 
ERIAR_MASK_1111
, 0x0000003f,

1670 
ERIAR_EXGMAC
);

1672 } i‡(
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_37
) {

1673 i‡(
	`RTL_R8
(
PHY°©us
Ë& 
_10bps
) {

1674 
	`πl_îi_wrôe
(
ç
, 0x1d0, 
ERIAR_MASK_0011
, 0x4d02,

1675 
ERIAR_EXGMAC
);

1676 
	`πl_îi_wrôe
(
ç
, 0x1dc, 
ERIAR_MASK_0011
, 0x0060,

1677 
ERIAR_EXGMAC
);

1679 
	`πl_îi_wrôe
(
ç
, 0x1d0, 
ERIAR_MASK_0011
, 0x0000,

1680 
ERIAR_EXGMAC
);

1683 
	}
}

1685 
	$__πl8169_check_lök_°©us
(
√t_devi˚
 *
dev
,

1686 
πl8169_¥iv©e
 *
ç
,

1687 
__iomem
 *
iﬂddr
, 
boﬁ
 
pm
)

1689 i‡(
ç
->
	`lök_ok
(
iﬂddr
)) {

1690 
	`πl_lök_chg_∑tch
(
ç
);

1692 i‡(
pm
)

1693 
	`pm_ªque°_ªsume
(&
ç
->
pci_dev
->
dev
);

1694 
	`√tif_ˇºõr_⁄
(
dev
);

1695 i‡(
	`√t_øãlimô
())

1696 
	`√tif_öfo
(
ç
, 
ifup
, 
dev
, "link up\n");

1698 
	`√tif_ˇºõr_off
(
dev
);

1699 
	`√tif_öfo
(
ç
, 
ifdown
, 
dev
, "link down\n");

1700 i‡(
pm
)

1701 
	`pm_scheduÀ_su•íd
(&
ç
->
pci_dev
->
dev
, 5000);

1703 
	}
}

1705 
	$πl8169_check_lök_°©us
(
√t_devi˚
 *
dev
,

1706 
πl8169_¥iv©e
 *
ç
,

1707 
__iomem
 *
iﬂddr
)

1709 
	`__πl8169_check_lök_°©us
(
dev
, 
ç
, 
iﬂddr
, 
Ál£
);

1710 
	}
}

1712 
	#WAKE_ANY
 (
WAKE_PHY
 | 
WAKE_MAGIC
 | 
WAKE_UCAST
 | 
WAKE_BCAST
 | 
WAKE_MCAST
)

	)

1714 
u32
 
	$__πl8169_gë_wﬁ
(
πl8169_¥iv©e
 *
ç
)

1716 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

1717 
u8
 
›ti⁄s
;

1718 
u32
 
wﬁ›ts
 = 0;

1720 
›ti⁄s
 = 
	`RTL_R8
(
C⁄fig1
);

1721 i‡(!(
›ti⁄s
 & 
PME«bÀ
))

1724 
›ti⁄s
 = 
	`RTL_R8
(
C⁄fig3
);

1725 i‡(
›ti⁄s
 & 
LökUp
)

1726 
wﬁ›ts
 |
WAKE_PHY
;

1727 
ç
->
mac_vîsi⁄
) {

1728 
RTL_GIGA_MAC_VER_34
:

1729 
RTL_GIGA_MAC_VER_35
:

1730 
RTL_GIGA_MAC_VER_36
:

1731 
RTL_GIGA_MAC_VER_37
:

1732 
RTL_GIGA_MAC_VER_38
:

1733 
RTL_GIGA_MAC_VER_40
:

1734 
RTL_GIGA_MAC_VER_41
:

1735 
RTL_GIGA_MAC_VER_42
:

1736 
RTL_GIGA_MAC_VER_43
:

1737 
RTL_GIGA_MAC_VER_44
:

1738 
RTL_GIGA_MAC_VER_45
:

1739 
RTL_GIGA_MAC_VER_46
:

1740 
RTL_GIGA_MAC_VER_47
:

1741 
RTL_GIGA_MAC_VER_48
:

1742 
RTL_GIGA_MAC_VER_49
:

1743 
RTL_GIGA_MAC_VER_50
:

1744 
RTL_GIGA_MAC_VER_51
:

1745 i‡(
	`πl_îi_ªad
(
ç
, 0xdc, 
ERIAR_EXGMAC
Ë& 
MagicPackë_v2
)

1746 
wﬁ›ts
 |
WAKE_MAGIC
;

1749 i‡(
›ti⁄s
 & 
MagicPackë
)

1750 
wﬁ›ts
 |
WAKE_MAGIC
;

1754 
›ti⁄s
 = 
	`RTL_R8
(
C⁄fig5
);

1755 i‡(
›ti⁄s
 & 
UWF
)

1756 
wﬁ›ts
 |
WAKE_UCAST
;

1757 i‡(
›ti⁄s
 & 
BWF
)

1758 
wﬁ›ts
 |
WAKE_BCAST
;

1759 i‡(
›ti⁄s
 & 
MWF
)

1760 
wﬁ›ts
 |
WAKE_MCAST
;

1762  
wﬁ›ts
;

1763 
	}
}

1765 
	$πl8169_gë_wﬁ
(
√t_devi˚
 *
dev
, 
ëhtoﬁ_wﬁöfo
 *
wﬁ
)

1767 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

1768 
devi˚
 *
d
 = &
ç
->
pci_dev
->
dev
;

1770 
	`pm_ru¡ime_gë_n‹esume
(
d
);

1772 
	`πl_lock_w‹k
(
ç
);

1774 
wﬁ
->
suµ‹ãd
 = 
WAKE_ANY
;

1775 i‡(
	`pm_ru¡ime_a˘ive
(
d
))

1776 
wﬁ
->
wﬁ›ts
 = 
	`__πl8169_gë_wﬁ
(
ç
);

1778 
wﬁ
->
wﬁ›ts
 = 
ç
->
ßved_wﬁ›ts
;

1780 
	`πl_u∆ock_w‹k
(
ç
);

1782 
	`pm_ru¡ime_put_noidÀ
(
d
);

1783 
	}
}

1785 
	$__πl8169_£t_wﬁ
(
πl8169_¥iv©e
 *
ç
, 
u32
 
wﬁ›ts
)

1787 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

1788 
i
, 
tmp
;

1790 
u32
 
›t
;

1791 
u16
 
ªg
;

1792 
u8
 
mask
;

1793 } 
cfg
[] = {

1794 { 
WAKE_PHY
, 
C⁄fig3
, 
LökUp
 },

1795 { 
WAKE_UCAST
, 
C⁄fig5
, 
UWF
 },

1796 { 
WAKE_BCAST
, 
C⁄fig5
, 
BWF
 },

1797 { 
WAKE_MCAST
, 
C⁄fig5
, 
MWF
 },

1798 { 
WAKE_ANY
, 
C⁄fig5
, 
L™Wake
 },

1799 { 
WAKE_MAGIC
, 
C⁄fig3
, 
MagicPackë
 }

1801 
u8
 
›ti⁄s
;

1803 
	`RTL_W8
(
Cfg9346
, 
Cfg9346_U∆ock
);

1805 
ç
->
mac_vîsi⁄
) {

1806 
RTL_GIGA_MAC_VER_34
:

1807 
RTL_GIGA_MAC_VER_35
:

1808 
RTL_GIGA_MAC_VER_36
:

1809 
RTL_GIGA_MAC_VER_37
:

1810 
RTL_GIGA_MAC_VER_38
:

1811 
RTL_GIGA_MAC_VER_40
:

1812 
RTL_GIGA_MAC_VER_41
:

1813 
RTL_GIGA_MAC_VER_42
:

1814 
RTL_GIGA_MAC_VER_43
:

1815 
RTL_GIGA_MAC_VER_44
:

1816 
RTL_GIGA_MAC_VER_45
:

1817 
RTL_GIGA_MAC_VER_46
:

1818 
RTL_GIGA_MAC_VER_47
:

1819 
RTL_GIGA_MAC_VER_48
:

1820 
RTL_GIGA_MAC_VER_49
:

1821 
RTL_GIGA_MAC_VER_50
:

1822 
RTL_GIGA_MAC_VER_51
:

1823 
tmp
 = 
	`ARRAY_SIZE
(
cfg
) - 1;

1824 i‡(
wﬁ›ts
 & 
WAKE_MAGIC
)

1825 
	`πl_w0w1_îi
(
ç
,

1827 
ERIAR_MASK_0100
,

1828 
MagicPackë_v2
,

1830 
ERIAR_EXGMAC
);

1832 
	`πl_w0w1_îi
(
ç
,

1834 
ERIAR_MASK_0100
,

1836 
MagicPackë_v2
,

1837 
ERIAR_EXGMAC
);

1840 
tmp
 = 
	`ARRAY_SIZE
(
cfg
);

1844 
i
 = 0; i < 
tmp
; i++) {

1845 
›ti⁄s
 = 
	`RTL_R8
(
cfg
[
i
].
ªg
Ë& ~cfg[i].
mask
;

1846 i‡(
wﬁ›ts
 & 
cfg
[
i
].
›t
)

1847 
›ti⁄s
 |
cfg
[
i
].
mask
;

1848 
	`RTL_W8
(
cfg
[
i
].
ªg
, 
›ti⁄s
);

1851 
ç
->
mac_vîsi⁄
) {

1852 
RTL_GIGA_MAC_VER_01
 ... 
RTL_GIGA_MAC_VER_17
:

1853 
›ti⁄s
 = 
	`RTL_R8
(
C⁄fig1
Ë& ~
PME«bÀ
;

1854 i‡(
wﬁ›ts
)

1855 
›ti⁄s
 |
PME«bÀ
;

1856 
	`RTL_W8
(
C⁄fig1
, 
›ti⁄s
);

1859 
›ti⁄s
 = 
	`RTL_R8
(
C⁄fig2
Ë& ~
PME_SIGNAL
;

1860 i‡(
wﬁ›ts
)

1861 
›ti⁄s
 |
PME_SIGNAL
;

1862 
	`RTL_W8
(
C⁄fig2
, 
›ti⁄s
);

1866 
	`RTL_W8
(
Cfg9346
, 
Cfg9346_Lock
);

1867 
	}
}

1869 
	$πl8169_£t_wﬁ
(
√t_devi˚
 *
dev
, 
ëhtoﬁ_wﬁöfo
 *
wﬁ
)

1871 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

1872 
devi˚
 *
d
 = &
ç
->
pci_dev
->
dev
;

1874 
	`pm_ru¡ime_gë_n‹esume
(
d
);

1876 
	`πl_lock_w‹k
(
ç
);

1878 i‡(
wﬁ
->
wﬁ›ts
)

1879 
ç
->
„©uªs
 |
RTL_FEATURE_WOL
;

1881 
ç
->
„©uªs
 &~
RTL_FEATURE_WOL
;

1882 i‡(
	`pm_ru¡ime_a˘ive
(
d
))

1883 
	`__πl8169_£t_wﬁ
(
ç
, 
wﬁ
->
wﬁ›ts
);

1885 
ç
->
ßved_wﬁ›ts
 = 
wﬁ
->
wﬁ›ts
;

1887 
	`πl_u∆ock_w‹k
(
ç
);

1889 
	`devi˚_£t_wakeup_íabÀ
(&
ç
->
pci_dev
->
dev
, 
wﬁ
->
wﬁ›ts
);

1891 
	`pm_ru¡ime_put_noidÀ
(
d
);

1894 
	}
}

1896 c⁄° *
	$πl_lookup_fúmw¨e_«me
(
πl8169_¥iv©e
 *
ç
)

1898  
πl_chù_öfos
[
ç
->
mac_vîsi⁄
].
fw_«me
;

1899 
	}
}

1901 
	$πl8169_gë_drvöfo
(
√t_devi˚
 *
dev
,

1902 
ëhtoﬁ_drvöfo
 *
öfo
)

1904 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

1905 
πl_fw
 *πl_fw = 
ç
->rtl_fw;

1907 
	`°æ˝y
(
öfo
->
drivî
, 
MODULENAME
, (info->driver));

1908 
	`°æ˝y
(
öfo
->
vîsi⁄
, 
RTL8169_VERSION
, (info->version));

1909 
	`°æ˝y
(
öfo
->
bus_öfo
, 
	`pci_«me
(
ç
->
pci_dev
), (info->bus_info));

1910 
	`BUILD_BUG_ON
((
öfo
->
fw_vîsi⁄
Ë< (
πl_fw
->
vîsi⁄
));

1911 i‡(!
	`IS_ERR_OR_NULL
(
πl_fw
))

1912 
	`°æ˝y
(
öfo
->
fw_vîsi⁄
, 
πl_fw
->
vîsi⁄
,

1913 (
öfo
->
fw_vîsi⁄
));

1914 
	}
}

1916 
	$πl8169_gë_ªgs_Àn
(
√t_devi˚
 *
dev
)

1918  
R8169_REGS_SIZE
;

1919 
	}
}

1921 
	$πl8169_£t_•ìd_tbi
(
√t_devi˚
 *
dev
,

1922 
u8
 
aut⁄eg
, 
u16
 
•ìd
, u8 
du∂ex
, 
u32
 
ign‹ed
)

1924 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

1925 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

1926 
ªt
 = 0;

1927 
u32
 
ªg
;

1929 
ªg
 = 
	`RTL_R32
(
TBICSR
);

1930 i‡((
aut⁄eg
 =
AUTONEG_DISABLE
Ë&& (
•ìd
 =
SPEED_1000
) &&

1931 (
du∂ex
 =
DUPLEX_FULL
)) {

1932 
	`RTL_W32
(
TBICSR
, 
ªg
 & ~(
TBINwE«bÀ
 | 
TBINwRe°¨t
));

1933 } i‡(
aut⁄eg
 =
AUTONEG_ENABLE
)

1934 
	`RTL_W32
(
TBICSR
, 
ªg
 | 
TBINwE«bÀ
 | 
TBINwRe°¨t
);

1936 
	`√tif_w¨n
(
ç
, 
lök
, 
dev
,

1938 
ªt
 = -
EOPNOTSUPP
;

1941  
ªt
;

1942 
	}
}

1944 
	$πl8169_£t_•ìd_xmii
(
√t_devi˚
 *
dev
,

1945 
u8
 
aut⁄eg
, 
u16
 
•ìd
, u8 
du∂ex
, 
u32
 
adv
)

1947 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

1948 
giga_˘æ
, 
bm¸
;

1949 
rc
 = -
EINVAL
;

1951 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

1953 i‡(
aut⁄eg
 =
AUTONEG_ENABLE
) {

1954 
auto_√go
;

1956 
auto_√go
 = 
	`πl_ªadphy
(
ç
, 
MII_ADVERTISE
);

1957 
auto_√go
 &~(
ADVERTISE_10HALF
 | 
ADVERTISE_10FULL
 |

1958 
ADVERTISE_100HALF
 | 
ADVERTISE_100FULL
);

1960 i‡(
adv
 & 
ADVERTISED_10ba£T_HÆf
)

1961 
auto_√go
 |
ADVERTISE_10HALF
;

1962 i‡(
adv
 & 
ADVERTISED_10ba£T_FuŒ
)

1963 
auto_√go
 |
ADVERTISE_10FULL
;

1964 i‡(
adv
 & 
ADVERTISED_100ba£T_HÆf
)

1965 
auto_√go
 |
ADVERTISE_100HALF
;

1966 i‡(
adv
 & 
ADVERTISED_100ba£T_FuŒ
)

1967 
auto_√go
 |
ADVERTISE_100FULL
;

1969 
auto_√go
 |
ADVERTISE_PAUSE_CAP
 | 
ADVERTISE_PAUSE_ASYM
;

1971 
giga_˘æ
 = 
	`πl_ªadphy
(
ç
, 
MII_CTRL1000
);

1972 
giga_˘æ
 &~(
ADVERTISE_1000FULL
 | 
ADVERTISE_1000HALF
);

1975 i‡(
ç
->
mii
.
suµ‹ts_gmii
) {

1976 i‡(
adv
 & 
ADVERTISED_1000ba£T_HÆf
)

1977 
giga_˘æ
 |
ADVERTISE_1000HALF
;

1978 i‡(
adv
 & 
ADVERTISED_1000ba£T_FuŒ
)

1979 
giga_˘æ
 |
ADVERTISE_1000FULL
;

1980 } i‡(
adv
 & (
ADVERTISED_1000ba£T_HÆf
 |

1981 
ADVERTISED_1000ba£T_FuŒ
)) {

1982 
	`√tif_öfo
(
ç
, 
lök
, 
dev
,

1984 
out
;

1987 
bm¸
 = 
BMCR_ANENABLE
 | 
BMCR_ANRESTART
;

1989 
	`πl_wrôïhy
(
ç
, 
MII_ADVERTISE
, 
auto_√go
);

1990 
	`πl_wrôïhy
(
ç
, 
MII_CTRL1000
, 
giga_˘æ
);

1992 
giga_˘æ
 = 0;

1994 i‡(
•ìd
 =
SPEED_10
)

1995 
bm¸
 = 0;

1996 i‡(
•ìd
 =
SPEED_100
)

1997 
bm¸
 = 
BMCR_SPEED100
;

1999 
out
;

2001 i‡(
du∂ex
 =
DUPLEX_FULL
)

2002 
bm¸
 |
BMCR_FULLDPLX
;

2005 
	`πl_wrôïhy
(
ç
, 
MII_BMCR
, 
bm¸
);

2007 i‡(
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_02
 ||

2008 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_03
) {

2009 i‡((
•ìd
 =
SPEED_100
Ë&& (
aut⁄eg
 !
AUTONEG_ENABLE
)) {

2010 
	`πl_wrôïhy
(
ç
, 0x17, 0x2138);

2011 
	`πl_wrôïhy
(
ç
, 0x0e, 0x0260);

2013 
	`πl_wrôïhy
(
ç
, 0x17, 0x2108);

2014 
	`πl_wrôïhy
(
ç
, 0x0e, 0x0000);

2018 
rc
 = 0;

2019 
out
:

2020  
rc
;

2021 
	}
}

2023 
	$πl8169_£t_•ìd
(
√t_devi˚
 *
dev
,

2024 
u8
 
aut⁄eg
, 
u16
 
•ìd
, u8 
du∂ex
, 
u32
 
advîtisög
)

2026 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

2027 
ªt
;

2029 
ªt
 = 
ç
->
	`£t_•ìd
(
dev
, 
aut⁄eg
, 
•ìd
, 
du∂ex
, 
advîtisög
);

2030 i‡(
ªt
 < 0)

2031 
out
;

2033 i‡(
	`√tif_ru¬ög
(
dev
Ë&& (
aut⁄eg
 =
AUTONEG_ENABLE
) &&

2034 (
advîtisög
 & 
ADVERTISED_1000ba£T_FuŒ
) &&

2035 !
	`pci_is_pcõ
(
ç
->
pci_dev
)) {

2036 
	`mod_timî
(&
ç
->
timî
, 
jiffõs
 + 
RTL8169_PHY_TIMEOUT
);

2038 
out
:

2039  
ªt
;

2040 
	}
}

2042 
	$πl8169_£t_£âögs
(
√t_devi˚
 *
dev
, 
ëhtoﬁ_cmd
 *
cmd
)

2044 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

2045 
ªt
;

2047 
	`dñ_timî_sync
(&
ç
->
timî
);

2049 
	`πl_lock_w‹k
(
ç
);

2050 
ªt
 = 
	`πl8169_£t_•ìd
(
dev
, 
cmd
->
aut⁄eg
, 
	`ëhtoﬁ_cmd_•ìd
(cmd),

2051 
cmd
->
du∂ex
, cmd->
advîtisög
);

2052 
	`πl_u∆ock_w‹k
(
ç
);

2054  
ªt
;

2055 
	}
}

2057 
√tdev_„©uªs_t
 
	$πl8169_fix_„©uªs
(
√t_devi˚
 *
dev
,

2058 
√tdev_„©uªs_t
 
„©uªs
)

2060 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

2062 i‡(
dev
->
mtu
 > 
TD_MSS_MAX
)

2063 
„©uªs
 &~
NETIF_F_ALL_TSO
;

2065 i‡(
dev
->
mtu
 > 
JUMBO_1K
 &&

2066 !
πl_chù_öfos
[
ç
->
mac_vîsi⁄
].
jumbo_tx_csum
)

2067 
„©uªs
 &~
NETIF_F_IP_CSUM
;

2069  
„©uªs
;

2070 
	}
}

2072 
	$__πl8169_£t_„©uªs
(
√t_devi˚
 *
dev
,

2073 
√tdev_„©uªs_t
 
„©uªs
)

2075 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

2076 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

2077 
u32
 
rx_c⁄fig
;

2079 
rx_c⁄fig
 = 
	`RTL_R32
(
RxC⁄fig
);

2080 i‡(
„©uªs
 & 
NETIF_F_RXALL
)

2081 
rx_c⁄fig
 |(
Ac˚±Eº
 | 
Ac˚±Ru¡
);

2083 
rx_c⁄fig
 &~(
Ac˚±Eº
 | 
Ac˚±Ru¡
);

2085 
	`RTL_W32
(
RxC⁄fig
, 
rx_c⁄fig
);

2087 i‡(
„©uªs
 & 
NETIF_F_RXCSUM
)

2088 
ç
->
˝_cmd
 |
RxChkSum
;

2090 
ç
->
˝_cmd
 &~
RxChkSum
;

2092 i‡(
„©uªs
 & 
NETIF_F_HW_VLAN_CTAG_RX
)

2093 
ç
->
˝_cmd
 |
RxVœn
;

2095 
ç
->
˝_cmd
 &~
RxVœn
;

2097 
ç
->
˝_cmd
 |
	`RTL_R16
(
CPlusCmd
Ë& ~(
RxVœn
 | 
RxChkSum
);

2099 
	`RTL_W16
(
CPlusCmd
, 
ç
->
˝_cmd
);

2100 
	`RTL_R16
(
CPlusCmd
);

2101 
	}
}

2103 
	$πl8169_£t_„©uªs
(
√t_devi˚
 *
dev
,

2104 
√tdev_„©uªs_t
 
„©uªs
)

2106 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

2108 
„©uªs
 &
NETIF_F_RXALL
 | 
NETIF_F_RXCSUM
 | 
NETIF_F_HW_VLAN_CTAG_RX
;

2110 
	`πl_lock_w‹k
(
ç
);

2111 i‡(
„©uªs
 ^ 
dev
->features)

2112 
	`__πl8169_£t_„©uªs
(
dev
, 
„©uªs
);

2113 
	`πl_u∆ock_w‹k
(
ç
);

2116 
	}
}

2119 
ölöe
 
u32
 
	$πl8169_tx_vœn_èg
(
sk_buff
 *
skb
)

2121  (
	`skb_vœn_èg_¥e£¡
(
skb
)) ?

2122 
TxVœnTag
 | 
	`swab16
(
	`skb_vœn_èg_gë
(
skb
)) : 0x00;

2123 
	}
}

2125 
	$πl8169_rx_vœn_èg
(
RxDesc
 *
desc
, 
sk_buff
 *
skb
)

2127 
u32
 
›ts2
 = 
	`À32_to_˝u
(
desc
->opts2);

2129 i‡(
›ts2
 & 
RxVœnTag
)

2130 
	`__vœn_hwac˚l_put_èg
(
skb
, 
	`ht⁄s
(
ETH_P_8021Q
), 
	`swab16
(
›ts2
 & 0xffff));

2131 
	}
}

2133 
	$πl8169_g£t_tbi
(
√t_devi˚
 *
dev
, 
ëhtoﬁ_cmd
 *
cmd
)

2135 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

2136 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

2137 
u32
 
°©us
;

2139 
cmd
->
suµ‹ãd
 =

2140 
SUPPORTED_1000ba£T_FuŒ
 | 
SUPPORTED_Aut⁄eg
 | 
SUPPORTED_FIBRE
;

2141 
cmd
->
p‹t
 = 
PORT_FIBRE
;

2142 
cmd
->
å™s˚ivî
 = 
XCVR_INTERNAL
;

2144 
°©us
 = 
	`RTL_R32
(
TBICSR
);

2145 
cmd
->
advîtisög
 = (
°©us
 & 
TBINwE«bÀ
Ë? 
ADVERTISED_Aut⁄eg
 : 0;

2146 
cmd
->
aut⁄eg
 = !!(
°©us
 & 
TBINwE«bÀ
);

2148 
	`ëhtoﬁ_cmd_•ìd_£t
(
cmd
, 
SPEED_1000
);

2149 
cmd
->
du∂ex
 = 
DUPLEX_FULL
;

2152 
	}
}

2154 
	$πl8169_g£t_xmii
(
√t_devi˚
 *
dev
, 
ëhtoﬁ_cmd
 *
cmd
)

2156 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

2158  
	`mii_ëhtoﬁ_g£t
(&
ç
->
mii
, 
cmd
);

2159 
	}
}

2161 
	$πl8169_gë_£âögs
(
√t_devi˚
 *
dev
, 
ëhtoﬁ_cmd
 *
cmd
)

2163 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

2164 
rc
;

2166 
	`πl_lock_w‹k
(
ç
);

2167 
rc
 = 
ç
->
	`gë_£âögs
(
dev
, 
cmd
);

2168 
	`πl_u∆ock_w‹k
(
ç
);

2170  
rc
;

2171 
	}
}

2173 
	$πl8169_gë_ªgs
(
√t_devi˚
 *
dev
, 
ëhtoﬁ_ªgs
 *
ªgs
,

2174 *
p
)

2176 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

2177 
u32
 
__iomem
 *
d©a
 = 
ç
->
mmio_addr
;

2178 
u32
 *
dw
 = 
p
;

2179 
i
;

2181 
	`πl_lock_w‹k
(
ç
);

2182 
i
 = 0; i < 
R8169_REGS_SIZE
; i += 4)

2183 
	`mem˝y_‰omio
(
dw
++, 
d©a
++, 4);

2184 
	`πl_u∆ock_w‹k
(
ç
);

2185 
	}
}

2187 
u32
 
	$πl8169_gë_msgÀvñ
(
√t_devi˚
 *
dev
)

2189 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

2191  
ç
->
msg_íabÀ
;

2192 
	}
}

2194 
	$πl8169_£t_msgÀvñ
(
√t_devi˚
 *
dev
, 
u32
 
vÆue
)

2196 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

2198 
ç
->
msg_íabÀ
 = 
vÆue
;

2199 
	}
}

2201 c⁄° 
	gπl8169_g°rögs
[][
ETH_GSTRING_LEN
] = {

2223 
	$πl8169_gë_s£t_cou¡
(
√t_devi˚
 *
dev
, 
s£t
)

2225 
s£t
) {

2226 
ETH_SS_STATS
:

2227  
	`ARRAY_SIZE
(
πl8169_g°rögs
);

2229  -
EOPNOTSUPP
;

2231 
	}
}

2233 
	$DECLARE_RTL_COND
(
πl_cou¡îs_c⁄d
)

2235 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

2237  
	`RTL_R32
(
Cou¡îAddrLow
Ë& (
Cou¡îRe£t
 | 
Cou¡îDump
);

2238 
	}
}

2240 
boﬁ
 
	$πl8169_do_cou¡îs
(
√t_devi˚
 *
dev
, 
u32
 
cou¡î_cmd
)

2242 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

2243 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

2244 
dma_addr_t
 
∑ddr
 = 
ç
->
cou¡îs_phys_addr
;

2245 
u32
 
cmd
;

2246 
boﬁ
 
ªt
;

2248 
	`RTL_W32
(
Cou¡îAddrHigh
, (
u64
)
∑ddr
 >> 32);

2249 
cmd
 = (
u64
)
∑ddr
 & 
	`DMA_BIT_MASK
(32);

2250 
	`RTL_W32
(
Cou¡îAddrLow
, 
cmd
);

2251 
	`RTL_W32
(
Cou¡îAddrLow
, 
cmd
 | 
cou¡î_cmd
);

2253 
ªt
 = 
	`πl_udñay_lo›_waô_low
(
ç
, &
πl_cou¡îs_c⁄d
, 10, 1000);

2255 
	`RTL_W32
(
Cou¡îAddrLow
, 0);

2256 
	`RTL_W32
(
Cou¡îAddrHigh
, 0);

2258  
ªt
;

2259 
	}
}

2261 
boﬁ
 
	$πl8169_ª£t_cou¡îs
(
√t_devi˚
 *
dev
)

2263 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

2269 i‡(
ç
->
mac_vîsi⁄
 < 
RTL_GIGA_MAC_VER_19
)

2270  
åue
;

2272  
	`πl8169_do_cou¡îs
(
dev
, 
Cou¡îRe£t
);

2273 
	}
}

2275 
boﬁ
 
	$πl8169_upd©e_cou¡îs
(
√t_devi˚
 *
dev
)

2277 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

2278 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

2284 i‡((
	`RTL_R8
(
ChùCmd
Ë& 
CmdRxEnb
) == 0)

2285  
åue
;

2287  
	`πl8169_do_cou¡îs
(
dev
, 
Cou¡îDump
);

2288 
	}
}

2290 
boﬁ
 
	$πl8169_öô_cou¡î_off£ts
(
√t_devi˚
 *
dev
)

2292 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

2293 
πl8169_cou¡îs
 *
cou¡îs
 = 
ç
->counters;

2294 
boﬁ
 
ªt
 = 
Ál£
;

2311 i‡(
ç
->
tc_off£t
.
öôed
)

2312  
åue
;

2315 i‡(
	`πl8169_ª£t_cou¡îs
(
dev
))

2316 
ªt
 = 
åue
;

2318 i‡(
	`πl8169_upd©e_cou¡îs
(
dev
))

2319 
ªt
 = 
åue
;

2321 
ç
->
tc_off£t
.
tx_îr‹s
 = 
cou¡îs
->tx_errors;

2322 
ç
->
tc_off£t
.
tx_mu…i_cﬁlisi⁄
 = 
cou¡îs
->tx_multi_collision;

2323 
ç
->
tc_off£t
.
tx_ab‹ãd
 = 
cou¡îs
->tx_aborted;

2324 
ç
->
tc_off£t
.
öôed
 = 
åue
;

2326  
ªt
;

2327 
	}
}

2329 
	$πl8169_gë_ëhtoﬁ_°©s
(
√t_devi˚
 *
dev
,

2330 
ëhtoﬁ_°©s
 *
°©s
, 
u64
 *
d©a
)

2332 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

2333 
devi˚
 *
d
 = &
ç
->
pci_dev
->
dev
;

2334 
πl8169_cou¡îs
 *
cou¡îs
 = 
ç
->counters;

2336 
	`ASSERT_RTNL
();

2338 
	`pm_ru¡ime_gë_n‹esume
(
d
);

2340 i‡(
	`pm_ru¡ime_a˘ive
(
d
))

2341 
	`πl8169_upd©e_cou¡îs
(
dev
);

2343 
	`pm_ru¡ime_put_noidÀ
(
d
);

2345 
d©a
[0] = 
	`À64_to_˝u
(
cou¡îs
->
tx_∑ckës
);

2346 
d©a
[1] = 
	`À64_to_˝u
(
cou¡îs
->
rx_∑ckës
);

2347 
d©a
[2] = 
	`À64_to_˝u
(
cou¡îs
->
tx_îr‹s
);

2348 
d©a
[3] = 
	`À32_to_˝u
(
cou¡îs
->
rx_îr‹s
);

2349 
d©a
[4] = 
	`À16_to_˝u
(
cou¡îs
->
rx_mis£d
);

2350 
d©a
[5] = 
	`À16_to_˝u
(
cou¡îs
->
Æign_îr‹s
);

2351 
d©a
[6] = 
	`À32_to_˝u
(
cou¡îs
->
tx_⁄e_cﬁlisi⁄
);

2352 
d©a
[7] = 
	`À32_to_˝u
(
cou¡îs
->
tx_mu…i_cﬁlisi⁄
);

2353 
d©a
[8] = 
	`À64_to_˝u
(
cou¡îs
->
rx_uniˇ°
);

2354 
d©a
[9] = 
	`À64_to_˝u
(
cou¡îs
->
rx_brﬂdˇ°
);

2355 
d©a
[10] = 
	`À32_to_˝u
(
cou¡îs
->
rx_mu…iˇ°
);

2356 
d©a
[11] = 
	`À16_to_˝u
(
cou¡îs
->
tx_ab‹ãd
);

2357 
d©a
[12] = 
	`À16_to_˝u
(
cou¡îs
->
tx_undîun
);

2358 
d©a
[13] = 
ç
->
xdp_cou¡îs
.
£t
;

2359 
d©a
[14] = 
ç
->
xdp_cou¡îs
.
∑ss
;

2360 
d©a
[15] = 
ç
->
xdp_cou¡îs
.
dr›
;

2361 
d©a
[16] = 
ç
->
xdp_cou¡îs
.
tx
;

2362 
d©a
[17] = 
ç
->
xdp_cou¡îs
.
ab‹ãd
;

2363 
d©a
[18] = 
ç
->
xdp_cou¡îs
.
unknown
;

2365 
	}
}

2367 
	$πl8169_gë_°rögs
(
√t_devi˚
 *
dev
, 
u32
 
°rög£t
, 
u8
 *
d©a
)

2369 
°rög£t
) {

2370 
ETH_SS_STATS
:

2371 
	`mem˝y
(
d©a
, *
πl8169_g°rögs
, (rtl8169_gstrings));

2374 
	}
}

2376 c⁄° 
ëhtoﬁ_›s
 
	gπl8169_ëhtoﬁ_›s
 = {

2377 .
gë_drvöfo
 = 
πl8169_gë_drvöfo
,

2378 .
	ggë_ªgs_Àn
 = 
πl8169_gë_ªgs_Àn
,

2379 .
	ggë_lök
 = 
ëhtoﬁ_›_gë_lök
,

2380 .
	ggë_£âögs
 = 
πl8169_gë_£âögs
,

2381 .
	g£t_£âögs
 = 
πl8169_£t_£âögs
,

2382 .
	ggë_msgÀvñ
 = 
πl8169_gë_msgÀvñ
,

2383 .
	g£t_msgÀvñ
 = 
πl8169_£t_msgÀvñ
,

2384 .
	ggë_ªgs
 = 
πl8169_gë_ªgs
,

2385 .
	ggë_wﬁ
 = 
πl8169_gë_wﬁ
,

2386 .
	g£t_wﬁ
 = 
πl8169_£t_wﬁ
,

2387 .
	ggë_°rögs
 = 
πl8169_gë_°rögs
,

2388 .
	ggë_s£t_cou¡
 = 
πl8169_gë_s£t_cou¡
,

2389 .
	ggë_ëhtoﬁ_°©s
 = 
πl8169_gë_ëhtoﬁ_°©s
,

2390 .
	ggë_ts_öfo
 = 
ëhtoﬁ_›_gë_ts_öfo
,

2393 
	$πl8169_gë_mac_vîsi⁄
(
πl8169_¥iv©e
 *
ç
,

2394 
√t_devi˚
 *
dev
, 
u8
 
deÁu…_vîsi⁄
)

2396 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

2408 c⁄° 
	sπl_mac_öfo
 {

2409 
u32
 
mask
;

2410 
u32
 
vÆ
;

2411 
mac_vîsi⁄
;

2412 } 
mac_öfo
[] = {

2414 { 0x7cf00000, 0x50200000, 
RTL_GIGA_MAC_VER_51
 },

2415 { 0x7cf00000, 0x50100000, 
RTL_GIGA_MAC_VER_50
 },

2416 { 0x7cf00000, 0x50000000, 
RTL_GIGA_MAC_VER_49
 },

2419 { 0x7cf00000, 0x54100000, 
RTL_GIGA_MAC_VER_46
 },

2420 { 0x7cf00000, 0x54000000, 
RTL_GIGA_MAC_VER_45
 },

2423 { 0x7cf00000, 0x5c800000, 
RTL_GIGA_MAC_VER_44
 },

2424 { 0x7cf00000, 0x50900000, 
RTL_GIGA_MAC_VER_42
 },

2425 { 0x7cf00000, 0x4c100000, 
RTL_GIGA_MAC_VER_41
 },

2426 { 0x7cf00000, 0x4c000000, 
RTL_GIGA_MAC_VER_40
 },

2429 { 0x7c800000, 0x48800000, 
RTL_GIGA_MAC_VER_38
 },

2430 { 0x7cf00000, 0x48100000, 
RTL_GIGA_MAC_VER_36
 },

2431 { 0x7cf00000, 0x48000000, 
RTL_GIGA_MAC_VER_35
 },

2434 { 0x7c800000, 0x2c800000, 
RTL_GIGA_MAC_VER_34
 },

2435 { 0x7cf00000, 0x2c200000, 
RTL_GIGA_MAC_VER_33
 },

2436 { 0x7cf00000, 0x2c100000, 
RTL_GIGA_MAC_VER_32
 },

2437 { 0x7c800000, 0x2c000000, 
RTL_GIGA_MAC_VER_33
 },

2440 { 0x7cf00000, 0x28300000, 
RTL_GIGA_MAC_VER_26
 },

2441 { 0x7cf00000, 0x28100000, 
RTL_GIGA_MAC_VER_25
 },

2442 { 0x7c800000, 0x28000000, 
RTL_GIGA_MAC_VER_26
 },

2445 { 0x7cf00000, 0x28800000, 
RTL_GIGA_MAC_VER_27
 },

2446 { 0x7cf00000, 0x28a00000, 
RTL_GIGA_MAC_VER_28
 },

2447 { 0x7cf00000, 0x28b00000, 
RTL_GIGA_MAC_VER_31
 },

2450 { 0x7cf00000, 0x3cb00000, 
RTL_GIGA_MAC_VER_24
 },

2451 { 0x7cf00000, 0x3c900000, 
RTL_GIGA_MAC_VER_23
 },

2452 { 0x7cf00000, 0x3c800000, 
RTL_GIGA_MAC_VER_18
 },

2453 { 0x7c800000, 0x3c800000, 
RTL_GIGA_MAC_VER_24
 },

2454 { 0x7cf00000, 0x3c000000, 
RTL_GIGA_MAC_VER_19
 },

2455 { 0x7cf00000, 0x3c200000, 
RTL_GIGA_MAC_VER_20
 },

2456 { 0x7cf00000, 0x3c300000, 
RTL_GIGA_MAC_VER_21
 },

2457 { 0x7cf00000, 0x3c400000, 
RTL_GIGA_MAC_VER_22
 },

2458 { 0x7c800000, 0x3c000000, 
RTL_GIGA_MAC_VER_22
 },

2461 { 0x7cf00000, 0x38000000, 
RTL_GIGA_MAC_VER_12
 },

2462 { 0x7cf00000, 0x38500000, 
RTL_GIGA_MAC_VER_17
 },

2463 { 0x7c800000, 0x38000000, 
RTL_GIGA_MAC_VER_17
 },

2464 { 0x7c800000, 0x30000000, 
RTL_GIGA_MAC_VER_11
 },

2467 { 0x7cf00000, 0x44900000, 
RTL_GIGA_MAC_VER_39
 },

2468 { 0x7c800000, 0x44800000, 
RTL_GIGA_MAC_VER_39
 },

2469 { 0x7c800000, 0x44000000, 
RTL_GIGA_MAC_VER_37
 },

2470 { 0x7cf00000, 0x40b00000, 
RTL_GIGA_MAC_VER_30
 },

2471 { 0x7cf00000, 0x40a00000, 
RTL_GIGA_MAC_VER_30
 },

2472 { 0x7cf00000, 0x40900000, 
RTL_GIGA_MAC_VER_29
 },

2473 { 0x7c800000, 0x40800000, 
RTL_GIGA_MAC_VER_30
 },

2474 { 0x7cf00000, 0x34a00000, 
RTL_GIGA_MAC_VER_09
 },

2475 { 0x7cf00000, 0x24a00000, 
RTL_GIGA_MAC_VER_09
 },

2476 { 0x7cf00000, 0x34900000, 
RTL_GIGA_MAC_VER_08
 },

2477 { 0x7cf00000, 0x24900000, 
RTL_GIGA_MAC_VER_08
 },

2478 { 0x7cf00000, 0x34800000, 
RTL_GIGA_MAC_VER_07
 },

2479 { 0x7cf00000, 0x24800000, 
RTL_GIGA_MAC_VER_07
 },

2480 { 0x7cf00000, 0x34000000, 
RTL_GIGA_MAC_VER_13
 },

2481 { 0x7cf00000, 0x34300000, 
RTL_GIGA_MAC_VER_10
 },

2482 { 0x7cf00000, 0x34200000, 
RTL_GIGA_MAC_VER_16
 },

2483 { 0x7c800000, 0x34800000, 
RTL_GIGA_MAC_VER_09
 },

2484 { 0x7c800000, 0x24800000, 
RTL_GIGA_MAC_VER_09
 },

2485 { 0x7c800000, 0x34000000, 
RTL_GIGA_MAC_VER_16
 },

2487 { 0xfc800000, 0x38800000, 
RTL_GIGA_MAC_VER_15
 },

2488 { 0xfc800000, 0x30800000, 
RTL_GIGA_MAC_VER_14
 },

2491 { 0xfc800000, 0x98000000, 
RTL_GIGA_MAC_VER_06
 },

2492 { 0xfc800000, 0x18000000, 
RTL_GIGA_MAC_VER_05
 },

2493 { 0xfc800000, 0x10000000, 
RTL_GIGA_MAC_VER_04
 },

2494 { 0xfc800000, 0x04000000, 
RTL_GIGA_MAC_VER_03
 },

2495 { 0xfc800000, 0x00800000, 
RTL_GIGA_MAC_VER_02
 },

2496 { 0xfc800000, 0x00000000, 
RTL_GIGA_MAC_VER_01
 },

2499 { 0x00000000, 0x00000000, 
RTL_GIGA_MAC_NONE
 }

2501 c⁄° 
πl_mac_öfo
 *
p
 = 
mac_öfo
;

2502 
u32
 
ªg
;

2504 
ªg
 = 
	`RTL_R32
(
TxC⁄fig
);

2505 (
ªg
 & 
p
->
mask
Ë!p->
vÆ
)

2506 
p
++;

2507 
ç
->
mac_vîsi⁄
 = 
p
->mac_version;

2509 i‡(
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_NONE
) {

2510 
	`√tif_nŸi˚
(
ç
, 
¥obe
, 
dev
,

2512 
ç
->
mac_vîsi⁄
 = 
deÁu…_vîsi⁄
;

2513 } i‡(
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_42
) {

2514 
ç
->
mac_vîsi⁄
 =Åp->
mii
.
suµ‹ts_gmii
 ?

2515 
RTL_GIGA_MAC_VER_42
 :

2516 
RTL_GIGA_MAC_VER_43
;

2517 } i‡(
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_45
) {

2518 
ç
->
mac_vîsi⁄
 =Åp->
mii
.
suµ‹ts_gmii
 ?

2519 
RTL_GIGA_MAC_VER_45
 :

2520 
RTL_GIGA_MAC_VER_47
;

2521 } i‡(
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_46
) {

2522 
ç
->
mac_vîsi⁄
 =Åp->
mii
.
suµ‹ts_gmii
 ?

2523 
RTL_GIGA_MAC_VER_46
 :

2524 
RTL_GIGA_MAC_VER_48
;

2526 
	}
}

2528 
	$πl8169_¥öt_mac_vîsi⁄
(
πl8169_¥iv©e
 *
ç
)

2530 
	`d¥ötk
("mac_vîsi⁄ = 0x%02x\n", 
ç
->
mac_vîsi⁄
);

2531 
	}
}

2533 
	sphy_ªg
 {

2534 
u16
 
	mªg
;

2535 
u16
 
	mvÆ
;

2538 
	$πl_wrôïhy_b©ch
(
πl8169_¥iv©e
 *
ç
,

2539 c⁄° 
phy_ªg
 *
ªgs
, 
Àn
)

2541 
Àn
-- > 0) {

2542 
	`πl_wrôïhy
(
ç
, 
ªgs
->
ªg
,Ñegs->
vÆ
);

2543 
ªgs
++;

2545 
	}
}

2547 
	#PHY_READ
 0x00000000

	)

2548 
	#PHY_DATA_OR
 0x10000000

	)

2549 
	#PHY_DATA_AND
 0x20000000

	)

2550 
	#PHY_BJMPN
 0x30000000

	)

2551 
	#PHY_MDIO_CHG
 0x40000000

	)

2552 
	#PHY_CLEAR_READCOUNT
 0x70000000

	)

2553 
	#PHY_WRITE
 0x80000000

	)

2554 
	#PHY_READCOUNT_EQ_SKIP
 0x90000000

	)

2555 
	#PHY_COMP_EQ_SKIPN
 0xa0000000

	)

2556 
	#PHY_COMP_NEQ_SKIPN
 0xb0000000

	)

2557 
	#PHY_WRITE_PREVIOUS
 0xc0000000

	)

2558 
	#PHY_SKIPN
 0xd0000000

	)

2559 
	#PHY_DELAY_MS
 0xe0000000

	)

2561 
	sfw_öfo
 {

2562 
u32
 
	mmagic
;

2563 
	mvîsi⁄
[
RTL_VER_SIZE
];

2564 
__À32
 
	mfw_°¨t
;

2565 
__À32
 
	mfw_Àn
;

2566 
u8
 
	mchksum
;

2567 } 
	g__∑cked
;

2569 
	#FW_OPCODE_SIZE
 (
	`ty≥of
(*((
πl_fw_phy_a˘i⁄
 *)0)->
code
))

	)

2571 
boﬁ
 
	$πl_fw_f‹m©_ok
(
πl8169_¥iv©e
 *
ç
, 
πl_fw
 *rtl_fw)

2573 c⁄° 
fúmw¨e
 *
fw
 = 
πl_fw
->fw;

2574 
fw_öfo
 *fw_öfÿ(fw_öfÿ*)
fw
->
d©a
;

2575 
πl_fw_phy_a˘i⁄
 *
∑
 = &
πl_fw
->
phy_a˘i⁄
;

2576 *
vîsi⁄
 = 
πl_fw
->version;

2577 
boﬁ
 
rc
 = 
Ál£
;

2579 i‡(
fw
->
size
 < 
FW_OPCODE_SIZE
)

2580 
out
;

2582 i‡(!
fw_öfo
->
magic
) {

2583 
size_t
 
i
, 
size
, 
°¨t
;

2584 
u8
 
checksum
 = 0;

2586 i‡(
fw
->
size
 < (*
fw_öfo
))

2587 
out
;

2589 
i
 = 0; i < 
fw
->
size
; i++)

2590 
checksum
 +
fw
->
d©a
[
i
];

2591 i‡(
checksum
 != 0)

2592 
out
;

2594 
°¨t
 = 
	`À32_to_˝u
(
fw_öfo
->
fw_°¨t
);

2595 i‡(
°¨t
 > 
fw
->
size
)

2596 
out
;

2598 
size
 = 
	`À32_to_˝u
(
fw_öfo
->
fw_Àn
);

2599 i‡(
size
 > (
fw
->sizê- 
°¨t
Ë/ 
FW_OPCODE_SIZE
)

2600 
out
;

2602 
	`mem˝y
(
vîsi⁄
, 
fw_öfo
->vîsi⁄, 
RTL_VER_SIZE
);

2604 
∑
->
code
 = (
__À32
 *)(
fw
->
d©a
 + 
°¨t
);

2605 
∑
->
size
 = size;

2607 i‡(
fw
->
size
 % 
FW_OPCODE_SIZE
)

2608 
out
;

2610 
	`°æ˝y
(
vîsi⁄
, 
	`πl_lookup_fúmw¨e_«me
(
ç
), 
RTL_VER_SIZE
);

2612 
∑
->
code
 = (
__À32
 *)
fw
->
d©a
;

2613 
∑
->
size
 = 
fw
->sizê/ 
FW_OPCODE_SIZE
;

2615 
vîsi⁄
[
RTL_VER_SIZE
 - 1] = 0;

2617 
rc
 = 
åue
;

2618 
out
:

2619  
rc
;

2620 
	}
}

2622 
boﬁ
 
	$πl_fw_d©a_ok
(
πl8169_¥iv©e
 *
ç
, 
√t_devi˚
 *
dev
,

2623 
πl_fw_phy_a˘i⁄
 *
∑
)

2625 
boﬁ
 
rc
 = 
Ál£
;

2626 
size_t
 
ödex
;

2628 
ödex
 = 0; index < 
∑
->
size
; index++) {

2629 
u32
 
a˘i⁄
 = 
	`À32_to_˝u
(
∑
->
code
[
ödex
]);

2630 
u32
 
ªgno
 = (
a˘i⁄
 & 0x0fff0000) >> 16;

2632 
a˘i⁄
 & 0xf0000000) {

2633 
PHY_READ
:

2634 
PHY_DATA_OR
:

2635 
PHY_DATA_AND
:

2636 
PHY_MDIO_CHG
:

2637 
PHY_CLEAR_READCOUNT
:

2638 
PHY_WRITE
:

2639 
PHY_WRITE_PREVIOUS
:

2640 
PHY_DELAY_MS
:

2643 
PHY_BJMPN
:

2644 i‡(
ªgno
 > 
ödex
) {

2645 
	`√tif_îr
(
ç
, 
ifup
,Åp->
dev
,

2647 
out
;

2650 
PHY_READCOUNT_EQ_SKIP
:

2651 i‡(
ödex
 + 2 >
∑
->
size
) {

2652 
	`√tif_îr
(
ç
, 
ifup
,Åp->
dev
,

2654 
out
;

2657 
PHY_COMP_EQ_SKIPN
:

2658 
PHY_COMP_NEQ_SKIPN
:

2659 
PHY_SKIPN
:

2660 i‡(
ödex
 + 1 + 
ªgno
 >
∑
->
size
) {

2661 
	`√tif_îr
(
ç
, 
ifup
,Åp->
dev
,

2663 
out
;

2668 
	`√tif_îr
(
ç
, 
ifup
,Åp->
dev
,

2669 "InvÆidá˘i⁄ 0x%08x\n", 
a˘i⁄
);

2670 
out
;

2673 
rc
 = 
åue
;

2674 
out
:

2675  
rc
;

2676 
	}
}

2678 
	$πl_check_fúmw¨e
(
πl8169_¥iv©e
 *
ç
, 
πl_fw
 *rtl_fw)

2680 
√t_devi˚
 *
dev
 = 
ç
->dev;

2681 
rc
 = -
EINVAL
;

2683 i‡(!
	`πl_fw_f‹m©_ok
(
ç
, 
πl_fw
)) {

2684 
	`√tif_îr
(
ç
, 
ifup
, 
dev
, "invalid firmware\n");

2685 
out
;

2688 i‡(
	`πl_fw_d©a_ok
(
ç
, 
dev
, &
πl_fw
->
phy_a˘i⁄
))

2689 
rc
 = 0;

2690 
out
:

2691  
rc
;

2692 
	}
}

2694 
	$πl_phy_wrôe_fw
(
πl8169_¥iv©e
 *
ç
, 
πl_fw
 *rtl_fw)

2696 
πl_fw_phy_a˘i⁄
 *
∑
 = &
πl_fw
->
phy_a˘i⁄
;

2697 
mdio_›s
 
‹g
, *
›s
 = &
ç
->mdio_ops;

2698 
u32
 
¥ed©a
, 
cou¡
;

2699 
size_t
 
ödex
;

2701 
¥ed©a
 = 
cou¡
 = 0;

2702 
‹g
.
wrôe
 = 
›s
->write;

2703 
‹g
.
ªad
 = 
›s
->read;

2705 
ödex
 = 0; index < 
∑
->
size
; ) {

2706 
u32
 
a˘i⁄
 = 
	`À32_to_˝u
(
∑
->
code
[
ödex
]);

2707 
u32
 
d©a
 = 
a˘i⁄
 & 0x0000ffff;

2708 
u32
 
ªgno
 = (
a˘i⁄
 & 0x0fff0000) >> 16;

2710 i‡(!
a˘i⁄
)

2713 
a˘i⁄
 & 0xf0000000) {

2714 
PHY_READ
:

2715 
¥ed©a
 = 
	`πl_ªadphy
(
ç
, 
ªgno
);

2716 
cou¡
++;

2717 
ödex
++;

2719 
PHY_DATA_OR
:

2720 
¥ed©a
 |
d©a
;

2721 
ödex
++;

2723 
PHY_DATA_AND
:

2724 
¥ed©a
 &
d©a
;

2725 
ödex
++;

2727 
PHY_BJMPN
:

2728 
ödex
 -
ªgno
;

2730 
PHY_MDIO_CHG
:

2731 i‡(
d©a
 == 0) {

2732 
›s
->
wrôe
 = 
‹g
.write;

2733 
›s
->
ªad
 = 
‹g
.read;

2734 } i‡(
d©a
 == 1) {

2735 
›s
->
wrôe
 = 
mac_mcu_wrôe
;

2736 
›s
->
ªad
 = 
mac_mcu_ªad
;

2739 
ödex
++;

2741 
PHY_CLEAR_READCOUNT
:

2742 
cou¡
 = 0;

2743 
ödex
++;

2745 
PHY_WRITE
:

2746 
	`πl_wrôïhy
(
ç
, 
ªgno
, 
d©a
);

2747 
ödex
++;

2749 
PHY_READCOUNT_EQ_SKIP
:

2750 
ödex
 +(
cou¡
 =
d©a
) ? 2 : 1;

2752 
PHY_COMP_EQ_SKIPN
:

2753 i‡(
¥ed©a
 =
d©a
)

2754 
ödex
 +
ªgno
;

2755 
ödex
++;

2757 
PHY_COMP_NEQ_SKIPN
:

2758 i‡(
¥ed©a
 !
d©a
)

2759 
ödex
 +
ªgno
;

2760 
ödex
++;

2762 
PHY_WRITE_PREVIOUS
:

2763 
	`πl_wrôïhy
(
ç
, 
ªgno
, 
¥ed©a
);

2764 
ödex
++;

2766 
PHY_SKIPN
:

2767 
ödex
 +
ªgno
 + 1;

2769 
PHY_DELAY_MS
:

2770 
	`mdñay
(
d©a
);

2771 
ödex
++;

2775 
	`BUG
();

2779 
›s
->
wrôe
 = 
‹g
.write;

2780 
›s
->
ªad
 = 
‹g
.read;

2781 
	}
}

2783 
	$πl_ªÀa£_fúmw¨e
(
πl8169_¥iv©e
 *
ç
)

2785 i‡(!
	`IS_ERR_OR_NULL
(
ç
->
πl_fw
)) {

2786 
	`ªÀa£_fúmw¨e
(
ç
->
πl_fw
->
fw
);

2787 
	`k‰ì
(
ç
->
πl_fw
);

2789 
ç
->
πl_fw
 = 
RTL_FIRMWARE_UNKNOWN
;

2790 
	}
}

2792 
	$πl_≠∂y_fúmw¨e
(
πl8169_¥iv©e
 *
ç
)

2794 
πl_fw
 *πl_fw = 
ç
->rtl_fw;

2797 i‡(!
	`IS_ERR_OR_NULL
(
πl_fw
))

2798 
	`πl_phy_wrôe_fw
(
ç
, 
πl_fw
);

2799 
	}
}

2801 
	$πl_≠∂y_fúmw¨e_c⁄d
(
πl8169_¥iv©e
 *
ç
, 
u8
 
ªg
, 
u16
 
vÆ
)

2803 i‡(
	`πl_ªadphy
(
ç
, 
ªg
Ë!
vÆ
)

2804 
	`√tif_w¨n
(
ç
, 
hw
,Åp->
dev
, "chipsetÇotÑeady for firmware\n");

2806 
	`πl_≠∂y_fúmw¨e
(
ç
);

2807 
	}
}

2809 
	$πl8169s_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

2811 c⁄° 
phy_ªg
 
phy_ªg_öô
[] = {

2873 
	`πl_wrôïhy_b©ch
(
ç
, 
phy_ªg_öô
, 
	`ARRAY_SIZE
(phy_reg_init));

2874 
	}
}

2876 
	$πl8169sb_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

2878 c⁄° 
phy_ªg
 
phy_ªg_öô
[] = {

2884 
	`πl_wrôïhy_b©ch
(
ç
, 
phy_ªg_öô
, 
	`ARRAY_SIZE
(phy_reg_init));

2885 
	}
}

2887 
	$πl8169scd_hw_phy_c⁄fig_quúk
(
πl8169_¥iv©e
 *
ç
)

2889 
pci_dev
 *
pdev
 = 
ç
->pci_dev;

2891 i‡((
pdev
->
subsy°em_víd‹
 !
PCI_VENDOR_ID_GIGABYTE
) ||

2892 (
pdev
->
subsy°em_devi˚
 != 0xe000))

2895 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0001);

2896 
	`πl_wrôïhy
(
ç
, 0x10, 0xf01b);

2897 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

2898 
	}
}

2900 
	$πl8169scd_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

2902 c⁄° 
phy_ªg
 
phy_ªg_öô
[] = {

2942 
	`πl_wrôïhy_b©ch
(
ç
, 
phy_ªg_öô
, 
	`ARRAY_SIZE
(phy_reg_init));

2944 
	`πl8169scd_hw_phy_c⁄fig_quúk
(
ç
);

2945 
	}
}

2947 
	$πl8169s˚_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

2949 c⁄° 
phy_ªg
 
phy_ªg_öô
[] = {

2997 
	`πl_wrôïhy_b©ch
(
ç
, 
phy_ªg_öô
, 
	`ARRAY_SIZE
(phy_reg_init));

2998 
	}
}

3000 
	$πl8168bb_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

3002 c⁄° 
phy_ªg
 
phy_ªg_öô
[] = {

3007 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0001);

3008 
	`πl_∑tchphy
(
ç
, 0x16, 1 << 0);

3010 
	`πl_wrôïhy_b©ch
(
ç
, 
phy_ªg_öô
, 
	`ARRAY_SIZE
(phy_reg_init));

3011 
	}
}

3013 
	$πl8168bef_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

3015 c⁄° 
phy_ªg
 
phy_ªg_öô
[] = {

3021 
	`πl_wrôïhy_b©ch
(
ç
, 
phy_ªg_öô
, 
	`ARRAY_SIZE
(phy_reg_init));

3022 
	}
}

3024 
	$πl8168˝_1_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

3026 c⁄° 
phy_ªg
 
phy_ªg_öô
[] = {

3034 
	`πl_wrôïhy_b©ch
(
ç
, 
phy_ªg_öô
, 
	`ARRAY_SIZE
(phy_reg_init));

3035 
	}
}

3037 
	$πl8168˝_2_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

3039 c⁄° 
phy_ªg
 
phy_ªg_öô
[] = {

3045 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3046 
	`πl_∑tchphy
(
ç
, 0x14, 1 << 5);

3047 
	`πl_∑tchphy
(
ç
, 0x0d, 1 << 5);

3049 
	`πl_wrôïhy_b©ch
(
ç
, 
phy_ªg_öô
, 
	`ARRAY_SIZE
(phy_reg_init));

3050 
	}
}

3052 
	$πl8168c_1_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

3054 c⁄° 
phy_ªg
 
phy_ªg_öô
[] = {

3074 
	`πl_wrôïhy_b©ch
(
ç
, 
phy_ªg_öô
, 
	`ARRAY_SIZE
(phy_reg_init));

3076 
	`πl_∑tchphy
(
ç
, 0x14, 1 << 5);

3077 
	`πl_∑tchphy
(
ç
, 0x0d, 1 << 5);

3078 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3079 
	}
}

3081 
	$πl8168c_2_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

3083 c⁄° 
phy_ªg
 
phy_ªg_öô
[] = {

3101 
	`πl_wrôïhy_b©ch
(
ç
, 
phy_ªg_öô
, 
	`ARRAY_SIZE
(phy_reg_init));

3103 
	`πl_∑tchphy
(
ç
, 0x16, 1 << 0);

3104 
	`πl_∑tchphy
(
ç
, 0x14, 1 << 5);

3105 
	`πl_∑tchphy
(
ç
, 0x0d, 1 << 5);

3106 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3107 
	}
}

3109 
	$πl8168c_3_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

3111 c⁄° 
phy_ªg
 
phy_ªg_öô
[] = {

3123 
	`πl_wrôïhy_b©ch
(
ç
, 
phy_ªg_öô
, 
	`ARRAY_SIZE
(phy_reg_init));

3125 
	`πl_∑tchphy
(
ç
, 0x16, 1 << 0);

3126 
	`πl_∑tchphy
(
ç
, 0x14, 1 << 5);

3127 
	`πl_∑tchphy
(
ç
, 0x0d, 1 << 5);

3128 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3129 
	}
}

3131 
	$πl8168c_4_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

3133 
	`πl8168c_3_hw_phy_c⁄fig
(
ç
);

3134 
	}
}

3136 
	$πl8168d_1_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

3138 c⁄° 
phy_ªg
 
phy_ªg_öô_0
[] = {

3179 
	`πl_wrôïhy_b©ch
(
ç
, 
phy_ªg_öô_0
, 
	`ARRAY_SIZE
(phy_reg_init_0));

3185 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0002);

3186 
	`πl_w0w1_phy
(
ç
, 0x0b, 0x0010, 0x00ef);

3187 
	`πl_w0w1_phy
(
ç
, 0x0c, 0xa200, 0x5d00);

3189 i‡(
	`πl8168d_efu£_ªad
(
ç
, 0x01) == 0xb1) {

3190 c⁄° 
phy_ªg
 
phy_ªg_öô
[] = {

3198 
vÆ
;

3200 
	`πl_wrôïhy_b©ch
(
ç
, 
phy_ªg_öô
, 
	`ARRAY_SIZE
(phy_reg_init));

3202 
vÆ
 = 
	`πl_ªadphy
(
ç
, 0x0d);

3204 i‡((
vÆ
 & 0x00ff) != 0x006c) {

3205 c⁄° 
u32
 
£t
[] = {

3209 
i
;

3211 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0002);

3213 
vÆ
 &= 0xff00;

3214 
i
 = 0; i < 
	`ARRAY_SIZE
(
£t
); i++)

3215 
	`πl_wrôïhy
(
ç
, 0x0d, 
vÆ
 | 
£t
[
i
]);

3218 c⁄° 
phy_ªg
 
phy_ªg_öô
[] = {

3226 
	`πl_wrôïhy_b©ch
(
ç
, 
phy_ªg_öô
, 
	`ARRAY_SIZE
(phy_reg_init));

3230 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0002);

3231 
	`πl_∑tchphy
(
ç
, 0x0d, 0x0300);

3232 
	`πl_∑tchphy
(
ç
, 0x0f, 0x0010);

3235 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0002);

3236 
	`πl_w0w1_phy
(
ç
, 0x02, 0x0100, 0x0600);

3237 
	`πl_w0w1_phy
(
ç
, 0x03, 0x0000, 0xe000);

3239 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0005);

3240 
	`πl_wrôïhy
(
ç
, 0x05, 0x001b);

3242 
	`πl_≠∂y_fúmw¨e_c⁄d
(
ç
, 
MII_EXPANSION
, 0xbf00);

3244 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3245 
	}
}

3247 
	$πl8168d_2_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

3249 c⁄° 
phy_ªg
 
phy_ªg_öô_0
[] = {

3290 
	`πl_wrôïhy_b©ch
(
ç
, 
phy_ªg_öô_0
, 
	`ARRAY_SIZE
(phy_reg_init_0));

3292 i‡(
	`πl8168d_efu£_ªad
(
ç
, 0x01) == 0xb1) {

3293 c⁄° 
phy_ªg
 
phy_ªg_öô
[] = {

3302 
vÆ
;

3304 
	`πl_wrôïhy_b©ch
(
ç
, 
phy_ªg_öô
, 
	`ARRAY_SIZE
(phy_reg_init));

3306 
vÆ
 = 
	`πl_ªadphy
(
ç
, 0x0d);

3307 i‡((
vÆ
 & 0x00ff) != 0x006c) {

3308 c⁄° 
u32
 
£t
[] = {

3312 
i
;

3314 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0002);

3316 
vÆ
 &= 0xff00;

3317 
i
 = 0; i < 
	`ARRAY_SIZE
(
£t
); i++)

3318 
	`πl_wrôïhy
(
ç
, 0x0d, 
vÆ
 | 
£t
[
i
]);

3321 c⁄° 
phy_ªg
 
phy_ªg_öô
[] = {

3329 
	`πl_wrôïhy_b©ch
(
ç
, 
phy_ªg_öô
, 
	`ARRAY_SIZE
(phy_reg_init));

3333 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0002);

3334 
	`πl_w0w1_phy
(
ç
, 0x02, 0x0100, 0x0600);

3335 
	`πl_w0w1_phy
(
ç
, 0x03, 0x0000, 0xe000);

3338 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0002);

3339 
	`πl_∑tchphy
(
ç
, 0x0f, 0x0017);

3341 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0005);

3342 
	`πl_wrôïhy
(
ç
, 0x05, 0x001b);

3344 
	`πl_≠∂y_fúmw¨e_c⁄d
(
ç
, 
MII_EXPANSION
, 0xb300);

3346 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3347 
	}
}

3349 
	$πl8168d_3_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

3351 c⁄° 
phy_ªg
 
phy_ªg_öô
[] = {

3407 
	`πl_wrôïhy_b©ch
(
ç
, 
phy_ªg_öô
, 
	`ARRAY_SIZE
(phy_reg_init));

3408 
	}
}

3410 
	$πl8168d_4_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

3412 c⁄° 
phy_ªg
 
phy_ªg_öô
[] = {

3422 
	`πl_wrôïhy_b©ch
(
ç
, 
phy_ªg_öô
, 
	`ARRAY_SIZE
(phy_reg_init));

3423 
	`πl_∑tchphy
(
ç
, 0x0d, 1 << 5);

3424 
	}
}

3426 
	$πl8168e_1_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

3428 c⁄° 
phy_ªg
 
phy_ªg_öô
[] = {

3456 
	`πl_≠∂y_fúmw¨e
(
ç
);

3458 
	`πl_wrôïhy_b©ch
(
ç
, 
phy_ªg_öô
, 
	`ARRAY_SIZE
(phy_reg_init));

3461 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0007);

3462 
	`πl_wrôïhy
(
ç
, 0x1e, 0x0023);

3463 
	`πl_w0w1_phy
(
ç
, 0x17, 0x0006, 0x0000);

3464 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3467 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0002);

3468 
	`πl_w0w1_phy
(
ç
, 0x08, 0x8000, 0x7f00);

3469 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3472 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0007);

3473 
	`πl_wrôïhy
(
ç
, 0x1e, 0x002d);

3474 
	`πl_w0w1_phy
(
ç
, 0x18, 0x0050, 0x0000);

3475 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3476 
	`πl_w0w1_phy
(
ç
, 0x14, 0x8000, 0x0000);

3478 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0005);

3479 
	`πl_wrôïhy
(
ç
, 0x05, 0x8b86);

3480 
	`πl_w0w1_phy
(
ç
, 0x06, 0x0001, 0x0000);

3481 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3483 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0005);

3484 
	`πl_wrôïhy
(
ç
, 0x05, 0x8b85);

3485 
	`πl_w0w1_phy
(
ç
, 0x06, 0x0000, 0x2000);

3486 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0007);

3487 
	`πl_wrôïhy
(
ç
, 0x1e, 0x0020);

3488 
	`πl_w0w1_phy
(
ç
, 0x15, 0x0000, 0x1100);

3489 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0006);

3490 
	`πl_wrôïhy
(
ç
, 0x00, 0x5a00);

3491 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3492 
	`πl_wrôïhy
(
ç
, 0x0d, 0x0007);

3493 
	`πl_wrôïhy
(
ç
, 0x0e, 0x003c);

3494 
	`πl_wrôïhy
(
ç
, 0x0d, 0x4007);

3495 
	`πl_wrôïhy
(
ç
, 0x0e, 0x0000);

3496 
	`πl_wrôïhy
(
ç
, 0x0d, 0x0000);

3497 
	}
}

3499 
	$πl_ør_exgmac_£t
(
πl8169_¥iv©e
 *
ç
, 
u8
 *
addr
)

3501 c⁄° 
u16
 
w
[] = {

3502 
addr
[0] | (addr[1] << 8),

3503 
addr
[2] | (addr[3] << 8),

3504 
addr
[4] | (addr[5] << 8)

3506 c⁄° 
exgmac_ªg
 
e
[] = {

3507 { .
addr
 = 0xe0, 
ERIAR_MASK_1111
, .
vÆ
 = 
w
[0] | (w[1] << 16) },

3508 { .
addr
 = 0xe4, 
ERIAR_MASK_1111
, .
vÆ
 = 
w
[2] },

3509 { .
addr
 = 0xf0, 
ERIAR_MASK_1111
, .
vÆ
 = 
w
[0] << 16 },

3510 { .
addr
 = 0xf4, 
ERIAR_MASK_1111
, .
vÆ
 = 
w
[1] | (w[2] << 16) }

3513 
	`πl_wrôe_exgmac_b©ch
(
ç
, 
e
, 
	`ARRAY_SIZE
(e));

3514 
	}
}

3516 
	$πl8168e_2_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

3518 c⁄° 
phy_ªg
 
phy_ªg_öô
[] = {

3545 
	`πl_≠∂y_fúmw¨e
(
ç
);

3547 
	`πl_wrôïhy_b©ch
(
ç
, 
phy_ªg_öô
, 
	`ARRAY_SIZE
(phy_reg_init));

3550 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0005);

3551 
	`πl_wrôïhy
(
ç
, 0x05, 0x8b80);

3552 
	`πl_w0w1_phy
(
ç
, 0x17, 0x0006, 0x0000);

3553 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3556 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0004);

3557 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0007);

3558 
	`πl_wrôïhy
(
ç
, 0x1e, 0x002d);

3559 
	`πl_w0w1_phy
(
ç
, 0x18, 0x0010, 0x0000);

3560 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0002);

3561 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3562 
	`πl_w0w1_phy
(
ç
, 0x14, 0x8000, 0x0000);

3565 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0005);

3566 
	`πl_wrôïhy
(
ç
, 0x05, 0x8b86);

3567 
	`πl_w0w1_phy
(
ç
, 0x06, 0x0001, 0x0000);

3568 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3571 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0005);

3572 
	`πl_wrôïhy
(
ç
, 0x05, 0x8b85);

3573 
	`πl_w0w1_phy
(
ç
, 0x06, 0x4000, 0x0000);

3574 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3577 
	`πl_w0w1_îi
(
ç
, 0x1b0, 
ERIAR_MASK_1111
, 0x0000, 0x0003, 
ERIAR_EXGMAC
);

3578 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0005);

3579 
	`πl_wrôïhy
(
ç
, 0x05, 0x8b85);

3580 
	`πl_w0w1_phy
(
ç
, 0x06, 0x0000, 0x2000);

3581 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0004);

3582 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0007);

3583 
	`πl_wrôïhy
(
ç
, 0x1e, 0x0020);

3584 
	`πl_w0w1_phy
(
ç
, 0x15, 0x0000, 0x0100);

3585 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0002);

3586 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3587 
	`πl_wrôïhy
(
ç
, 0x0d, 0x0007);

3588 
	`πl_wrôïhy
(
ç
, 0x0e, 0x003c);

3589 
	`πl_wrôïhy
(
ç
, 0x0d, 0x4007);

3590 
	`πl_wrôïhy
(
ç
, 0x0e, 0x0000);

3591 
	`πl_wrôïhy
(
ç
, 0x0d, 0x0000);

3594 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0003);

3595 
	`πl_w0w1_phy
(
ç
, 0x19, 0x0000, 0x0001);

3596 
	`πl_w0w1_phy
(
ç
, 0x10, 0x0000, 0x0400);

3597 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3600 
	`πl_ør_exgmac_£t
(
ç
,Åp->
dev
->
dev_addr
);

3601 
	}
}

3603 
	$πl8168f_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

3606 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0005);

3607 
	`πl_wrôïhy
(
ç
, 0x05, 0x8b80);

3608 
	`πl_w0w1_phy
(
ç
, 0x06, 0x0006, 0x0000);

3609 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3612 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0007);

3613 
	`πl_wrôïhy
(
ç
, 0x1e, 0x002d);

3614 
	`πl_w0w1_phy
(
ç
, 0x18, 0x0010, 0x0000);

3615 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3616 
	`πl_w0w1_phy
(
ç
, 0x14, 0x8000, 0x0000);

3619 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0005);

3620 
	`πl_wrôïhy
(
ç
, 0x05, 0x8b86);

3621 
	`πl_w0w1_phy
(
ç
, 0x06, 0x0001, 0x0000);

3622 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3623 
	}
}

3625 
	$πl8168f_1_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

3627 c⁄° 
phy_ªg
 
phy_ªg_öô
[] = {

3662 
	`πl_≠∂y_fúmw¨e
(
ç
);

3664 
	`πl_wrôïhy_b©ch
(
ç
, 
phy_ªg_öô
, 
	`ARRAY_SIZE
(phy_reg_init));

3666 
	`πl8168f_hw_phy_c⁄fig
(
ç
);

3669 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0005);

3670 
	`πl_wrôïhy
(
ç
, 0x05, 0x8b85);

3671 
	`πl_w0w1_phy
(
ç
, 0x06, 0x4000, 0x0000);

3672 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3673 
	}
}

3675 
	$πl8168f_2_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

3677 
	`πl_≠∂y_fúmw¨e
(
ç
);

3679 
	`πl8168f_hw_phy_c⁄fig
(
ç
);

3680 
	}
}

3682 
	$πl8411_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

3684 c⁄° 
phy_ªg
 
phy_ªg_öô
[] = {

3720 
	`πl_≠∂y_fúmw¨e
(
ç
);

3722 
	`πl8168f_hw_phy_c⁄fig
(
ç
);

3725 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0005);

3726 
	`πl_wrôïhy
(
ç
, 0x05, 0x8b85);

3727 
	`πl_w0w1_phy
(
ç
, 0x06, 0x4000, 0x0000);

3728 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3730 
	`πl_wrôïhy_b©ch
(
ç
, 
phy_ªg_öô
, 
	`ARRAY_SIZE
(phy_reg_init));

3733 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0005);

3734 
	`πl_wrôïhy
(
ç
, 0x05, 0x8b54);

3735 
	`πl_w0w1_phy
(
ç
, 0x06, 0x0000, 0x0800);

3736 
	`πl_wrôïhy
(
ç
, 0x05, 0x8b5d);

3737 
	`πl_w0w1_phy
(
ç
, 0x06, 0x0000, 0x0800);

3738 
	`πl_wrôïhy
(
ç
, 0x05, 0x8a7c);

3739 
	`πl_w0w1_phy
(
ç
, 0x06, 0x0000, 0x0100);

3740 
	`πl_wrôïhy
(
ç
, 0x05, 0x8a7f);

3741 
	`πl_w0w1_phy
(
ç
, 0x06, 0x0100, 0x0000);

3742 
	`πl_wrôïhy
(
ç
, 0x05, 0x8a82);

3743 
	`πl_w0w1_phy
(
ç
, 0x06, 0x0000, 0x0100);

3744 
	`πl_wrôïhy
(
ç
, 0x05, 0x8a85);

3745 
	`πl_w0w1_phy
(
ç
, 0x06, 0x0000, 0x0100);

3746 
	`πl_wrôïhy
(
ç
, 0x05, 0x8a88);

3747 
	`πl_w0w1_phy
(
ç
, 0x06, 0x0000, 0x0100);

3748 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3751 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0005);

3752 
	`πl_wrôïhy
(
ç
, 0x05, 0x8b85);

3753 
	`πl_w0w1_phy
(
ç
, 0x06, 0x8000, 0x0000);

3754 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3757 
	`πl_w0w1_îi
(
ç
, 0x1b0, 
ERIAR_MASK_0001
, 0x00, 0x03, 
ERIAR_EXGMAC
);

3758 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0005);

3759 
	`πl_wrôïhy
(
ç
, 0x05, 0x8b85);

3760 
	`πl_w0w1_phy
(
ç
, 0x06, 0x0000, 0x2000);

3761 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0004);

3762 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0007);

3763 
	`πl_wrôïhy
(
ç
, 0x1e, 0x0020);

3764 
	`πl_w0w1_phy
(
ç
, 0x15, 0x0000, 0x0100);

3765 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3766 
	`πl_wrôïhy
(
ç
, 0x0d, 0x0007);

3767 
	`πl_wrôïhy
(
ç
, 0x0e, 0x003c);

3768 
	`πl_wrôïhy
(
ç
, 0x0d, 0x4007);

3769 
	`πl_wrôïhy
(
ç
, 0x0e, 0x0000);

3770 
	`πl_wrôïhy
(
ç
, 0x0d, 0x0000);

3773 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0003);

3774 
	`πl_w0w1_phy
(
ç
, 0x19, 0x0000, 0x0001);

3775 
	`πl_w0w1_phy
(
ç
, 0x10, 0x0000, 0x0400);

3776 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3777 
	}
}

3779 
	$πl8168g_1_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

3781 
	`πl_≠∂y_fúmw¨e
(
ç
);

3783 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a46);

3784 i‡(
	`πl_ªadphy
(
ç
, 0x10) & 0x0100) {

3785 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0bcc);

3786 
	`πl_w0w1_phy
(
ç
, 0x12, 0x0000, 0x8000);

3788 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0bcc);

3789 
	`πl_w0w1_phy
(
ç
, 0x12, 0x8000, 0x0000);

3792 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a46);

3793 i‡(
	`πl_ªadphy
(
ç
, 0x13) & 0x0100) {

3794 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0c41);

3795 
	`πl_w0w1_phy
(
ç
, 0x15, 0x0002, 0x0000);

3797 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0c41);

3798 
	`πl_w0w1_phy
(
ç
, 0x15, 0x0000, 0x0002);

3802 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a44);

3803 
	`πl_w0w1_phy
(
ç
, 0x11, 0x000c, 0x0000);

3805 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0bcc);

3806 
	`πl_w0w1_phy
(
ç
, 0x14, 0x0100, 0x0000);

3807 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a44);

3808 
	`πl_w0w1_phy
(
ç
, 0x11, 0x00c0, 0x0000);

3809 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a43);

3810 
	`πl_wrôïhy
(
ç
, 0x13, 0x8084);

3811 
	`πl_w0w1_phy
(
ç
, 0x14, 0x0000, 0x6000);

3812 
	`πl_w0w1_phy
(
ç
, 0x10, 0x1003, 0x0000);

3815 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a4b);

3816 
	`πl_w0w1_phy
(
ç
, 0x11, 0x0004, 0x0000);

3819 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a43);

3820 
	`πl_wrôïhy
(
ç
, 0x13, 0x8012);

3821 
	`πl_w0w1_phy
(
ç
, 0x14, 0x8000, 0x0000);

3823 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0c42);

3824 
	`πl_w0w1_phy
(
ç
, 0x11, 0x4000, 0x2000);

3827 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0bcd);

3828 
	`πl_wrôïhy
(
ç
, 0x14, 0x5065);

3829 
	`πl_wrôïhy
(
ç
, 0x14, 0xd065);

3830 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0bc8);

3831 
	`πl_wrôïhy
(
ç
, 0x11, 0x5655);

3832 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0bcd);

3833 
	`πl_wrôïhy
(
ç
, 0x14, 0x1065);

3834 
	`πl_wrôïhy
(
ç
, 0x14, 0x9065);

3835 
	`πl_wrôïhy
(
ç
, 0x14, 0x1065);

3838 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a43);

3839 i‡(
	`πl_ªadphy
(
ç
, 0x10) & 0x0004)

3840 
	`πl_w0w1_phy
(
ç
, 0x10, 0x0000, 0x0004);

3842 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3843 
	}
}

3845 
	$πl8168g_2_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

3847 
	`πl_≠∂y_fúmw¨e
(
ç
);

3848 
	}
}

3850 
	$πl8168h_1_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

3852 
u16
 
dout_èpbö
;

3853 
u32
 
d©a
;

3855 
	`πl_≠∂y_fúmw¨e
(
ç
);

3858 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a43);

3859 
	`πl_wrôïhy
(
ç
, 0x13, 0x809b);

3860 
	`πl_w0w1_phy
(
ç
, 0x14, 0x8000, 0xf800);

3861 
	`πl_wrôïhy
(
ç
, 0x13, 0x80a2);

3862 
	`πl_w0w1_phy
(
ç
, 0x14, 0x8000, 0xff00);

3863 
	`πl_wrôïhy
(
ç
, 0x13, 0x80a4);

3864 
	`πl_w0w1_phy
(
ç
, 0x14, 0x8500, 0xff00);

3865 
	`πl_wrôïhy
(
ç
, 0x13, 0x809c);

3866 
	`πl_w0w1_phy
(
ç
, 0x14, 0xbd00, 0xff00);

3867 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3870 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a43);

3871 
	`πl_wrôïhy
(
ç
, 0x13, 0x80ad);

3872 
	`πl_w0w1_phy
(
ç
, 0x14, 0x7000, 0xf800);

3873 
	`πl_wrôïhy
(
ç
, 0x13, 0x80b4);

3874 
	`πl_w0w1_phy
(
ç
, 0x14, 0x5000, 0xff00);

3875 
	`πl_wrôïhy
(
ç
, 0x13, 0x80ac);

3876 
	`πl_w0w1_phy
(
ç
, 0x14, 0x4000, 0xff00);

3877 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3880 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a43);

3881 
	`πl_wrôïhy
(
ç
, 0x13, 0x808e);

3882 
	`πl_w0w1_phy
(
ç
, 0x14, 0x1200, 0xff00);

3883 
	`πl_wrôïhy
(
ç
, 0x13, 0x8090);

3884 
	`πl_w0w1_phy
(
ç
, 0x14, 0xe500, 0xff00);

3885 
	`πl_wrôïhy
(
ç
, 0x13, 0x8092);

3886 
	`πl_w0w1_phy
(
ç
, 0x14, 0x9f00, 0xff00);

3887 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3890 
dout_èpbö
 = 0;

3891 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a46);

3892 
d©a
 = 
	`πl_ªadphy
(
ç
, 0x13);

3893 
d©a
 &= 3;

3894 
d©a
 <<= 2;

3895 
dout_èpbö
 |
d©a
;

3896 
d©a
 = 
	`πl_ªadphy
(
ç
, 0x12);

3897 
d©a
 &= 0xc000;

3898 
d©a
 >>= 14;

3899 
dout_èpbö
 |
d©a
;

3900 
dout_èpbö
 = ~(dout_tapbin^0x08);

3901 
dout_èpbö
 <<= 12;

3902 
dout_èpbö
 &= 0xf000;

3903 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a43);

3904 
	`πl_wrôïhy
(
ç
, 0x13, 0x827a);

3905 
	`πl_w0w1_phy
(
ç
, 0x14, 
dout_èpbö
, 0xf000);

3906 
	`πl_wrôïhy
(
ç
, 0x13, 0x827b);

3907 
	`πl_w0w1_phy
(
ç
, 0x14, 
dout_èpbö
, 0xf000);

3908 
	`πl_wrôïhy
(
ç
, 0x13, 0x827c);

3909 
	`πl_w0w1_phy
(
ç
, 0x14, 
dout_èpbö
, 0xf000);

3910 
	`πl_wrôïhy
(
ç
, 0x13, 0x827d);

3911 
	`πl_w0w1_phy
(
ç
, 0x14, 
dout_èpbö
, 0xf000);

3913 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a43);

3914 
	`πl_wrôïhy
(
ç
, 0x13, 0x0811);

3915 
	`πl_w0w1_phy
(
ç
, 0x14, 0x0800, 0x0000);

3916 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a42);

3917 
	`πl_w0w1_phy
(
ç
, 0x16, 0x0002, 0x0000);

3918 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3921 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a44);

3922 
	`πl_w0w1_phy
(
ç
, 0x11, 0x0800, 0x0000);

3923 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3926 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0bca);

3927 
	`πl_w0w1_phy
(
ç
, 0x17, 0x4000, 0x3000);

3928 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3930 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a43);

3931 
	`πl_wrôïhy
(
ç
, 0x13, 0x803f);

3932 
	`πl_w0w1_phy
(
ç
, 0x14, 0x0000, 0x3000);

3933 
	`πl_wrôïhy
(
ç
, 0x13, 0x8047);

3934 
	`πl_w0w1_phy
(
ç
, 0x14, 0x0000, 0x3000);

3935 
	`πl_wrôïhy
(
ç
, 0x13, 0x804f);

3936 
	`πl_w0w1_phy
(
ç
, 0x14, 0x0000, 0x3000);

3937 
	`πl_wrôïhy
(
ç
, 0x13, 0x8057);

3938 
	`πl_w0w1_phy
(
ç
, 0x14, 0x0000, 0x3000);

3939 
	`πl_wrôïhy
(
ç
, 0x13, 0x805f);

3940 
	`πl_w0w1_phy
(
ç
, 0x14, 0x0000, 0x3000);

3941 
	`πl_wrôïhy
(
ç
, 0x13, 0x8067);

3942 
	`πl_w0w1_phy
(
ç
, 0x14, 0x0000, 0x3000);

3943 
	`πl_wrôïhy
(
ç
, 0x13, 0x806f);

3944 
	`πl_w0w1_phy
(
ç
, 0x14, 0x0000, 0x3000);

3945 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3948 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a44);

3949 
	`πl_w0w1_phy
(
ç
, 0x11, 0x0000, 0x0080);

3950 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3953 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a43);

3954 i‡(
	`πl_ªadphy
(
ç
, 0x10) & 0x0004)

3955 
	`πl_w0w1_phy
(
ç
, 0x10, 0x0000, 0x0004);

3957 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3958 
	}
}

3960 
	$πl8168h_2_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

3962 
u16
 
ioff£t_p3
, 
ioff£t_p2
, 
ioff£t_p1
, 
ioff£t_p0
;

3963 
u16
 
æí
;

3964 
u32
 
d©a
;

3966 
	`πl_≠∂y_fúmw¨e
(
ç
);

3969 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a43);

3970 
	`πl_wrôïhy
(
ç
, 0x13, 0x808a);

3971 
	`πl_w0w1_phy
(
ç
, 0x14, 0x000a, 0x003f);

3972 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3975 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a43);

3976 
	`πl_wrôïhy
(
ç
, 0x13, 0x0811);

3977 
	`πl_w0w1_phy
(
ç
, 0x14, 0x0800, 0x0000);

3978 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a42);

3979 
	`πl_w0w1_phy
(
ç
, 0x16, 0x0002, 0x0000);

3980 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3983 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a44);

3984 
	`πl_w0w1_phy
(
ç
, 0x11, 0x0800, 0x0000);

3985 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

3987 
	`r8168_mac_o˝_wrôe
(
ç
, 0xdd02, 0x807d);

3988 
d©a
 = 
	`r8168_mac_o˝_ªad
(
ç
, 0xdd02);

3989 
ioff£t_p3
 = ((
d©a
 & 0x80)>>7);

3990 
ioff£t_p3
 <<= 3;

3992 
d©a
 = 
	`r8168_mac_o˝_ªad
(
ç
, 0xdd00);

3993 
ioff£t_p3
 |((
d©a
 & (0xe000))>>13);

3994 
ioff£t_p2
 = ((
d©a
 & (0x1e00))>>9);

3995 
ioff£t_p1
 = ((
d©a
 & (0x01e0))>>5);

3996 
ioff£t_p0
 = ((
d©a
 & 0x0010)>>4);

3997 
ioff£t_p0
 <<= 3;

3998 
ioff£t_p0
 |(
d©a
 & (0x07));

3999 
d©a
 = (
ioff£t_p3
<<12)|(
ioff£t_p2
<<8)|(
ioff£t_p1
<<4)|(
ioff£t_p0
);

4001 i‡((
ioff£t_p3
 !0x0fË|| (
ioff£t_p2
 != 0x0f) ||

4002 (
ioff£t_p1
 !0x0fË|| (
ioff£t_p0
 != 0x0f)) {

4003 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0bcf);

4004 
	`πl_wrôïhy
(
ç
, 0x16, 
d©a
);

4005 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

4009 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0bcd);

4010 
d©a
 = 
	`πl_ªadphy
(
ç
, 0x16);

4011 
d©a
 &= 0x000f;

4012 
æí
 = 0;

4013 i‡(
d©a
 > 3)

4014 
æí
 = 
d©a
 - 3;

4015 
d©a
 = 
æí
 | (rlen<<4) | (rlen<<8) | (rlen<<12);

4016 
	`πl_wrôïhy
(
ç
, 0x17, 
d©a
);

4017 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0bcd);

4018 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

4021 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a44);

4022 
	`πl_w0w1_phy
(
ç
, 0x11, 0x0000, 0x0080);

4023 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

4026 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a43);

4027 i‡(
	`πl_ªadphy
(
ç
, 0x10) & 0x0004)

4028 
	`πl_w0w1_phy
(
ç
, 0x10, 0x0000, 0x0004);

4030 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

4031 
	}
}

4033 
	$πl8168ï_1_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

4036 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a44);

4037 
	`πl_w0w1_phy
(
ç
, 0x11, 0x000c, 0x0000);

4038 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

4041 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0bcc);

4042 
	`πl_w0w1_phy
(
ç
, 0x14, 0x0000, 0x0100);

4043 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a44);

4044 
	`πl_w0w1_phy
(
ç
, 0x11, 0x00c0, 0x0000);

4045 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a43);

4046 
	`πl_wrôïhy
(
ç
, 0x13, 0x8084);

4047 
	`πl_w0w1_phy
(
ç
, 0x14, 0x0000, 0x6000);

4048 
	`πl_w0w1_phy
(
ç
, 0x10, 0x1003, 0x0000);

4049 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

4052 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a4b);

4053 
	`πl_w0w1_phy
(
ç
, 0x11, 0x0004, 0x0000);

4054 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

4057 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a43);

4058 
	`πl_wrôïhy
(
ç
, 0x13, 0x8012);

4059 
	`πl_w0w1_phy
(
ç
, 0x14, 0x8000, 0x0000);

4060 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

4063 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0c42);

4064 
	`πl_w0w1_phy
(
ç
, 0x11, 0x4000, 0x2000);

4065 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

4068 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a43);

4069 i‡(
	`πl_ªadphy
(
ç
, 0x10) & 0x0004)

4070 
	`πl_w0w1_phy
(
ç
, 0x10, 0x0000, 0x0004);

4072 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

4073 
	}
}

4075 
	$πl8168ï_2_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

4078 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0bcc);

4079 
	`πl_w0w1_phy
(
ç
, 0x14, 0x0000, 0x0100);

4080 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a44);

4081 
	`πl_w0w1_phy
(
ç
, 0x11, 0x00c0, 0x0000);

4082 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a43);

4083 
	`πl_wrôïhy
(
ç
, 0x13, 0x8084);

4084 
	`πl_w0w1_phy
(
ç
, 0x14, 0x0000, 0x6000);

4085 
	`πl_w0w1_phy
(
ç
, 0x10, 0x1003, 0x0000);

4086 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

4089 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a43);

4090 
	`πl_wrôïhy
(
ç
, 0x13, 0x8012);

4091 
	`πl_w0w1_phy
(
ç
, 0x14, 0x8000, 0x0000);

4092 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

4095 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0c42);

4096 
	`πl_w0w1_phy
(
ç
, 0x11, 0x4000, 0x2000);

4097 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

4100 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a43);

4101 
	`πl_wrôïhy
(
ç
, 0x13, 0x80f3);

4102 
	`πl_w0w1_phy
(
ç
, 0x14, 0x8b00, ~0x8bff);

4103 
	`πl_wrôïhy
(
ç
, 0x13, 0x80f0);

4104 
	`πl_w0w1_phy
(
ç
, 0x14, 0x3a00, ~0x3aff);

4105 
	`πl_wrôïhy
(
ç
, 0x13, 0x80ef);

4106 
	`πl_w0w1_phy
(
ç
, 0x14, 0x0500, ~0x05ff);

4107 
	`πl_wrôïhy
(
ç
, 0x13, 0x80f6);

4108 
	`πl_w0w1_phy
(
ç
, 0x14, 0x6e00, ~0x6eff);

4109 
	`πl_wrôïhy
(
ç
, 0x13, 0x80ec);

4110 
	`πl_w0w1_phy
(
ç
, 0x14, 0x6800, ~0x68ff);

4111 
	`πl_wrôïhy
(
ç
, 0x13, 0x80ed);

4112 
	`πl_w0w1_phy
(
ç
, 0x14, 0x7c00, ~0x7cff);

4113 
	`πl_wrôïhy
(
ç
, 0x13, 0x80f2);

4114 
	`πl_w0w1_phy
(
ç
, 0x14, 0xf400, ~0xf4ff);

4115 
	`πl_wrôïhy
(
ç
, 0x13, 0x80f4);

4116 
	`πl_w0w1_phy
(
ç
, 0x14, 0x8500, ~0x85ff);

4117 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a43);

4118 
	`πl_wrôïhy
(
ç
, 0x13, 0x8110);

4119 
	`πl_w0w1_phy
(
ç
, 0x14, 0xa800, ~0xa8ff);

4120 
	`πl_wrôïhy
(
ç
, 0x13, 0x810f);

4121 
	`πl_w0w1_phy
(
ç
, 0x14, 0x1d00, ~0x1dff);

4122 
	`πl_wrôïhy
(
ç
, 0x13, 0x8111);

4123 
	`πl_w0w1_phy
(
ç
, 0x14, 0xf500, ~0xf5ff);

4124 
	`πl_wrôïhy
(
ç
, 0x13, 0x8113);

4125 
	`πl_w0w1_phy
(
ç
, 0x14, 0x6100, ~0x61ff);

4126 
	`πl_wrôïhy
(
ç
, 0x13, 0x8115);

4127 
	`πl_w0w1_phy
(
ç
, 0x14, 0x9200, ~0x92ff);

4128 
	`πl_wrôïhy
(
ç
, 0x13, 0x810e);

4129 
	`πl_w0w1_phy
(
ç
, 0x14, 0x0400, ~0x04ff);

4130 
	`πl_wrôïhy
(
ç
, 0x13, 0x810c);

4131 
	`πl_w0w1_phy
(
ç
, 0x14, 0x7c00, ~0x7cff);

4132 
	`πl_wrôïhy
(
ç
, 0x13, 0x810b);

4133 
	`πl_w0w1_phy
(
ç
, 0x14, 0x5a00, ~0x5aff);

4134 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a43);

4135 
	`πl_wrôïhy
(
ç
, 0x13, 0x80d1);

4136 
	`πl_w0w1_phy
(
ç
, 0x14, 0xff00, ~0xffff);

4137 
	`πl_wrôïhy
(
ç
, 0x13, 0x80cd);

4138 
	`πl_w0w1_phy
(
ç
, 0x14, 0x9e00, ~0x9eff);

4139 
	`πl_wrôïhy
(
ç
, 0x13, 0x80d3);

4140 
	`πl_w0w1_phy
(
ç
, 0x14, 0x0e00, ~0x0eff);

4141 
	`πl_wrôïhy
(
ç
, 0x13, 0x80d5);

4142 
	`πl_w0w1_phy
(
ç
, 0x14, 0xca00, ~0xcaff);

4143 
	`πl_wrôïhy
(
ç
, 0x13, 0x80d7);

4144 
	`πl_w0w1_phy
(
ç
, 0x14, 0x8400, ~0x84ff);

4147 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0bcd);

4148 
	`πl_wrôïhy
(
ç
, 0x14, 0x5065);

4149 
	`πl_wrôïhy
(
ç
, 0x14, 0xd065);

4150 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0bc8);

4151 
	`πl_wrôïhy
(
ç
, 0x12, 0x00ed);

4152 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0bcd);

4153 
	`πl_wrôïhy
(
ç
, 0x14, 0x1065);

4154 
	`πl_wrôïhy
(
ç
, 0x14, 0x9065);

4155 
	`πl_wrôïhy
(
ç
, 0x14, 0x1065);

4156 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

4159 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0a43);

4160 i‡(
	`πl_ªadphy
(
ç
, 0x10) & 0x0004)

4161 
	`πl_w0w1_phy
(
ç
, 0x10, 0x0000, 0x0004);

4163 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

4164 
	}
}

4166 
	$πl8102e_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

4168 c⁄° 
phy_ªg
 
phy_ªg_öô
[] = {

4175 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

4176 
	`πl_∑tchphy
(
ç
, 0x11, 1 << 12);

4177 
	`πl_∑tchphy
(
ç
, 0x19, 1 << 13);

4178 
	`πl_∑tchphy
(
ç
, 0x10, 1 << 15);

4180 
	`πl_wrôïhy_b©ch
(
ç
, 
phy_ªg_öô
, 
	`ARRAY_SIZE
(phy_reg_init));

4181 
	}
}

4183 
	$πl8105e_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

4185 c⁄° 
phy_ªg
 
phy_ªg_öô
[] = {

4200 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

4201 
	`πl_wrôïhy
(
ç
, 0x18, 0x0310);

4202 
	`m¶ìp
(100);

4204 
	`πl_≠∂y_fúmw¨e
(
ç
);

4206 
	`πl_wrôïhy_b©ch
(
ç
, 
phy_ªg_öô
, 
	`ARRAY_SIZE
(phy_reg_init));

4207 
	}
}

4209 
	$πl8402_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

4212 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

4213 
	`πl_wrôïhy
(
ç
, 0x18, 0x0310);

4214 
	`m¶ìp
(20);

4216 
	`πl_≠∂y_fúmw¨e
(
ç
);

4219 
	`πl_îi_wrôe
(
ç
, 0x1b0, 
ERIAR_MASK_0011
, 0x0000, 
ERIAR_EXGMAC
);

4220 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0004);

4221 
	`πl_wrôïhy
(
ç
, 0x10, 0x401f);

4222 
	`πl_wrôïhy
(
ç
, 0x19, 0x7030);

4223 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

4224 
	}
}

4226 
	$πl8106e_hw_phy_c⁄fig
(
πl8169_¥iv©e
 *
ç
)

4228 c⁄° 
phy_ªg
 
phy_ªg_öô
[] = {

4236 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

4237 
	`πl_wrôïhy
(
ç
, 0x18, 0x0310);

4238 
	`m¶ìp
(100);

4240 
	`πl_≠∂y_fúmw¨e
(
ç
);

4242 
	`πl_îi_wrôe
(
ç
, 0x1b0, 
ERIAR_MASK_0011
, 0x0000, 
ERIAR_EXGMAC
);

4243 
	`πl_wrôïhy_b©ch
(
ç
, 
phy_ªg_öô
, 
	`ARRAY_SIZE
(phy_reg_init));

4245 
	`πl_îi_wrôe
(
ç
, 0x1d0, 
ERIAR_MASK_0011
, 0x0000, 
ERIAR_EXGMAC
);

4246 
	}
}

4248 
	$πl_hw_phy_c⁄fig
(
√t_devi˚
 *
dev
)

4250 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

4252 
	`πl8169_¥öt_mac_vîsi⁄
(
ç
);

4254 
ç
->
mac_vîsi⁄
) {

4255 
RTL_GIGA_MAC_VER_01
:

4257 
RTL_GIGA_MAC_VER_02
:

4258 
RTL_GIGA_MAC_VER_03
:

4259 
	`πl8169s_hw_phy_c⁄fig
(
ç
);

4261 
RTL_GIGA_MAC_VER_04
:

4262 
	`πl8169sb_hw_phy_c⁄fig
(
ç
);

4264 
RTL_GIGA_MAC_VER_05
:

4265 
	`πl8169scd_hw_phy_c⁄fig
(
ç
);

4267 
RTL_GIGA_MAC_VER_06
:

4268 
	`πl8169s˚_hw_phy_c⁄fig
(
ç
);

4270 
RTL_GIGA_MAC_VER_07
:

4271 
RTL_GIGA_MAC_VER_08
:

4272 
RTL_GIGA_MAC_VER_09
:

4273 
	`πl8102e_hw_phy_c⁄fig
(
ç
);

4275 
RTL_GIGA_MAC_VER_11
:

4276 
	`πl8168bb_hw_phy_c⁄fig
(
ç
);

4278 
RTL_GIGA_MAC_VER_12
:

4279 
	`πl8168bef_hw_phy_c⁄fig
(
ç
);

4281 
RTL_GIGA_MAC_VER_17
:

4282 
	`πl8168bef_hw_phy_c⁄fig
(
ç
);

4284 
RTL_GIGA_MAC_VER_18
:

4285 
	`πl8168˝_1_hw_phy_c⁄fig
(
ç
);

4287 
RTL_GIGA_MAC_VER_19
:

4288 
	`πl8168c_1_hw_phy_c⁄fig
(
ç
);

4290 
RTL_GIGA_MAC_VER_20
:

4291 
	`πl8168c_2_hw_phy_c⁄fig
(
ç
);

4293 
RTL_GIGA_MAC_VER_21
:

4294 
	`πl8168c_3_hw_phy_c⁄fig
(
ç
);

4296 
RTL_GIGA_MAC_VER_22
:

4297 
	`πl8168c_4_hw_phy_c⁄fig
(
ç
);

4299 
RTL_GIGA_MAC_VER_23
:

4300 
RTL_GIGA_MAC_VER_24
:

4301 
	`πl8168˝_2_hw_phy_c⁄fig
(
ç
);

4303 
RTL_GIGA_MAC_VER_25
:

4304 
	`πl8168d_1_hw_phy_c⁄fig
(
ç
);

4306 
RTL_GIGA_MAC_VER_26
:

4307 
	`πl8168d_2_hw_phy_c⁄fig
(
ç
);

4309 
RTL_GIGA_MAC_VER_27
:

4310 
	`πl8168d_3_hw_phy_c⁄fig
(
ç
);

4312 
RTL_GIGA_MAC_VER_28
:

4313 
	`πl8168d_4_hw_phy_c⁄fig
(
ç
);

4315 
RTL_GIGA_MAC_VER_29
:

4316 
RTL_GIGA_MAC_VER_30
:

4317 
	`πl8105e_hw_phy_c⁄fig
(
ç
);

4319 
RTL_GIGA_MAC_VER_31
:

4322 
RTL_GIGA_MAC_VER_32
:

4323 
RTL_GIGA_MAC_VER_33
:

4324 
	`πl8168e_1_hw_phy_c⁄fig
(
ç
);

4326 
RTL_GIGA_MAC_VER_34
:

4327 
	`πl8168e_2_hw_phy_c⁄fig
(
ç
);

4329 
RTL_GIGA_MAC_VER_35
:

4330 
	`πl8168f_1_hw_phy_c⁄fig
(
ç
);

4332 
RTL_GIGA_MAC_VER_36
:

4333 
	`πl8168f_2_hw_phy_c⁄fig
(
ç
);

4336 
RTL_GIGA_MAC_VER_37
:

4337 
	`πl8402_hw_phy_c⁄fig
(
ç
);

4340 
RTL_GIGA_MAC_VER_38
:

4341 
	`πl8411_hw_phy_c⁄fig
(
ç
);

4344 
RTL_GIGA_MAC_VER_39
:

4345 
	`πl8106e_hw_phy_c⁄fig
(
ç
);

4348 
RTL_GIGA_MAC_VER_40
:

4349 
	`πl8168g_1_hw_phy_c⁄fig
(
ç
);

4351 
RTL_GIGA_MAC_VER_42
:

4352 
RTL_GIGA_MAC_VER_43
:

4353 
RTL_GIGA_MAC_VER_44
:

4354 
	`πl8168g_2_hw_phy_c⁄fig
(
ç
);

4356 
RTL_GIGA_MAC_VER_45
:

4357 
RTL_GIGA_MAC_VER_47
:

4358 
	`πl8168h_1_hw_phy_c⁄fig
(
ç
);

4360 
RTL_GIGA_MAC_VER_46
:

4361 
RTL_GIGA_MAC_VER_48
:

4362 
	`πl8168h_2_hw_phy_c⁄fig
(
ç
);

4365 
RTL_GIGA_MAC_VER_49
:

4366 
	`πl8168ï_1_hw_phy_c⁄fig
(
ç
);

4368 
RTL_GIGA_MAC_VER_50
:

4369 
RTL_GIGA_MAC_VER_51
:

4370 
	`πl8168ï_2_hw_phy_c⁄fig
(
ç
);

4373 
RTL_GIGA_MAC_VER_41
:

4377 
	}
}

4379 
	$πl_phy_w‹k
(
πl8169_¥iv©e
 *
ç
)

4381 
timî_li°
 *
timî
 = &
ç
->timer;

4382 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

4383 
timeout
 = 
RTL8169_PHY_TIMEOUT
;

4385 
	`as£π
(
ç
->
mac_vîsi⁄
 > 
RTL_GIGA_MAC_VER_01
);

4387 i‡(
ç
->
	`phy_ª£t_≥ndög
(tp)) {

4392 
timeout
 = 
HZ
/10;

4393 
out_mod_timî
;

4396 i‡(
ç
->
	`lök_ok
(
iﬂddr
))

4399 
	`√tif_dbg
(
ç
, 
lök
,Åp->
dev
, "PHYÑeset untilÜink up\n");

4401 
ç
->
	`phy_ª£t_íabÀ
(tp);

4403 
out_mod_timî
:

4404 
	`mod_timî
(
timî
, 
jiffõs
 + 
timeout
);

4405 
	}
}

4407 
	$πl_scheduÀ_èsk
(
πl8169_¥iv©e
 *
ç
, 
πl_Êag
 
Êag
)

4409 i‡(!
	`ã°_™d_£t_bô
(
Êag
, 
ç
->
wk
.
Êags
))

4410 
	`scheduÀ_w‹k
(&
ç
->
wk
.
w‹k
);

4411 
	}
}

4413 
	$πl8169_phy_timî
(
timî_li°
 *
t
)

4415 
πl8169_¥iv©e
 *
ç
 = 
	`‰om_timî
—p, 
t
, 
timî
);

4417 
	`πl_scheduÀ_èsk
(
ç
, 
RTL_FLAG_TASK_PHY_PENDING
);

4418 
	}
}

4420 
	$πl8169_ªÀa£_bﬂrd
(
pci_dev
 *
pdev
, 
√t_devi˚
 *
dev
,

4421 
__iomem
 *
iﬂddr
)

4423 
	`iounm≠
(
iﬂddr
);

4424 
	`pci_ªÀa£_ªgi⁄s
(
pdev
);

4425 
	`pci_˛ór_mwi
(
pdev
);

4426 
	`pci_dißbÀ_devi˚
(
pdev
);

4427 
	`‰ì_√tdev
(
dev
);

4428 
	}
}

4430 
	$DECLARE_RTL_COND
(
πl_phy_ª£t_c⁄d
)

4432  
ç
->
	`phy_ª£t_≥ndög
(tp);

4433 
	}
}

4435 
	$πl8169_phy_ª£t
(
√t_devi˚
 *
dev
,

4436 
πl8169_¥iv©e
 *
ç
)

4438 
ç
->
	`phy_ª£t_íabÀ
(tp);

4439 
	`πl_m¶ìp_lo›_waô_low
(
ç
, &
πl_phy_ª£t_c⁄d
, 1, 100);

4440 
	}
}

4442 
boﬁ
 
	$πl_tbi_íabÀd
(
πl8169_¥iv©e
 *
ç
)

4444 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

4446  (
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_01
) &&

4447 (
	`RTL_R8
(
PHY°©us
Ë& 
TBI_E«bÀ
);

4448 
	}
}

4450 
	$πl8169_öô_phy
(
√t_devi˚
 *
dev
, 
πl8169_¥iv©e
 *
ç
)

4452 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

4454 
	`πl_hw_phy_c⁄fig
(
dev
);

4456 i‡(
ç
->
mac_vîsi⁄
 <
RTL_GIGA_MAC_VER_06
) {

4457 
	`d¥ötk
("Set MAC Reg C+CR Offset 0x82h = 0x01h\n");

4458 
	`RTL_W8
(0x82, 0x01);

4461 
	`pci_wrôe_c⁄fig_byã
(
ç
->
pci_dev
, 
PCI_LATENCY_TIMER
, 0x40);

4463 i‡(
ç
->
mac_vîsi⁄
 <
RTL_GIGA_MAC_VER_06
)

4464 
	`pci_wrôe_c⁄fig_byã
(
ç
->
pci_dev
, 
PCI_CACHE_LINE_SIZE
, 0x08);

4466 i‡(
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_02
) {

4467 
	`d¥ötk
("Set MAC Reg C+CR Offset 0x82h = 0x01h\n");

4468 
	`RTL_W8
(0x82, 0x01);

4469 
	`d¥ötk
("Set PHY Reg 0x0bh = 0x00h\n");

4470 
	`πl_wrôïhy
(
ç
, 0x0b, 0x0000);

4473 
	`πl8169_phy_ª£t
(
dev
, 
ç
);

4475 
	`πl8169_£t_•ìd
(
dev
, 
AUTONEG_ENABLE
, 
SPEED_1000
, 
DUPLEX_FULL
,

4476 
ADVERTISED_10ba£T_HÆf
 | 
ADVERTISED_10ba£T_FuŒ
 |

4477 
ADVERTISED_100ba£T_HÆf
 | 
ADVERTISED_100ba£T_FuŒ
 |

4478 (
ç
->
mii
.
suµ‹ts_gmii
 ?

4479 
ADVERTISED_1000ba£T_HÆf
 |

4480 
ADVERTISED_1000ba£T_FuŒ
 : 0));

4482 i‡(
	`πl_tbi_íabÀd
(
ç
))

4483 
	`√tif_öfo
(
ç
, 
lök
, 
dev
, "TBIáuto-negotiating\n");

4484 
	}
}

4486 
	$πl_ør_£t
(
πl8169_¥iv©e
 *
ç
, 
u8
 *
addr
)

4488 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

4490 
	`πl_lock_w‹k
(
ç
);

4492 
	`RTL_W8
(
Cfg9346
, 
Cfg9346_U∆ock
);

4494 
	`RTL_W32
(
MAC4
, 
addr
[4] |áddr[5] << 8);

4495 
	`RTL_R32
(
MAC4
);

4497 
	`RTL_W32
(
MAC0
, 
addr
[0] |áddr[1] << 8 |áddr[2] << 16 |áddr[3] << 24);

4498 
	`RTL_R32
(
MAC0
);

4500 i‡(
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_34
)

4501 
	`πl_ør_exgmac_£t
(
ç
, 
addr
);

4503 
	`RTL_W8
(
Cfg9346
, 
Cfg9346_Lock
);

4505 
	`πl_u∆ock_w‹k
(
ç
);

4506 
	}
}

4508 
	$πl_£t_mac_addªss
(
√t_devi˚
 *
dev
, *
p
)

4510 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

4511 
devi˚
 *
d
 = &
ç
->
pci_dev
->
dev
;

4512 
sockaddr
 *
addr
 = 
p
;

4514 i‡(!
	`is_vÆid_ëhî_addr
(
addr
->
ß_d©a
))

4515  -
EADDRNOTAVAIL
;

4517 
	`mem˝y
(
dev
->
dev_addr
, 
addr
->
ß_d©a
, dev->
addr_Àn
);

4519 
	`pm_ru¡ime_gë_n‹esume
(
d
);

4521 i‡(
	`pm_ru¡ime_a˘ive
(
d
))

4522 
	`πl_ør_£t
(
ç
, 
dev
->
dev_addr
);

4524 
	`pm_ru¡ime_put_noidÀ
(
d
);

4527 
	}
}

4529 
	$πl8169_io˘l
(
√t_devi˚
 *
dev
, 
i‰eq
 *
i‰
, 
cmd
)

4531 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

4532 
mii_io˘l_d©a
 *
d©a
 = 
	`if_mii
(
i‰
);

4534  
	`√tif_ru¬ög
(
dev
Ë? 
ç
->
	`do_io˘l
—p, 
d©a
, 
cmd
Ë: -
ENODEV
;

4535 
	}
}

4537 
	$πl_xmii_io˘l
(
πl8169_¥iv©e
 *
ç
,

4538 
mii_io˘l_d©a
 *
d©a
, 
cmd
)

4540 
cmd
) {

4541 
SIOCGMIIPHY
:

4542 
d©a
->
phy_id
 = 32;

4545 
SIOCGMIIREG
:

4546 
d©a
->
vÆ_out
 = 
	`πl_ªadphy
(
ç
, d©a->
ªg_num
 & 0x1f);

4549 
SIOCSMIIREG
:

4550 
	`πl_wrôïhy
(
ç
, 
d©a
->
ªg_num
 & 0x1f, d©a->
vÆ_ö
);

4553  -
EOPNOTSUPP
;

4554 
	}
}

4556 
	$πl_tbi_io˘l
(
πl8169_¥iv©e
 *
ç
, 
mii_io˘l_d©a
 *
d©a
, 
cmd
)

4558  -
EOPNOTSUPP
;

4559 
	}
}

4561 
	$πl_dißbÀ_msi
(
pci_dev
 *
pdev
, 
πl8169_¥iv©e
 *
ç
)

4563 i‡(
ç
->
„©uªs
 & 
RTL_FEATURE_MSI
) {

4564 
	`pci_dißbÀ_msi
(
pdev
);

4565 
ç
->
„©uªs
 &~
RTL_FEATURE_MSI
;

4567 
	}
}

4569 
	$πl_öô_mdio_›s
(
πl8169_¥iv©e
 *
ç
)

4571 
mdio_›s
 *
›s
 = &
ç
->mdio_ops;

4573 
ç
->
mac_vîsi⁄
) {

4574 
RTL_GIGA_MAC_VER_27
:

4575 
›s
->
wrôe
 = 
r8168dp_1_mdio_wrôe
;

4576 
›s
->
ªad
 = 
r8168dp_1_mdio_ªad
;

4578 
RTL_GIGA_MAC_VER_28
:

4579 
RTL_GIGA_MAC_VER_31
:

4580 
›s
->
wrôe
 = 
r8168dp_2_mdio_wrôe
;

4581 
›s
->
ªad
 = 
r8168dp_2_mdio_ªad
;

4583 
RTL_GIGA_MAC_VER_40
:

4584 
RTL_GIGA_MAC_VER_41
:

4585 
RTL_GIGA_MAC_VER_42
:

4586 
RTL_GIGA_MAC_VER_43
:

4587 
RTL_GIGA_MAC_VER_44
:

4588 
RTL_GIGA_MAC_VER_45
:

4589 
RTL_GIGA_MAC_VER_46
:

4590 
RTL_GIGA_MAC_VER_47
:

4591 
RTL_GIGA_MAC_VER_48
:

4592 
RTL_GIGA_MAC_VER_49
:

4593 
RTL_GIGA_MAC_VER_50
:

4594 
RTL_GIGA_MAC_VER_51
:

4595 
›s
->
wrôe
 = 
r8168g_mdio_wrôe
;

4596 
›s
->
ªad
 = 
r8168g_mdio_ªad
;

4599 
›s
->
wrôe
 = 
r8169_mdio_wrôe
;

4600 
›s
->
ªad
 = 
r8169_mdio_ªad
;

4603 
	}
}

4605 
	$πl_•ìd_down
(
πl8169_¥iv©e
 *
ç
)

4607 
u32
 
adv
;

4608 
Õa
;

4610 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

4611 
Õa
 = 
	`πl_ªadphy
(
ç
, 
MII_LPA
);

4613 i‡(
Õa
 & (
LPA_10HALF
 | 
LPA_10FULL
))

4614 
adv
 = 
ADVERTISED_10ba£T_HÆf
 | 
ADVERTISED_10ba£T_FuŒ
;

4615 i‡(
Õa
 & (
LPA_100HALF
 | 
LPA_100FULL
))

4616 
adv
 = 
ADVERTISED_10ba£T_HÆf
 | 
ADVERTISED_10ba£T_FuŒ
 |

4617 
ADVERTISED_100ba£T_HÆf
 | 
ADVERTISED_100ba£T_FuŒ
;

4619 
adv
 = 
ADVERTISED_10ba£T_HÆf
 | 
ADVERTISED_10ba£T_FuŒ
 |

4620 
ADVERTISED_100ba£T_HÆf
 | 
ADVERTISED_100ba£T_FuŒ
 |

4621 (
ç
->
mii
.
suµ‹ts_gmii
 ?

4622 
ADVERTISED_1000ba£T_HÆf
 |

4623 
ADVERTISED_1000ba£T_FuŒ
 : 0);

4625 
	`πl8169_£t_•ìd
(
ç
->
dev
, 
AUTONEG_ENABLE
, 
SPEED_1000
, 
DUPLEX_FULL
,

4626 
adv
);

4627 
	}
}

4629 
	$πl_wﬁ_su•íd_quúk
(
πl8169_¥iv©e
 *
ç
)

4631 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

4633 
ç
->
mac_vîsi⁄
) {

4634 
RTL_GIGA_MAC_VER_25
:

4635 
RTL_GIGA_MAC_VER_26
:

4636 
RTL_GIGA_MAC_VER_29
:

4637 
RTL_GIGA_MAC_VER_30
:

4638 
RTL_GIGA_MAC_VER_32
:

4639 
RTL_GIGA_MAC_VER_33
:

4640 
RTL_GIGA_MAC_VER_34
:

4641 
RTL_GIGA_MAC_VER_37
:

4642 
RTL_GIGA_MAC_VER_38
:

4643 
RTL_GIGA_MAC_VER_39
:

4644 
RTL_GIGA_MAC_VER_40
:

4645 
RTL_GIGA_MAC_VER_41
:

4646 
RTL_GIGA_MAC_VER_42
:

4647 
RTL_GIGA_MAC_VER_43
:

4648 
RTL_GIGA_MAC_VER_44
:

4649 
RTL_GIGA_MAC_VER_45
:

4650 
RTL_GIGA_MAC_VER_46
:

4651 
RTL_GIGA_MAC_VER_47
:

4652 
RTL_GIGA_MAC_VER_48
:

4653 
RTL_GIGA_MAC_VER_49
:

4654 
RTL_GIGA_MAC_VER_50
:

4655 
RTL_GIGA_MAC_VER_51
:

4656 
	`RTL_W32
(
RxC⁄fig
, 
	`RTL_R32
(RxConfig) |

4657 
Ac˚±Brﬂdˇ°
 | 
Ac˚±Mu…iˇ°
 | 
Ac˚±MyPhys
);

4662 
	}
}

4664 
boﬁ
 
	$πl_wﬁ_∂l_powî_down
(
πl8169_¥iv©e
 *
ç
)

4666 i‡(!(
	`__πl8169_gë_wﬁ
(
ç
Ë& 
WAKE_ANY
))

4667  
Ál£
;

4669 
	`πl_•ìd_down
(
ç
);

4670 
	`πl_wﬁ_su•íd_quúk
(
ç
);

4672  
åue
;

4673 
	}
}

4675 
	$r810x_phy_powî_down
(
πl8169_¥iv©e
 *
ç
)

4677 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

4678 
	`πl_wrôïhy
(
ç
, 
MII_BMCR
, 
BMCR_PDOWN
);

4679 
	}
}

4681 
	$r810x_phy_powî_up
(
πl8169_¥iv©e
 *
ç
)

4683 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

4684 
	`πl_wrôïhy
(
ç
, 
MII_BMCR
, 
BMCR_ANENABLE
);

4685 
	}
}

4687 
	$r810x_∂l_powî_down
(
πl8169_¥iv©e
 *
ç
)

4689 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

4691 i‡(
	`πl_wﬁ_∂l_powî_down
(
ç
))

4694 
	`r810x_phy_powî_down
(
ç
);

4696 
ç
->
mac_vîsi⁄
) {

4697 
RTL_GIGA_MAC_VER_07
:

4698 
RTL_GIGA_MAC_VER_08
:

4699 
RTL_GIGA_MAC_VER_09
:

4700 
RTL_GIGA_MAC_VER_10
:

4701 
RTL_GIGA_MAC_VER_13
:

4702 
RTL_GIGA_MAC_VER_16
:

4705 
	`RTL_W8
(
PMCH
, 
	`RTL_R8
(PMCH) & ~0x80);

4708 
	}
}

4710 
	$r810x_∂l_powî_up
(
πl8169_¥iv©e
 *
ç
)

4712 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

4714 
	`r810x_phy_powî_up
(
ç
);

4716 
ç
->
mac_vîsi⁄
) {

4717 
RTL_GIGA_MAC_VER_07
:

4718 
RTL_GIGA_MAC_VER_08
:

4719 
RTL_GIGA_MAC_VER_09
:

4720 
RTL_GIGA_MAC_VER_10
:

4721 
RTL_GIGA_MAC_VER_13
:

4722 
RTL_GIGA_MAC_VER_16
:

4724 
RTL_GIGA_MAC_VER_47
:

4725 
RTL_GIGA_MAC_VER_48
:

4726 
	`RTL_W8
(
PMCH
, 
	`RTL_R8
(PMCH) | 0xc0);

4729 
	`RTL_W8
(
PMCH
, 
	`RTL_R8
(PMCH) | 0x80);

4732 
	}
}

4734 
	$r8168_phy_powî_up
(
πl8169_¥iv©e
 *
ç
)

4736 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

4737 
ç
->
mac_vîsi⁄
) {

4738 
RTL_GIGA_MAC_VER_11
:

4739 
RTL_GIGA_MAC_VER_12
:

4740 
RTL_GIGA_MAC_VER_17
:

4741 
RTL_GIGA_MAC_VER_18
:

4742 
RTL_GIGA_MAC_VER_19
:

4743 
RTL_GIGA_MAC_VER_20
:

4744 
RTL_GIGA_MAC_VER_21
:

4745 
RTL_GIGA_MAC_VER_22
:

4746 
RTL_GIGA_MAC_VER_23
:

4747 
RTL_GIGA_MAC_VER_24
:

4748 
RTL_GIGA_MAC_VER_25
:

4749 
RTL_GIGA_MAC_VER_26
:

4750 
RTL_GIGA_MAC_VER_27
:

4751 
RTL_GIGA_MAC_VER_28
:

4752 
RTL_GIGA_MAC_VER_31
:

4753 
	`πl_wrôïhy
(
ç
, 0x0e, 0x0000);

4758 
	`πl_wrôïhy
(
ç
, 
MII_BMCR
, 
BMCR_ANENABLE
);

4759 
	}
}

4761 
	$r8168_phy_powî_down
(
πl8169_¥iv©e
 *
ç
)

4763 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

4764 
ç
->
mac_vîsi⁄
) {

4765 
RTL_GIGA_MAC_VER_32
:

4766 
RTL_GIGA_MAC_VER_33
:

4767 
RTL_GIGA_MAC_VER_40
:

4768 
RTL_GIGA_MAC_VER_41
:

4769 
	`πl_wrôïhy
(
ç
, 
MII_BMCR
, 
BMCR_ANENABLE
 | 
BMCR_PDOWN
);

4772 
RTL_GIGA_MAC_VER_11
:

4773 
RTL_GIGA_MAC_VER_12
:

4774 
RTL_GIGA_MAC_VER_17
:

4775 
RTL_GIGA_MAC_VER_18
:

4776 
RTL_GIGA_MAC_VER_19
:

4777 
RTL_GIGA_MAC_VER_20
:

4778 
RTL_GIGA_MAC_VER_21
:

4779 
RTL_GIGA_MAC_VER_22
:

4780 
RTL_GIGA_MAC_VER_23
:

4781 
RTL_GIGA_MAC_VER_24
:

4782 
RTL_GIGA_MAC_VER_25
:

4783 
RTL_GIGA_MAC_VER_26
:

4784 
RTL_GIGA_MAC_VER_27
:

4785 
RTL_GIGA_MAC_VER_28
:

4786 
RTL_GIGA_MAC_VER_31
:

4787 
	`πl_wrôïhy
(
ç
, 0x0e, 0x0200);

4789 
	`πl_wrôïhy
(
ç
, 
MII_BMCR
, 
BMCR_PDOWN
);

4792 
	}
}

4794 
	$r8168_∂l_powî_down
(
πl8169_¥iv©e
 *
ç
)

4796 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

4798 i‡((
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_27
 ||

4799 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_28
 ||

4800 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_31
 ||

4801 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_49
 ||

4802 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_50
 ||

4803 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_51
) &&

4804 
	`r8168_check_dash
(
ç
)) {

4808 i‡((
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_23
 ||

4809 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_24
) &&

4810 (
	`RTL_R16
(
CPlusCmd
Ë& 
ASF
)) {

4814 i‡(
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_32
 ||

4815 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_33
)

4816 
	`πl_ïhy_wrôe
(
ç
, 0x19, 0xff64);

4818 i‡(
	`πl_wﬁ_∂l_powî_down
(
ç
))

4821 
	`r8168_phy_powî_down
(
ç
);

4823 
ç
->
mac_vîsi⁄
) {

4824 
RTL_GIGA_MAC_VER_25
:

4825 
RTL_GIGA_MAC_VER_26
:

4826 
RTL_GIGA_MAC_VER_27
:

4827 
RTL_GIGA_MAC_VER_28
:

4828 
RTL_GIGA_MAC_VER_31
:

4829 
RTL_GIGA_MAC_VER_32
:

4830 
RTL_GIGA_MAC_VER_33
:

4831 
RTL_GIGA_MAC_VER_44
:

4832 
RTL_GIGA_MAC_VER_45
:

4833 
RTL_GIGA_MAC_VER_46
:

4834 
RTL_GIGA_MAC_VER_50
:

4835 
RTL_GIGA_MAC_VER_51
:

4836 
	`RTL_W8
(
PMCH
, 
	`RTL_R8
(PMCH) & ~0x80);

4838 
RTL_GIGA_MAC_VER_40
:

4839 
RTL_GIGA_MAC_VER_41
:

4840 
RTL_GIGA_MAC_VER_49
:

4841 
	`πl_w0w1_îi
(
ç
, 0x1a8, 
ERIAR_MASK_1111
, 0x00000000,

4842 0xfc000000, 
ERIAR_EXGMAC
);

4843 
	`RTL_W8
(
PMCH
, 
	`RTL_R8
(PMCH) & ~0x80);

4846 
	}
}

4848 
	$r8168_∂l_powî_up
(
πl8169_¥iv©e
 *
ç
)

4850 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

4852 
ç
->
mac_vîsi⁄
) {

4853 
RTL_GIGA_MAC_VER_25
:

4854 
RTL_GIGA_MAC_VER_26
:

4855 
RTL_GIGA_MAC_VER_27
:

4856 
RTL_GIGA_MAC_VER_28
:

4857 
RTL_GIGA_MAC_VER_31
:

4858 
RTL_GIGA_MAC_VER_32
:

4859 
RTL_GIGA_MAC_VER_33
:

4860 
	`RTL_W8
(
PMCH
, 
	`RTL_R8
(PMCH) | 0x80);

4862 
RTL_GIGA_MAC_VER_44
:

4863 
RTL_GIGA_MAC_VER_45
:

4864 
RTL_GIGA_MAC_VER_46
:

4865 
RTL_GIGA_MAC_VER_50
:

4866 
RTL_GIGA_MAC_VER_51
:

4867 
	`RTL_W8
(
PMCH
, 
	`RTL_R8
(PMCH) | 0xc0);

4869 
RTL_GIGA_MAC_VER_40
:

4870 
RTL_GIGA_MAC_VER_41
:

4871 
RTL_GIGA_MAC_VER_49
:

4872 
	`RTL_W8
(
PMCH
, 
	`RTL_R8
(PMCH) | 0xc0);

4873 
	`πl_w0w1_îi
(
ç
, 0x1a8, 
ERIAR_MASK_1111
, 0xfc000000,

4874 0x00000000, 
ERIAR_EXGMAC
);

4878 
	`r8168_phy_powî_up
(
ç
);

4879 
	}
}

4881 
	$πl_gíîic_›
(
πl8169_¥iv©e
 *
ç
,

4882 (*
›
)(
πl8169_¥iv©e
 *))

4884 i‡(
›
)

4885 
	`›
(
ç
);

4886 
	}
}

4888 
	$πl_∂l_powî_down
(
πl8169_¥iv©e
 *
ç
)

4890 
	`πl_gíîic_›
(
ç
,Åp->
∂l_powî_›s
.
down
);

4891 
	}
}

4893 
	$πl_∂l_powî_up
(
πl8169_¥iv©e
 *
ç
)

4895 
	`πl_gíîic_›
(
ç
,Åp->
∂l_powî_›s
.
up
);

4896 
	}
}

4898 
	$πl_öô_∂l_powî_›s
(
πl8169_¥iv©e
 *
ç
)

4900 
∂l_powî_›s
 *
›s
 = &
ç
->pll_power_ops;

4902 
ç
->
mac_vîsi⁄
) {

4903 
RTL_GIGA_MAC_VER_07
:

4904 
RTL_GIGA_MAC_VER_08
:

4905 
RTL_GIGA_MAC_VER_09
:

4906 
RTL_GIGA_MAC_VER_10
:

4907 
RTL_GIGA_MAC_VER_16
:

4908 
RTL_GIGA_MAC_VER_29
:

4909 
RTL_GIGA_MAC_VER_30
:

4910 
RTL_GIGA_MAC_VER_37
:

4911 
RTL_GIGA_MAC_VER_39
:

4912 
RTL_GIGA_MAC_VER_43
:

4913 
RTL_GIGA_MAC_VER_47
:

4914 
RTL_GIGA_MAC_VER_48
:

4915 
›s
->
down
 = 
r810x_∂l_powî_down
;

4916 
›s
->
up
 = 
r810x_∂l_powî_up
;

4919 
RTL_GIGA_MAC_VER_11
:

4920 
RTL_GIGA_MAC_VER_12
:

4921 
RTL_GIGA_MAC_VER_17
:

4922 
RTL_GIGA_MAC_VER_18
:

4923 
RTL_GIGA_MAC_VER_19
:

4924 
RTL_GIGA_MAC_VER_20
:

4925 
RTL_GIGA_MAC_VER_21
:

4926 
RTL_GIGA_MAC_VER_22
:

4927 
RTL_GIGA_MAC_VER_23
:

4928 
RTL_GIGA_MAC_VER_24
:

4929 
RTL_GIGA_MAC_VER_25
:

4930 
RTL_GIGA_MAC_VER_26
:

4931 
RTL_GIGA_MAC_VER_27
:

4932 
RTL_GIGA_MAC_VER_28
:

4933 
RTL_GIGA_MAC_VER_31
:

4934 
RTL_GIGA_MAC_VER_32
:

4935 
RTL_GIGA_MAC_VER_33
:

4936 
RTL_GIGA_MAC_VER_34
:

4937 
RTL_GIGA_MAC_VER_35
:

4938 
RTL_GIGA_MAC_VER_36
:

4939 
RTL_GIGA_MAC_VER_38
:

4940 
RTL_GIGA_MAC_VER_40
:

4941 
RTL_GIGA_MAC_VER_41
:

4942 
RTL_GIGA_MAC_VER_42
:

4943 
RTL_GIGA_MAC_VER_44
:

4944 
RTL_GIGA_MAC_VER_45
:

4945 
RTL_GIGA_MAC_VER_46
:

4946 
RTL_GIGA_MAC_VER_49
:

4947 
RTL_GIGA_MAC_VER_50
:

4948 
RTL_GIGA_MAC_VER_51
:

4949 
›s
->
down
 = 
r8168_∂l_powî_down
;

4950 
›s
->
up
 = 
r8168_∂l_powî_up
;

4954 
›s
->
down
 = 
NULL
;

4955 
›s
->
up
 = 
NULL
;

4958 
	}
}

4960 
	$πl_öô_rxcfg
(
πl8169_¥iv©e
 *
ç
)

4962 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

4964 
ç
->
mac_vîsi⁄
) {

4965 
RTL_GIGA_MAC_VER_01
:

4966 
RTL_GIGA_MAC_VER_02
:

4967 
RTL_GIGA_MAC_VER_03
:

4968 
RTL_GIGA_MAC_VER_04
:

4969 
RTL_GIGA_MAC_VER_05
:

4970 
RTL_GIGA_MAC_VER_06
:

4971 
RTL_GIGA_MAC_VER_10
:

4972 
RTL_GIGA_MAC_VER_11
:

4973 
RTL_GIGA_MAC_VER_12
:

4974 
RTL_GIGA_MAC_VER_13
:

4975 
RTL_GIGA_MAC_VER_14
:

4976 
RTL_GIGA_MAC_VER_15
:

4977 
RTL_GIGA_MAC_VER_16
:

4978 
RTL_GIGA_MAC_VER_17
:

4979 
	`RTL_W32
(
RxC⁄fig
, 
RX_FIFO_THRESH
 | 
RX_DMA_BURST
);

4981 
RTL_GIGA_MAC_VER_18
:

4982 
RTL_GIGA_MAC_VER_19
:

4983 
RTL_GIGA_MAC_VER_20
:

4984 
RTL_GIGA_MAC_VER_21
:

4985 
RTL_GIGA_MAC_VER_22
:

4986 
RTL_GIGA_MAC_VER_23
:

4987 
RTL_GIGA_MAC_VER_24
:

4988 
RTL_GIGA_MAC_VER_34
:

4989 
RTL_GIGA_MAC_VER_35
:

4990 
	`RTL_W32
(
RxC⁄fig
, 
RX128_INT_EN
 | 
RX_MULTI_EN
 | 
RX_DMA_BURST
);

4992 
RTL_GIGA_MAC_VER_40
:

4993 
RTL_GIGA_MAC_VER_41
:

4994 
RTL_GIGA_MAC_VER_42
:

4995 
RTL_GIGA_MAC_VER_43
:

4996 
RTL_GIGA_MAC_VER_44
:

4997 
RTL_GIGA_MAC_VER_45
:

4998 
RTL_GIGA_MAC_VER_46
:

4999 
RTL_GIGA_MAC_VER_47
:

5000 
RTL_GIGA_MAC_VER_48
:

5001 
RTL_GIGA_MAC_VER_49
:

5002 
RTL_GIGA_MAC_VER_50
:

5003 
RTL_GIGA_MAC_VER_51
:

5004 
	`RTL_W32
(
RxC⁄fig
, 
RX128_INT_EN
 | 
RX_MULTI_EN
 | 
RX_DMA_BURST
 | 
RX_EARLY_OFF
);

5007 
	`RTL_W32
(
RxC⁄fig
, 
RX128_INT_EN
 | 
RX_DMA_BURST
);

5010 
	}
}

5012 
	$πl8169_öô_rög_ödexes
(
πl8169_¥iv©e
 *
ç
)

5014 
ç
->
dúty_tx
 =Åp->
cur_tx
 =Åp->
cur_rx
 = 0;

5015 
	}
}

5017 
	$πl_hw_jumbo_íabÀ
(
πl8169_¥iv©e
 *
ç
)

5019 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

5021 
	`RTL_W8
(
Cfg9346
, 
Cfg9346_U∆ock
);

5022 
	`πl_gíîic_›
(
ç
,Åp->
jumbo_›s
.
íabÀ
);

5023 
	`RTL_W8
(
Cfg9346
, 
Cfg9346_Lock
);

5024 
	}
}

5026 
	$πl_hw_jumbo_dißbÀ
(
πl8169_¥iv©e
 *
ç
)

5028 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

5030 
	`RTL_W8
(
Cfg9346
, 
Cfg9346_U∆ock
);

5031 
	`πl_gíîic_›
(
ç
,Åp->
jumbo_›s
.
dißbÀ
);

5032 
	`RTL_W8
(
Cfg9346
, 
Cfg9346_Lock
);

5033 
	}
}

5035 
	$r8168c_hw_jumbo_íabÀ
(
πl8169_¥iv©e
 *
ç
)

5037 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

5039 
	`RTL_W8
(
C⁄fig3
, 
	`RTL_R8
(C⁄fig3Ë| 
Jumbo_En0
);

5040 
	`RTL_W8
(
C⁄fig4
, 
	`RTL_R8
(C⁄fig4Ë| 
Jumbo_En1
);

5041 
	`πl_tx_≥rf‹m™˚_twók
(
ç
->
pci_dev
, 
PCI_EXP_DEVCTL_READRQ_512B
);

5042 
	}
}

5044 
	$r8168c_hw_jumbo_dißbÀ
(
πl8169_¥iv©e
 *
ç
)

5046 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

5048 
	`RTL_W8
(
C⁄fig3
, 
	`RTL_R8
(C⁄fig3Ë& ~
Jumbo_En0
);

5049 
	`RTL_W8
(
C⁄fig4
, 
	`RTL_R8
(C⁄fig4Ë& ~
Jumbo_En1
);

5050 
	`πl_tx_≥rf‹m™˚_twók
(
ç
->
pci_dev
, 0x5 << 
MAX_READ_REQUEST_SHIFT
);

5051 
	}
}

5053 
	$r8168dp_hw_jumbo_íabÀ
(
πl8169_¥iv©e
 *
ç
)

5055 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

5057 
	`RTL_W8
(
C⁄fig3
, 
	`RTL_R8
(C⁄fig3Ë| 
Jumbo_En0
);

5058 
	}
}

5060 
	$r8168dp_hw_jumbo_dißbÀ
(
πl8169_¥iv©e
 *
ç
)

5062 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

5064 
	`RTL_W8
(
C⁄fig3
, 
	`RTL_R8
(C⁄fig3Ë& ~
Jumbo_En0
);

5065 
	}
}

5067 
	$r8168e_hw_jumbo_íabÀ
(
πl8169_¥iv©e
 *
ç
)

5069 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

5071 
	`RTL_W8
(
MaxTxPackëSize
, 0x3f);

5072 
	`RTL_W8
(
C⁄fig3
, 
	`RTL_R8
(C⁄fig3Ë| 
Jumbo_En0
);

5073 
	`RTL_W8
(
C⁄fig4
, 
	`RTL_R8
(Config4) | 0x01);

5074 
	`πl_tx_≥rf‹m™˚_twók
(
ç
->
pci_dev
, 
PCI_EXP_DEVCTL_READRQ_512B
);

5075 
	}
}

5077 
	$r8168e_hw_jumbo_dißbÀ
(
πl8169_¥iv©e
 *
ç
)

5079 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

5081 
	`RTL_W8
(
MaxTxPackëSize
, 0x0c);

5082 
	`RTL_W8
(
C⁄fig3
, 
	`RTL_R8
(C⁄fig3Ë& ~
Jumbo_En0
);

5083 
	`RTL_W8
(
C⁄fig4
, 
	`RTL_R8
(Config4) & ~0x01);

5084 
	`πl_tx_≥rf‹m™˚_twók
(
ç
->
pci_dev
, 0x5 << 
MAX_READ_REQUEST_SHIFT
);

5085 
	}
}

5087 
	$r8168b_0_hw_jumbo_íabÀ
(
πl8169_¥iv©e
 *
ç
)

5089 
	`πl_tx_≥rf‹m™˚_twók
(
ç
->
pci_dev
,

5090 
PCI_EXP_DEVCTL_READRQ_512B
 | 
PCI_EXP_DEVCTL_NOSNOOP_EN
);

5091 
	}
}

5093 
	$r8168b_0_hw_jumbo_dißbÀ
(
πl8169_¥iv©e
 *
ç
)

5095 
	`πl_tx_≥rf‹m™˚_twók
(
ç
->
pci_dev
,

5096 (0x5 << 
MAX_READ_REQUEST_SHIFT
Ë| 
PCI_EXP_DEVCTL_NOSNOOP_EN
);

5097 
	}
}

5099 
	$r8168b_1_hw_jumbo_íabÀ
(
πl8169_¥iv©e
 *
ç
)

5101 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

5103 
	`r8168b_0_hw_jumbo_íabÀ
(
ç
);

5105 
	`RTL_W8
(
C⁄fig4
, 
	`RTL_R8
(Config4) | (1 << 0));

5106 
	}
}

5108 
	$r8168b_1_hw_jumbo_dißbÀ
(
πl8169_¥iv©e
 *
ç
)

5110 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

5112 
	`r8168b_0_hw_jumbo_dißbÀ
(
ç
);

5114 
	`RTL_W8
(
C⁄fig4
, 
	`RTL_R8
(Config4) & ~(1 << 0));

5115 
	}
}

5117 
	$πl_öô_jumbo_›s
(
πl8169_¥iv©e
 *
ç
)

5119 
jumbo_›s
 *
›s
 = &
ç
->jumbo_ops;

5121 
ç
->
mac_vîsi⁄
) {

5122 
RTL_GIGA_MAC_VER_11
:

5123 
›s
->
dißbÀ
 = 
r8168b_0_hw_jumbo_dißbÀ
;

5124 
›s
->
íabÀ
 = 
r8168b_0_hw_jumbo_íabÀ
;

5126 
RTL_GIGA_MAC_VER_12
:

5127 
RTL_GIGA_MAC_VER_17
:

5128 
›s
->
dißbÀ
 = 
r8168b_1_hw_jumbo_dißbÀ
;

5129 
›s
->
íabÀ
 = 
r8168b_1_hw_jumbo_íabÀ
;

5131 
RTL_GIGA_MAC_VER_18
:

5132 
RTL_GIGA_MAC_VER_19
:

5133 
RTL_GIGA_MAC_VER_20
:

5134 
RTL_GIGA_MAC_VER_21
:

5135 
RTL_GIGA_MAC_VER_22
:

5136 
RTL_GIGA_MAC_VER_23
:

5137 
RTL_GIGA_MAC_VER_24
:

5138 
RTL_GIGA_MAC_VER_25
:

5139 
RTL_GIGA_MAC_VER_26
:

5140 
›s
->
dißbÀ
 = 
r8168c_hw_jumbo_dißbÀ
;

5141 
›s
->
íabÀ
 = 
r8168c_hw_jumbo_íabÀ
;

5143 
RTL_GIGA_MAC_VER_27
:

5144 
RTL_GIGA_MAC_VER_28
:

5145 
›s
->
dißbÀ
 = 
r8168dp_hw_jumbo_dißbÀ
;

5146 
›s
->
íabÀ
 = 
r8168dp_hw_jumbo_íabÀ
;

5148 
RTL_GIGA_MAC_VER_31
:

5149 
RTL_GIGA_MAC_VER_32
:

5150 
RTL_GIGA_MAC_VER_33
:

5151 
RTL_GIGA_MAC_VER_34
:

5152 
›s
->
dißbÀ
 = 
r8168e_hw_jumbo_dißbÀ
;

5153 
›s
->
íabÀ
 = 
r8168e_hw_jumbo_íabÀ
;

5160 
RTL_GIGA_MAC_VER_40
:

5161 
RTL_GIGA_MAC_VER_41
:

5162 
RTL_GIGA_MAC_VER_42
:

5163 
RTL_GIGA_MAC_VER_43
:

5164 
RTL_GIGA_MAC_VER_44
:

5165 
RTL_GIGA_MAC_VER_45
:

5166 
RTL_GIGA_MAC_VER_46
:

5167 
RTL_GIGA_MAC_VER_47
:

5168 
RTL_GIGA_MAC_VER_48
:

5169 
RTL_GIGA_MAC_VER_49
:

5170 
RTL_GIGA_MAC_VER_50
:

5171 
RTL_GIGA_MAC_VER_51
:

5173 
›s
->
dißbÀ
 = 
NULL
;

5174 
›s
->
íabÀ
 = 
NULL
;

5177 
	}
}

5179 
	$DECLARE_RTL_COND
(
πl_chùcmd_c⁄d
)

5181 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

5183  
	`RTL_R8
(
ChùCmd
Ë& 
CmdRe£t
;

5184 
	}
}

5186 
	$πl_hw_ª£t
(
πl8169_¥iv©e
 *
ç
)

5188 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

5190 
	`RTL_W8
(
ChùCmd
, 
CmdRe£t
);

5192 
	`πl_udñay_lo›_waô_low
(
ç
, &
πl_chùcmd_c⁄d
, 100, 100);

5193 
	}
}

5195 
	$πl_ªque°_unˇched_fúmw¨e
(
πl8169_¥iv©e
 *
ç
)

5197 
πl_fw
 *rtl_fw;

5198 c⁄° *
«me
;

5199 
rc
 = -
ENOMEM
;

5201 
«me
 = 
	`πl_lookup_fúmw¨e_«me
(
ç
);

5202 i‡(!
«me
)

5203 
out_no_fúmw¨e
;

5205 
πl_fw
 = 
	`kzÆloc
((*πl_fw), 
GFP_KERNEL
);

5206 i‡(!
πl_fw
)

5207 
îr_w¨n
;

5209 
rc
 = 
	`ªque°_fúmw¨e
(&
πl_fw
->
fw
, 
«me
, &
ç
->
pci_dev
->
dev
);

5210 i‡(
rc
 < 0)

5211 
îr_‰ì
;

5213 
rc
 = 
	`πl_check_fúmw¨e
(
ç
, 
πl_fw
);

5214 i‡(
rc
 < 0)

5215 
îr_ªÀa£_fúmw¨e
;

5217 
ç
->
πl_fw
 =Ñtl_fw;

5218 
out
:

5221 
îr_ªÀa£_fúmw¨e
:

5222 
	`ªÀa£_fúmw¨e
(
πl_fw
->
fw
);

5223 
îr_‰ì
:

5224 
	`k‰ì
(
πl_fw
);

5225 
îr_w¨n
:

5226 
	`√tif_w¨n
(
ç
, 
ifup
,Åp->
dev
, "unableÅoÜoad firmwareÖatch %s (%d)\n",

5227 
«me
, 
rc
);

5228 
out_no_fúmw¨e
:

5229 
ç
->
πl_fw
 = 
NULL
;

5230 
out
;

5231 
	}
}

5233 
	$πl_ªque°_fúmw¨e
(
πl8169_¥iv©e
 *
ç
)

5235 i‡(
	`IS_ERR
(
ç
->
πl_fw
))

5236 
	`πl_ªque°_unˇched_fúmw¨e
(
ç
);

5237 
	}
}

5239 
	$πl_rx_˛o£
(
πl8169_¥iv©e
 *
ç
)

5241 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

5243 
	`RTL_W32
(
RxC⁄fig
, 
	`RTL_R32
(RxC⁄figË& ~
RX_CONFIG_ACCEPT_MASK
);

5244 
	}
}

5246 
	$DECLARE_RTL_COND
(
πl_≈q_c⁄d
)

5248 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

5250  
	`RTL_R8
(
TxPﬁl
Ë& 
NPQ
;

5251 
	}
}

5253 
	$DECLARE_RTL_COND
(
πl_txcfg_em±y_c⁄d
)

5255 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

5257  
	`RTL_R32
(
TxC⁄fig
Ë& 
TXCFG_EMPTY
;

5258 
	}
}

5260 
	$πl8169_hw_ª£t
(
πl8169_¥iv©e
 *
ç
)

5262 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

5265 
	`πl8169_úq_mask_™d_ack
(
ç
);

5267 
	`πl_rx_˛o£
(
ç
);

5269 i‡(
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_27
 ||

5270 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_28
 ||

5271 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_31
) {

5272 
	`πl_udñay_lo›_waô_low
(
ç
, &
πl_≈q_c⁄d
, 20, 42*42);

5273 } i‡(
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_34
 ||

5274 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_35
 ||

5275 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_36
 ||

5276 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_37
 ||

5277 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_38
 ||

5278 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_40
 ||

5279 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_41
 ||

5280 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_42
 ||

5281 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_43
 ||

5282 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_44
 ||

5283 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_45
 ||

5284 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_46
 ||

5285 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_47
 ||

5286 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_48
 ||

5287 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_49
 ||

5288 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_50
 ||

5289 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_51
) {

5290 
	`RTL_W8
(
ChùCmd
, 
	`RTL_R8
(ChùCmdË| 
St›Req
);

5291 
	`πl_udñay_lo›_waô_high
(
ç
, &
πl_txcfg_em±y_c⁄d
, 100, 666);

5293 
	`RTL_W8
(
ChùCmd
, 
	`RTL_R8
(ChùCmdË| 
St›Req
);

5294 
	`udñay
(100);

5297 
	`πl_hw_ª£t
(
ç
);

5298 
	}
}

5300 
	$πl_£t_rx_tx_c⁄fig_ªgi°îs
(
πl8169_¥iv©e
 *
ç
)

5302 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

5305 
	`RTL_W32
(
TxC⁄fig
, (
TX_DMA_BURST
 << 
TxDMAShi·
) |

5306 (
I¡îFømeG≠
 << 
TxI¡îFømeG≠Shi·
));

5307 
	}
}

5309 
	$πl_hw_°¨t
(
√t_devi˚
 *
dev
)

5311 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

5313 
ç
->
	`hw_°¨t
(
dev
);

5315 
	`πl_úq_íabÀ_Æl
(
ç
);

5316 
	}
}

5318 
	$πl_£t_rx_tx_desc_ªgi°îs
(
πl8169_¥iv©e
 *
ç
,

5319 
__iomem
 *
iﬂddr
)

5326 
	`RTL_W32
(
TxDescSèπAddrHigh
, ((
u64
Ë
ç
->
TxPhyAddr
) >> 32);

5327 
	`RTL_W32
(
TxDescSèπAddrLow
, ((
u64
Ë
ç
->
TxPhyAddr
Ë& 
	`DMA_BIT_MASK
(32));

5328 
	`RTL_W32
(
RxDescAddrHigh
, ((
u64
Ë
ç
->
RxPhyAddr
) >> 32);

5329 
	`RTL_W32
(
RxDescAddrLow
, ((
u64
Ë
ç
->
RxPhyAddr
Ë& 
	`DMA_BIT_MASK
(32));

5330 
	}
}

5332 
u16
 
	$πl_rw_˝luscmd
(
__iomem
 *
iﬂddr
)

5334 
u16
 
cmd
;

5336 
cmd
 = 
	`RTL_R16
(
CPlusCmd
);

5337 
	`RTL_W16
(
CPlusCmd
, 
cmd
);

5338  
cmd
;

5339 
	}
}

5341 
	$πl_£t_rx_max_size
(
__iomem
 *
iﬂddr
, 
rx_buf_sz
)

5344 
	`RTL_W16
(
RxMaxSize
, 
rx_buf_sz
 + 1);

5345 
	}
}

5347 
	$πl8169_£t_magic_ªg
(
__iomem
 *
iﬂddr
, 
mac_vîsi⁄
)

5349 c⁄° 
	sπl_cfg2_öfo
 {

5350 
u32
 
mac_vîsi⁄
;

5351 
u32
 
˛k
;

5352 
u32
 
vÆ
;

5353 } 
cfg2_öfo
 [] = {

5354 { 
RTL_GIGA_MAC_VER_05
, 
PCI_Clock_33MHz
, 0x000fff00 },

5355 { 
RTL_GIGA_MAC_VER_05
, 
PCI_Clock_66MHz
, 0x000fffff },

5356 { 
RTL_GIGA_MAC_VER_06
, 
PCI_Clock_33MHz
, 0x00ffff00 },

5357 { 
RTL_GIGA_MAC_VER_06
, 
PCI_Clock_66MHz
, 0x00ffffff }

5359 c⁄° 
πl_cfg2_öfo
 *
p
 = 
cfg2_öfo
;

5360 
i
;

5361 
u32
 
˛k
;

5363 
˛k
 = 
	`RTL_R8
(
C⁄fig2
Ë& 
PCI_Clock_66MHz
;

5364 
i
 = 0; i < 
	`ARRAY_SIZE
(
cfg2_öfo
); i++, 
p
++) {

5365 i‡((
p
->
mac_vîsi⁄
 =mac_vîsi⁄Ë&& (p->
˛k
 == clk)) {

5366 
	`RTL_W32
(0x7c, 
p
->
vÆ
);

5370 
	}
}

5372 
	$πl_£t_rx_mode
(
√t_devi˚
 *
dev
)

5374 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

5375 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

5376 
u32
 
mc_fûãr
[2];

5377 
rx_mode
;

5378 
u32
 
tmp
 = 0;

5380 i‡(
dev
->
Êags
 & 
IFF_PROMISC
) {

5382 
	`√tif_nŸi˚
(
ç
, 
lök
, 
dev
, "Promiscuous modeÉnabled\n");

5383 
rx_mode
 =

5384 
Ac˚±Brﬂdˇ°
 | 
Ac˚±Mu…iˇ°
 | 
Ac˚±MyPhys
 |

5385 
Ac˚±AŒPhys
;

5386 
mc_fûãr
[1] = mc_filter[0] = 0xffffffff;

5387 } i‡((
	`√tdev_mc_cou¡
(
dev
Ë> 
mu…iˇ°_fûãr_limô
) ||

5388 (
dev
->
Êags
 & 
IFF_ALLMULTI
)) {

5390 
rx_mode
 = 
Ac˚±Brﬂdˇ°
 | 
Ac˚±Mu…iˇ°
 | 
Ac˚±MyPhys
;

5391 
mc_fûãr
[1] = mc_filter[0] = 0xffffffff;

5393 
√tdev_hw_addr
 *
ha
;

5395 
rx_mode
 = 
Ac˚±Brﬂdˇ°
 | 
Ac˚±MyPhys
;

5396 
mc_fûãr
[1] = mc_filter[0] = 0;

5397 
	`√tdev_f‹_óch_mc_addr
(
ha
, 
dev
) {

5398 
bô_ƒ
 = 
	`ëhî_¸c
(
ETH_ALEN
, 
ha
->
addr
) >> 26;

5399 
mc_fûãr
[
bô_ƒ
 >> 5] |= 1 << (bit_nr & 31);

5400 
rx_mode
 |
Ac˚±Mu…iˇ°
;

5404 i‡(
dev
->
„©uªs
 & 
NETIF_F_RXALL
)

5405 
rx_mode
 |(
Ac˚±Eº
 | 
Ac˚±Ru¡
);

5407 
tmp
 = (
	`RTL_R32
(
RxC⁄fig
Ë& ~
RX_CONFIG_ACCEPT_MASK
Ë| 
rx_mode
;

5409 i‡(
ç
->
mac_vîsi⁄
 > 
RTL_GIGA_MAC_VER_06
) {

5410 
u32
 
d©a
 = 
mc_fûãr
[0];

5412 
mc_fûãr
[0] = 
	`swab32
(mc_filter[1]);

5413 
mc_fûãr
[1] = 
	`swab32
(
d©a
);

5416 i‡(
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_35
)

5417 
mc_fûãr
[1] = mc_filter[0] = 0xffffffff;

5419 
	`RTL_W32
(
MAR0
 + 4, 
mc_fûãr
[1]);

5420 
	`RTL_W32
(
MAR0
 + 0, 
mc_fûãr
[0]);

5422 
	`RTL_W32
(
RxC⁄fig
, 
tmp
);

5423 
	}
}

5425 
	$πl_hw_°¨t_8169
(
√t_devi˚
 *
dev
)

5427 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

5428 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

5429 
pci_dev
 *
pdev
 = 
ç
->pci_dev;

5431 i‡(
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_05
) {

5432 
	`RTL_W16
(
CPlusCmd
, 
	`RTL_R16
(CPlusCmdË| 
PCIMulRW
);

5433 
	`pci_wrôe_c⁄fig_byã
(
pdev
, 
PCI_CACHE_LINE_SIZE
, 0x08);

5436 
	`RTL_W8
(
Cfg9346
, 
Cfg9346_U∆ock
);

5437 i‡(
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_01
 ||

5438 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_02
 ||

5439 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_03
 ||

5440 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_04
)

5441 
	`RTL_W8
(
ChùCmd
, 
CmdTxEnb
 | 
CmdRxEnb
);

5443 
	`πl_öô_rxcfg
(
ç
);

5445 
	`RTL_W8
(
E¨lyTxThªs
, 
NoE¨lyTx
);

5447 
	`πl_£t_rx_max_size
(
iﬂddr
, 
rx_buf_sz
);

5449 i‡(
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_01
 ||

5450 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_02
 ||

5451 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_03
 ||

5452 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_04
)

5453 
	`πl_£t_rx_tx_c⁄fig_ªgi°îs
(
ç
);

5455 
ç
->
˝_cmd
 |
	`πl_rw_˝luscmd
(
iﬂddr
Ë| 
PCIMulRW
;

5457 i‡(
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_02
 ||

5458 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_03
) {

5459 
	`d¥ötk
("Set MAC Reg C+CR Offset 0xe0. "

5461 
ç
->
˝_cmd
 |= (1 << 14);

5464 
	`RTL_W16
(
CPlusCmd
, 
ç
->
˝_cmd
);

5466 
	`πl8169_£t_magic_ªg
(
iﬂddr
, 
ç
->
mac_vîsi⁄
);

5472 
	`RTL_W16
(
I¡rMôig©e
, 0x0000);

5474 
	`πl_£t_rx_tx_desc_ªgi°îs
(
ç
, 
iﬂddr
);

5476 i‡(
ç
->
mac_vîsi⁄
 !
RTL_GIGA_MAC_VER_01
 &&

5477 
ç
->
mac_vîsi⁄
 !
RTL_GIGA_MAC_VER_02
 &&

5478 
ç
->
mac_vîsi⁄
 !
RTL_GIGA_MAC_VER_03
 &&

5479 
ç
->
mac_vîsi⁄
 !
RTL_GIGA_MAC_VER_04
) {

5480 
	`RTL_W8
(
ChùCmd
, 
CmdTxEnb
 | 
CmdRxEnb
);

5481 
	`πl_£t_rx_tx_c⁄fig_ªgi°îs
(
ç
);

5484 
	`RTL_W8
(
Cfg9346
, 
Cfg9346_Lock
);

5487 
	`RTL_R8
(
I¡rMask
);

5489 
	`RTL_W32
(
RxMis£d
, 0);

5491 
	`πl_£t_rx_mode
(
dev
);

5494 
	`RTL_W16
(
Mu…iI¡r
, 
	`RTL_R16
(MultiIntr) & 0xf000);

5495 
	}
}

5497 
	$πl_csi_wrôe
(
πl8169_¥iv©e
 *
ç
, 
addr
, 
vÆue
)

5499 i‡(
ç
->
csi_›s
.
wrôe
)

5500 
ç
->
csi_›s
.
	`wrôe
—p, 
addr
, 
vÆue
);

5501 
	}
}

5503 
u32
 
	$πl_csi_ªad
(
πl8169_¥iv©e
 *
ç
, 
addr
)

5505  
ç
->
csi_›s
.
ªad
 ?Åp->csi_›s.
	`ªad
—p, 
addr
) : ~0;

5506 
	}
}

5508 
	$πl_csi_ac˚ss_íabÀ
(
πl8169_¥iv©e
 *
ç
, 
u32
 
bôs
)

5510 
u32
 
csi
;

5512 
csi
 = 
	`πl_csi_ªad
(
ç
, 0x070c) & 0x00ffffff;

5513 
	`πl_csi_wrôe
(
ç
, 0x070c, 
csi
 | 
bôs
);

5514 
	}
}

5516 
	$πl_csi_ac˚ss_íabÀ_1
(
πl8169_¥iv©e
 *
ç
)

5518 
	`πl_csi_ac˚ss_íabÀ
(
ç
, 0x17000000);

5519 
	}
}

5521 
	$πl_csi_ac˚ss_íabÀ_2
(
πl8169_¥iv©e
 *
ç
)

5523 
	`πl_csi_ac˚ss_íabÀ
(
ç
, 0x27000000);

5524 
	}
}

5526 
	$DECLARE_RTL_COND
(
πl_csür_c⁄d
)

5528 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

5530  
	`RTL_R32
(
CSIAR
Ë& 
CSIAR_FLAG
;

5531 
	}
}

5533 
	$r8169_csi_wrôe
(
πl8169_¥iv©e
 *
ç
, 
addr
, 
vÆue
)

5535 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

5537 
	`RTL_W32
(
CSIDR
, 
vÆue
);

5538 
	`RTL_W32
(
CSIAR
, 
CSIAR_WRITE_CMD
 | (
addr
 & 
CSIAR_ADDR_MASK
) |

5539 
CSIAR_BYTE_ENABLE
 << 
CSIAR_BYTE_ENABLE_SHIFT
);

5541 
	`πl_udñay_lo›_waô_low
(
ç
, &
πl_csür_c⁄d
, 10, 100);

5542 
	}
}

5544 
u32
 
	$r8169_csi_ªad
(
πl8169_¥iv©e
 *
ç
, 
addr
)

5546 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

5548 
	`RTL_W32
(
CSIAR
, (
addr
 & 
CSIAR_ADDR_MASK
) |

5549 
CSIAR_BYTE_ENABLE
 << 
CSIAR_BYTE_ENABLE_SHIFT
);

5551  
	`πl_udñay_lo›_waô_high
(
ç
, &
πl_csür_c⁄d
, 10, 100) ?

5552 
	`RTL_R32
(
CSIDR
) : ~0;

5553 
	}
}

5555 
	$r8402_csi_wrôe
(
πl8169_¥iv©e
 *
ç
, 
addr
, 
vÆue
)

5557 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

5559 
	`RTL_W32
(
CSIDR
, 
vÆue
);

5560 
	`RTL_W32
(
CSIAR
, 
CSIAR_WRITE_CMD
 | (
addr
 & 
CSIAR_ADDR_MASK
) |

5561 
CSIAR_BYTE_ENABLE
 << 
CSIAR_BYTE_ENABLE_SHIFT
 |

5562 
CSIAR_FUNC_NIC
);

5564 
	`πl_udñay_lo›_waô_low
(
ç
, &
πl_csür_c⁄d
, 10, 100);

5565 
	}
}

5567 
u32
 
	$r8402_csi_ªad
(
πl8169_¥iv©e
 *
ç
, 
addr
)

5569 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

5571 
	`RTL_W32
(
CSIAR
, (
addr
 & 
CSIAR_ADDR_MASK
Ë| 
CSIAR_FUNC_NIC
 |

5572 
CSIAR_BYTE_ENABLE
 << 
CSIAR_BYTE_ENABLE_SHIFT
);

5574  
	`πl_udñay_lo›_waô_high
(
ç
, &
πl_csür_c⁄d
, 10, 100) ?

5575 
	`RTL_R32
(
CSIDR
) : ~0;

5576 
	}
}

5578 
	$r8411_csi_wrôe
(
πl8169_¥iv©e
 *
ç
, 
addr
, 
vÆue
)

5580 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

5582 
	`RTL_W32
(
CSIDR
, 
vÆue
);

5583 
	`RTL_W32
(
CSIAR
, 
CSIAR_WRITE_CMD
 | (
addr
 & 
CSIAR_ADDR_MASK
) |

5584 
CSIAR_BYTE_ENABLE
 << 
CSIAR_BYTE_ENABLE_SHIFT
 |

5585 
CSIAR_FUNC_NIC2
);

5587 
	`πl_udñay_lo›_waô_low
(
ç
, &
πl_csür_c⁄d
, 10, 100);

5588 
	}
}

5590 
u32
 
	$r8411_csi_ªad
(
πl8169_¥iv©e
 *
ç
, 
addr
)

5592 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

5594 
	`RTL_W32
(
CSIAR
, (
addr
 & 
CSIAR_ADDR_MASK
Ë| 
CSIAR_FUNC_NIC2
 |

5595 
CSIAR_BYTE_ENABLE
 << 
CSIAR_BYTE_ENABLE_SHIFT
);

5597  
	`πl_udñay_lo›_waô_high
(
ç
, &
πl_csür_c⁄d
, 10, 100) ?

5598 
	`RTL_R32
(
CSIDR
) : ~0;

5599 
	}
}

5601 
	$πl_öô_csi_›s
(
πl8169_¥iv©e
 *
ç
)

5603 
csi_›s
 *
›s
 = &
ç
->csi_ops;

5605 
ç
->
mac_vîsi⁄
) {

5606 
RTL_GIGA_MAC_VER_01
:

5607 
RTL_GIGA_MAC_VER_02
:

5608 
RTL_GIGA_MAC_VER_03
:

5609 
RTL_GIGA_MAC_VER_04
:

5610 
RTL_GIGA_MAC_VER_05
:

5611 
RTL_GIGA_MAC_VER_06
:

5612 
RTL_GIGA_MAC_VER_10
:

5613 
RTL_GIGA_MAC_VER_11
:

5614 
RTL_GIGA_MAC_VER_12
:

5615 
RTL_GIGA_MAC_VER_13
:

5616 
RTL_GIGA_MAC_VER_14
:

5617 
RTL_GIGA_MAC_VER_15
:

5618 
RTL_GIGA_MAC_VER_16
:

5619 
RTL_GIGA_MAC_VER_17
:

5620 
›s
->
wrôe
 = 
NULL
;

5621 
›s
->
ªad
 = 
NULL
;

5624 
RTL_GIGA_MAC_VER_37
:

5625 
RTL_GIGA_MAC_VER_38
:

5626 
›s
->
wrôe
 = 
r8402_csi_wrôe
;

5627 
›s
->
ªad
 = 
r8402_csi_ªad
;

5630 
RTL_GIGA_MAC_VER_44
:

5631 
›s
->
wrôe
 = 
r8411_csi_wrôe
;

5632 
›s
->
ªad
 = 
r8411_csi_ªad
;

5636 
›s
->
wrôe
 = 
r8169_csi_wrôe
;

5637 
›s
->
ªad
 = 
r8169_csi_ªad
;

5640 
	}
}

5642 
	sïhy_öfo
 {

5643 
	moff£t
;

5644 
u16
 
	mmask
;

5645 
u16
 
	mbôs
;

5648 
	$πl_ïhy_öô
(
πl8169_¥iv©e
 *
ç
, c⁄° 
ïhy_öfo
 *
e
,

5649 
Àn
)

5651 
u16
 
w
;

5653 
Àn
-- > 0) {

5654 
w
 = (
	`πl_ïhy_ªad
(
ç
, 
e
->
off£t
Ë& ~e->
mask
Ë|É->
bôs
;

5655 
	`πl_ïhy_wrôe
(
ç
, 
e
->
off£t
, 
w
);

5656 
e
++;

5658 
	}
}

5660 
	$πl_dißbÀ_˛ock_ªque°
(
pci_dev
 *
pdev
)

5662 
	`pcõ_ˇ∑bûôy_˛ór_w‹d
(
pdev
, 
PCI_EXP_LNKCTL
,

5663 
PCI_EXP_LNKCTL_CLKREQ_EN
);

5664 
	}
}

5666 
	$πl_íabÀ_˛ock_ªque°
(
pci_dev
 *
pdev
)

5668 
	`pcõ_ˇ∑bûôy_£t_w‹d
(
pdev
, 
PCI_EXP_LNKCTL
,

5669 
PCI_EXP_LNKCTL_CLKREQ_EN
);

5670 
	}
}

5672 
	$πl_pcõ_°©e_l2l3_íabÀ
(
πl8169_¥iv©e
 *
ç
, 
boﬁ
 
íabÀ
)

5674 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

5675 
u8
 
d©a
;

5677 
d©a
 = 
	`RTL_R8
(
C⁄fig3
);

5679 i‡(
íabÀ
)

5680 
d©a
 |
Rdy_to_L23
;

5682 
d©a
 &~
Rdy_to_L23
;

5684 
	`RTL_W8
(
C⁄fig3
, 
d©a
);

5685 
	}
}

5687 
	#R8168_CPCMD_QUIRK_MASK
 (\

5688 
E«bÀBi°
 | \

5689 
Mac_dbgo_€
 | \

5690 
F‹˚_hÆf_dup
 | \

5691 
F‹˚_rxÊow_í
 | \

5692 
F‹˚_txÊow_í
 | \

5693 
Cx∂_dbg_£l
 | \

5694 
ASF
 | \

5695 
PktC¡rDißbÀ
 | \

5696 
Mac_dbgo_£l
)

	)

5698 
	$πl_hw_°¨t_8168bb
(
πl8169_¥iv©e
 *
ç
)

5700 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

5701 
pci_dev
 *
pdev
 = 
ç
->pci_dev;

5703 
	`RTL_W8
(
C⁄fig3
, 
	`RTL_R8
(C⁄fig3Ë& ~
Bóc⁄_í
);

5705 
	`RTL_W16
(
CPlusCmd
, 
	`RTL_R16
(CPlusCmdË& ~
R8168_CPCMD_QUIRK_MASK
);

5707 i‡(
ç
->
dev
->
mtu
 <
ETH_DATA_LEN
) {

5708 
	`πl_tx_≥rf‹m™˚_twók
(
pdev
, (0x5 << 
MAX_READ_REQUEST_SHIFT
) |

5709 
PCI_EXP_DEVCTL_NOSNOOP_EN
);

5711 
	}
}

5713 
	$πl_hw_°¨t_8168bef
(
πl8169_¥iv©e
 *
ç
)

5715 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

5717 
	`πl_hw_°¨t_8168bb
(
ç
);

5719 
	`RTL_W8
(
MaxTxPackëSize
, 
TxPackëMax
);

5721 
	`RTL_W8
(
C⁄fig4
, 
	`RTL_R8
(Config4) & ~(1 << 0));

5722 
	}
}

5724 
	$__πl_hw_°¨t_8168˝
(
πl8169_¥iv©e
 *
ç
)

5726 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

5727 
pci_dev
 *
pdev
 = 
ç
->pci_dev;

5729 
	`RTL_W8
(
C⁄fig1
, 
	`RTL_R8
(C⁄fig1Ë| 
S≥ed_down
);

5731 
	`RTL_W8
(
C⁄fig3
, 
	`RTL_R8
(C⁄fig3Ë& ~
Bóc⁄_í
);

5733 i‡(
ç
->
dev
->
mtu
 <
ETH_DATA_LEN
)

5734 
	`πl_tx_≥rf‹m™˚_twók
(
pdev
, 0x5 << 
MAX_READ_REQUEST_SHIFT
);

5736 
	`πl_dißbÀ_˛ock_ªque°
(
pdev
);

5738 
	`RTL_W16
(
CPlusCmd
, 
	`RTL_R16
(CPlusCmdË& ~
R8168_CPCMD_QUIRK_MASK
);

5739 
	}
}

5741 
	$πl_hw_°¨t_8168˝_1
(
πl8169_¥iv©e
 *
ç
)

5743 c⁄° 
ïhy_öfo
 
e_öfo_8168˝
[] = {

5751 
	`πl_csi_ac˚ss_íabÀ_2
(
ç
);

5753 
	`πl_ïhy_öô
(
ç
, 
e_öfo_8168˝
, 
	`ARRAY_SIZE
(e_info_8168cp));

5755 
	`__πl_hw_°¨t_8168˝
(
ç
);

5756 
	}
}

5758 
	$πl_hw_°¨t_8168˝_2
(
πl8169_¥iv©e
 *
ç
)

5760 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

5761 
pci_dev
 *
pdev
 = 
ç
->pci_dev;

5763 
	`πl_csi_ac˚ss_íabÀ_2
(
ç
);

5765 
	`RTL_W8
(
C⁄fig3
, 
	`RTL_R8
(C⁄fig3Ë& ~
Bóc⁄_í
);

5767 i‡(
ç
->
dev
->
mtu
 <
ETH_DATA_LEN
)

5768 
	`πl_tx_≥rf‹m™˚_twók
(
pdev
, 0x5 << 
MAX_READ_REQUEST_SHIFT
);

5770 
	`RTL_W16
(
CPlusCmd
, 
	`RTL_R16
(CPlusCmdË& ~
R8168_CPCMD_QUIRK_MASK
);

5771 
	}
}

5773 
	$πl_hw_°¨t_8168˝_3
(
πl8169_¥iv©e
 *
ç
)

5775 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

5776 
pci_dev
 *
pdev
 = 
ç
->pci_dev;

5778 
	`πl_csi_ac˚ss_íabÀ_2
(
ç
);

5780 
	`RTL_W8
(
C⁄fig3
, 
	`RTL_R8
(C⁄fig3Ë& ~
Bóc⁄_í
);

5783 
	`RTL_W8
(
DBG_REG
, 0x20);

5785 
	`RTL_W8
(
MaxTxPackëSize
, 
TxPackëMax
);

5787 i‡(
ç
->
dev
->
mtu
 <
ETH_DATA_LEN
)

5788 
	`πl_tx_≥rf‹m™˚_twók
(
pdev
, 0x5 << 
MAX_READ_REQUEST_SHIFT
);

5790 
	`RTL_W16
(
CPlusCmd
, 
	`RTL_R16
(CPlusCmdË& ~
R8168_CPCMD_QUIRK_MASK
);

5791 
	}
}

5793 
	$πl_hw_°¨t_8168c_1
(
πl8169_¥iv©e
 *
ç
)

5795 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

5796 c⁄° 
ïhy_öfo
 
e_öfo_8168c_1
[] = {

5802 
	`πl_csi_ac˚ss_íabÀ_2
(
ç
);

5804 
	`RTL_W8
(
DBG_REG
, 0x06 | 
FIX_NAK_1
 | 
FIX_NAK_2
);

5806 
	`πl_ïhy_öô
(
ç
, 
e_öfo_8168c_1
, 
	`ARRAY_SIZE
(e_info_8168c_1));

5808 
	`__πl_hw_°¨t_8168˝
(
ç
);

5809 
	}
}

5811 
	$πl_hw_°¨t_8168c_2
(
πl8169_¥iv©e
 *
ç
)

5813 c⁄° 
ïhy_öfo
 
e_öfo_8168c_2
[] = {

5818 
	`πl_csi_ac˚ss_íabÀ_2
(
ç
);

5820 
	`πl_ïhy_öô
(
ç
, 
e_öfo_8168c_2
, 
	`ARRAY_SIZE
(e_info_8168c_2));

5822 
	`__πl_hw_°¨t_8168˝
(
ç
);

5823 
	}
}

5825 
	$πl_hw_°¨t_8168c_3
(
πl8169_¥iv©e
 *
ç
)

5827 
	`πl_hw_°¨t_8168c_2
(
ç
);

5828 
	}
}

5830 
	$πl_hw_°¨t_8168c_4
(
πl8169_¥iv©e
 *
ç
)

5832 
	`πl_csi_ac˚ss_íabÀ_2
(
ç
);

5834 
	`__πl_hw_°¨t_8168˝
(
ç
);

5835 
	}
}

5837 
	$πl_hw_°¨t_8168d
(
πl8169_¥iv©e
 *
ç
)

5839 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

5840 
pci_dev
 *
pdev
 = 
ç
->pci_dev;

5842 
	`πl_csi_ac˚ss_íabÀ_2
(
ç
);

5844 
	`πl_dißbÀ_˛ock_ªque°
(
pdev
);

5846 
	`RTL_W8
(
MaxTxPackëSize
, 
TxPackëMax
);

5848 i‡(
ç
->
dev
->
mtu
 <
ETH_DATA_LEN
)

5849 
	`πl_tx_≥rf‹m™˚_twók
(
pdev
, 0x5 << 
MAX_READ_REQUEST_SHIFT
);

5851 
	`RTL_W16
(
CPlusCmd
, 
	`RTL_R16
(CPlusCmdË& ~
R8168_CPCMD_QUIRK_MASK
);

5852 
	}
}

5854 
	$πl_hw_°¨t_8168dp
(
πl8169_¥iv©e
 *
ç
)

5856 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

5857 
pci_dev
 *
pdev
 = 
ç
->pci_dev;

5859 
	`πl_csi_ac˚ss_íabÀ_1
(
ç
);

5861 i‡(
ç
->
dev
->
mtu
 <
ETH_DATA_LEN
)

5862 
	`πl_tx_≥rf‹m™˚_twók
(
pdev
, 0x5 << 
MAX_READ_REQUEST_SHIFT
);

5864 
	`RTL_W8
(
MaxTxPackëSize
, 
TxPackëMax
);

5866 
	`πl_dißbÀ_˛ock_ªque°
(
pdev
);

5867 
	}
}

5869 
	$πl_hw_°¨t_8168d_4
(
πl8169_¥iv©e
 *
ç
)

5871 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

5872 
pci_dev
 *
pdev
 = 
ç
->pci_dev;

5873 c⁄° 
ïhy_öfo
 
e_öfo_8168d_4
[] = {

5879 
	`πl_csi_ac˚ss_íabÀ_1
(
ç
);

5881 
	`πl_tx_≥rf‹m™˚_twók
(
pdev
, 0x5 << 
MAX_READ_REQUEST_SHIFT
);

5883 
	`RTL_W8
(
MaxTxPackëSize
, 
TxPackëMax
);

5885 
	`πl_ïhy_öô
(
ç
, 
e_öfo_8168d_4
, 
	`ARRAY_SIZE
(e_info_8168d_4));

5887 
	`πl_íabÀ_˛ock_ªque°
(
pdev
);

5888 
	}
}

5890 
	$πl_hw_°¨t_8168e_1
(
πl8169_¥iv©e
 *
ç
)

5892 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

5893 
pci_dev
 *
pdev
 = 
ç
->pci_dev;

5894 c⁄° 
ïhy_öfo
 
e_öfo_8168e_1
[] = {

5910 
	`πl_csi_ac˚ss_íabÀ_2
(
ç
);

5912 
	`πl_ïhy_öô
(
ç
, 
e_öfo_8168e_1
, 
	`ARRAY_SIZE
(e_info_8168e_1));

5914 i‡(
ç
->
dev
->
mtu
 <
ETH_DATA_LEN
)

5915 
	`πl_tx_≥rf‹m™˚_twók
(
pdev
, 0x5 << 
MAX_READ_REQUEST_SHIFT
);

5917 
	`RTL_W8
(
MaxTxPackëSize
, 
TxPackëMax
);

5919 
	`πl_dißbÀ_˛ock_ªque°
(
pdev
);

5922 
	`RTL_W32
(
MISC
, 
	`RTL_R32
(MISCË| 
TXPLA_RST
);

5923 
	`RTL_W32
(
MISC
, 
	`RTL_R32
(MISCË& ~
TXPLA_RST
);

5925 
	`RTL_W8
(
C⁄fig5
, 
	`RTL_R8
(C⁄fig5Ë& ~
Spi_í
);

5926 
	}
}

5928 
	$πl_hw_°¨t_8168e_2
(
πl8169_¥iv©e
 *
ç
)

5930 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

5931 
pci_dev
 *
pdev
 = 
ç
->pci_dev;

5932 c⁄° 
ïhy_öfo
 
e_öfo_8168e_2
[] = {

5937 
	`πl_csi_ac˚ss_íabÀ_1
(
ç
);

5939 
	`πl_ïhy_öô
(
ç
, 
e_öfo_8168e_2
, 
	`ARRAY_SIZE
(e_info_8168e_2));

5941 i‡(
ç
->
dev
->
mtu
 <
ETH_DATA_LEN
)

5942 
	`πl_tx_≥rf‹m™˚_twók
(
pdev
, 0x5 << 
MAX_READ_REQUEST_SHIFT
);

5944 
	`πl_îi_wrôe
(
ç
, 0xc0, 
ERIAR_MASK_0011
, 0x0000, 
ERIAR_EXGMAC
);

5945 
	`πl_îi_wrôe
(
ç
, 0xb8, 
ERIAR_MASK_0011
, 0x0000, 
ERIAR_EXGMAC
);

5946 
	`πl_îi_wrôe
(
ç
, 0xc8, 
ERIAR_MASK_1111
, 0x00100002, 
ERIAR_EXGMAC
);

5947 
	`πl_îi_wrôe
(
ç
, 0xe8, 
ERIAR_MASK_1111
, 0x00100006, 
ERIAR_EXGMAC
);

5948 
	`πl_îi_wrôe
(
ç
, 0xcc, 
ERIAR_MASK_1111
, 0x00000050, 
ERIAR_EXGMAC
);

5949 
	`πl_îi_wrôe
(
ç
, 0xd0, 
ERIAR_MASK_1111
, 0x07ff0060, 
ERIAR_EXGMAC
);

5950 
	`πl_w0w1_îi
(
ç
, 0x1b0, 
ERIAR_MASK_0001
, 0x10, 0x00, 
ERIAR_EXGMAC
);

5951 
	`πl_w0w1_îi
(
ç
, 0x0d4, 
ERIAR_MASK_0011
, 0x0c00, 0xff00, 
ERIAR_EXGMAC
);

5953 
	`RTL_W8
(
MaxTxPackëSize
, 
E¨lySize
);

5955 
	`πl_dißbÀ_˛ock_ªque°
(
pdev
);

5957 
	`RTL_W32
(
TxC⁄fig
, 
	`RTL_R32
(TxC⁄figË| 
TXCFG_AUTO_FIFO
);

5958 
	`RTL_W8
(
MCU
, 
	`RTL_R8
(MCUË& ~
NOW_IS_OOB
);

5961 
	`RTL_W8
(
EEE_LED
, 
	`RTL_R8
(EEE_LED) & ~0x07);

5963 
	`RTL_W8
(
DLLPR
, 
	`RTL_R8
(DLLPRË| 
PFM_EN
);

5964 
	`RTL_W32
(
MISC
, 
	`RTL_R32
(MISCË| 
PWM_EN
);

5965 
	`RTL_W8
(
C⁄fig5
, 
	`RTL_R8
(C⁄fig5Ë& ~
Spi_í
);

5966 
	}
}

5968 
	$πl_hw_°¨t_8168f
(
πl8169_¥iv©e
 *
ç
)

5970 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

5971 
pci_dev
 *
pdev
 = 
ç
->pci_dev;

5973 
	`πl_csi_ac˚ss_íabÀ_2
(
ç
);

5975 
	`πl_tx_≥rf‹m™˚_twók
(
pdev
, 0x5 << 
MAX_READ_REQUEST_SHIFT
);

5977 
	`πl_îi_wrôe
(
ç
, 0xc0, 
ERIAR_MASK_0011
, 0x0000, 
ERIAR_EXGMAC
);

5978 
	`πl_îi_wrôe
(
ç
, 0xb8, 
ERIAR_MASK_0011
, 0x0000, 
ERIAR_EXGMAC
);

5979 
	`πl_îi_wrôe
(
ç
, 0xc8, 
ERIAR_MASK_1111
, 0x00100002, 
ERIAR_EXGMAC
);

5980 
	`πl_îi_wrôe
(
ç
, 0xe8, 
ERIAR_MASK_1111
, 0x00100006, 
ERIAR_EXGMAC
);

5981 
	`πl_w0w1_îi
(
ç
, 0xdc, 
ERIAR_MASK_0001
, 0x00, 0x01, 
ERIAR_EXGMAC
);

5982 
	`πl_w0w1_îi
(
ç
, 0xdc, 
ERIAR_MASK_0001
, 0x01, 0x00, 
ERIAR_EXGMAC
);

5983 
	`πl_w0w1_îi
(
ç
, 0x1b0, 
ERIAR_MASK_0001
, 0x10, 0x00, 
ERIAR_EXGMAC
);

5984 
	`πl_w0w1_îi
(
ç
, 0x1d0, 
ERIAR_MASK_0001
, 0x10, 0x00, 
ERIAR_EXGMAC
);

5985 
	`πl_îi_wrôe
(
ç
, 0xcc, 
ERIAR_MASK_1111
, 0x00000050, 
ERIAR_EXGMAC
);

5986 
	`πl_îi_wrôe
(
ç
, 0xd0, 
ERIAR_MASK_1111
, 0x00000060, 
ERIAR_EXGMAC
);

5988 
	`RTL_W8
(
MaxTxPackëSize
, 
E¨lySize
);

5990 
	`πl_dißbÀ_˛ock_ªque°
(
pdev
);

5992 
	`RTL_W32
(
TxC⁄fig
, 
	`RTL_R32
(TxC⁄figË| 
TXCFG_AUTO_FIFO
);

5993 
	`RTL_W8
(
MCU
, 
	`RTL_R8
(MCUË& ~
NOW_IS_OOB
);

5994 
	`RTL_W8
(
DLLPR
, 
	`RTL_R8
(DLLPRË| 
PFM_EN
);

5995 
	`RTL_W32
(
MISC
, 
	`RTL_R32
(MISCË| 
PWM_EN
);

5996 
	`RTL_W8
(
C⁄fig5
, 
	`RTL_R8
(C⁄fig5Ë& ~
Spi_í
);

5997 
	}
}

5999 
	$πl_hw_°¨t_8168f_1
(
πl8169_¥iv©e
 *
ç
)

6001 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

6002 c⁄° 
ïhy_öfo
 
e_öfo_8168f_1
[] = {

6009 
	`πl_hw_°¨t_8168f
(
ç
);

6011 
	`πl_ïhy_öô
(
ç
, 
e_öfo_8168f_1
, 
	`ARRAY_SIZE
(e_info_8168f_1));

6013 
	`πl_w0w1_îi
(
ç
, 0x0d4, 
ERIAR_MASK_0011
, 0x0c00, 0xff00, 
ERIAR_EXGMAC
);

6016 
	`RTL_W8
(
EEE_LED
, 
	`RTL_R8
(EEE_LED) & ~0x07);

6017 
	}
}

6019 
	$πl_hw_°¨t_8411
(
πl8169_¥iv©e
 *
ç
)

6021 c⁄° 
ïhy_öfo
 
e_öfo_8168f_1
[] = {

6028 
	`πl_hw_°¨t_8168f
(
ç
);

6029 
	`πl_pcõ_°©e_l2l3_íabÀ
(
ç
, 
Ál£
);

6031 
	`πl_ïhy_öô
(
ç
, 
e_öfo_8168f_1
, 
	`ARRAY_SIZE
(e_info_8168f_1));

6033 
	`πl_w0w1_îi
(
ç
, 0x0d4, 
ERIAR_MASK_0011
, 0x0c00, 0x0000, 
ERIAR_EXGMAC
);

6034 
	}
}

6036 
	$πl_hw_°¨t_8168g
(
πl8169_¥iv©e
 *
ç
)

6038 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

6039 
pci_dev
 *
pdev
 = 
ç
->pci_dev;

6041 
	`RTL_W32
(
TxC⁄fig
, 
	`RTL_R32
(TxC⁄figË| 
TXCFG_AUTO_FIFO
);

6043 
	`πl_îi_wrôe
(
ç
, 0xc8, 
ERIAR_MASK_0101
, 0x080002, 
ERIAR_EXGMAC
);

6044 
	`πl_îi_wrôe
(
ç
, 0xcc, 
ERIAR_MASK_0001
, 0x38, 
ERIAR_EXGMAC
);

6045 
	`πl_îi_wrôe
(
ç
, 0xd0, 
ERIAR_MASK_0001
, 0x48, 
ERIAR_EXGMAC
);

6046 
	`πl_îi_wrôe
(
ç
, 0xe8, 
ERIAR_MASK_1111
, 0x00100006, 
ERIAR_EXGMAC
);

6048 
	`πl_csi_ac˚ss_íabÀ_1
(
ç
);

6050 
	`πl_tx_≥rf‹m™˚_twók
(
pdev
, 0x5 << 
MAX_READ_REQUEST_SHIFT
);

6052 
	`πl_w0w1_îi
(
ç
, 0xdc, 
ERIAR_MASK_0001
, 0x00, 0x01, 
ERIAR_EXGMAC
);

6053 
	`πl_w0w1_îi
(
ç
, 0xdc, 
ERIAR_MASK_0001
, 0x01, 0x00, 
ERIAR_EXGMAC
);

6054 
	`πl_îi_wrôe
(
ç
, 0x2f8, 
ERIAR_MASK_0011
, 0x1d8f, 
ERIAR_EXGMAC
);

6056 
	`RTL_W32
(
MISC
, 
	`RTL_R32
(MISCË& ~
RXDV_GATED_EN
);

6057 
	`RTL_W8
(
MaxTxPackëSize
, 
E¨lySize
);

6059 
	`πl_îi_wrôe
(
ç
, 0xc0, 
ERIAR_MASK_0011
, 0x0000, 
ERIAR_EXGMAC
);

6060 
	`πl_îi_wrôe
(
ç
, 0xb8, 
ERIAR_MASK_0011
, 0x0000, 
ERIAR_EXGMAC
);

6063 
	`RTL_W8
(
EEE_LED
, 
	`RTL_R8
(EEE_LED) & ~0x07);

6065 
	`πl_w0w1_îi
(
ç
, 0x2fc, 
ERIAR_MASK_0001
, 0x01, 0x06, 
ERIAR_EXGMAC
);

6066 
	`πl_w0w1_îi
(
ç
, 0x1b0, 
ERIAR_MASK_0011
, 0x0000, 0x1000, 
ERIAR_EXGMAC
);

6068 
	`πl_pcõ_°©e_l2l3_íabÀ
(
ç
, 
Ál£
);

6069 
	}
}

6071 
	$πl_hw_°¨t_8168g_1
(
πl8169_¥iv©e
 *
ç
)

6073 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

6074 c⁄° 
ïhy_öfo
 
e_öfo_8168g_1
[] = {

6081 
	`πl_hw_°¨t_8168g
(
ç
);

6084 
	`RTL_W8
(
C⁄fig2
, 
	`RTL_R8
(C⁄fig2Ë& ~
ClkReqEn
);

6085 
	`RTL_W8
(
C⁄fig5
, 
	`RTL_R8
(C⁄fig5Ë& ~
ASPM_í
);

6086 
	`πl_ïhy_öô
(
ç
, 
e_öfo_8168g_1
, 
	`ARRAY_SIZE
(e_info_8168g_1));

6087 
	}
}

6089 
	$πl_hw_°¨t_8168g_2
(
πl8169_¥iv©e
 *
ç
)

6091 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

6092 c⁄° 
ïhy_öfo
 
e_öfo_8168g_2
[] = {

6099 
	`πl_hw_°¨t_8168g
(
ç
);

6102 
	`RTL_W8
(
C⁄fig2
, 
	`RTL_R8
(C⁄fig2Ë& ~
ClkReqEn
);

6103 
	`RTL_W8
(
C⁄fig5
, 
	`RTL_R8
(C⁄fig5Ë& ~
ASPM_í
);

6104 
	`πl_ïhy_öô
(
ç
, 
e_öfo_8168g_2
, 
	`ARRAY_SIZE
(e_info_8168g_2));

6105 
	}
}

6107 
	$πl_hw_°¨t_8411_2
(
πl8169_¥iv©e
 *
ç
)

6109 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

6110 c⁄° 
ïhy_öfo
 
e_öfo_8411_2
[] = {

6118 
	`πl_hw_°¨t_8168g
(
ç
);

6121 
	`RTL_W8
(
C⁄fig2
, 
	`RTL_R8
(C⁄fig2Ë& ~
ClkReqEn
);

6122 
	`RTL_W8
(
C⁄fig5
, 
	`RTL_R8
(C⁄fig5Ë& ~
ASPM_í
);

6123 
	`πl_ïhy_öô
(
ç
, 
e_öfo_8411_2
, 
	`ARRAY_SIZE
(e_info_8411_2));

6124 
	}
}

6126 
	$πl_hw_°¨t_8168h_1
(
πl8169_¥iv©e
 *
ç
)

6128 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

6129 
pci_dev
 *
pdev
 = 
ç
->pci_dev;

6130 
rg_ßw_˙t
;

6131 
u32
 
d©a
;

6132 c⁄° 
ïhy_öfo
 
e_öfo_8168h_1
[] = {

6142 
	`RTL_W8
(
C⁄fig2
, 
	`RTL_R8
(C⁄fig2Ë& ~
ClkReqEn
);

6143 
	`RTL_W8
(
C⁄fig5
, 
	`RTL_R8
(C⁄fig5Ë& ~
ASPM_í
);

6144 
	`πl_ïhy_öô
(
ç
, 
e_öfo_8168h_1
, 
	`ARRAY_SIZE
(e_info_8168h_1));

6146 
	`RTL_W32
(
TxC⁄fig
, 
	`RTL_R32
(TxC⁄figË| 
TXCFG_AUTO_FIFO
);

6148 
	`πl_îi_wrôe
(
ç
, 0xc8, 
ERIAR_MASK_0101
, 0x00080002, 
ERIAR_EXGMAC
);

6149 
	`πl_îi_wrôe
(
ç
, 0xcc, 
ERIAR_MASK_0001
, 0x38, 
ERIAR_EXGMAC
);

6150 
	`πl_îi_wrôe
(
ç
, 0xd0, 
ERIAR_MASK_0001
, 0x48, 
ERIAR_EXGMAC
);

6151 
	`πl_îi_wrôe
(
ç
, 0xe8, 
ERIAR_MASK_1111
, 0x00100006, 
ERIAR_EXGMAC
);

6153 
	`πl_csi_ac˚ss_íabÀ_1
(
ç
);

6155 
	`πl_tx_≥rf‹m™˚_twók
(
pdev
, 0x5 << 
MAX_READ_REQUEST_SHIFT
);

6157 
	`πl_w0w1_îi
(
ç
, 0xdc, 
ERIAR_MASK_0001
, 0x00, 0x01, 
ERIAR_EXGMAC
);

6158 
	`πl_w0w1_îi
(
ç
, 0xdc, 
ERIAR_MASK_0001
, 0x01, 0x00, 
ERIAR_EXGMAC
);

6160 
	`πl_w0w1_îi
(
ç
, 0xdc, 
ERIAR_MASK_1111
, 0x0010, 0x00, 
ERIAR_EXGMAC
);

6162 
	`πl_w0w1_îi
(
ç
, 0xd4, 
ERIAR_MASK_1111
, 0x1f00, 0x00, 
ERIAR_EXGMAC
);

6164 
	`πl_îi_wrôe
(
ç
, 0x5f0, 
ERIAR_MASK_0011
, 0x4f87, 
ERIAR_EXGMAC
);

6166 
	`RTL_W32
(
MISC
, 
	`RTL_R32
(MISCË& ~
RXDV_GATED_EN
);

6167 
	`RTL_W8
(
MaxTxPackëSize
, 
E¨lySize
);

6169 
	`πl_îi_wrôe
(
ç
, 0xc0, 
ERIAR_MASK_0011
, 0x0000, 
ERIAR_EXGMAC
);

6170 
	`πl_îi_wrôe
(
ç
, 0xb8, 
ERIAR_MASK_0011
, 0x0000, 
ERIAR_EXGMAC
);

6173 
	`RTL_W8
(
EEE_LED
, 
	`RTL_R8
(EEE_LED) & ~0x07);

6175 
	`RTL_W8
(
DLLPR
, 
	`RTL_R8
(DLLPRË& ~
PFM_EN
);

6176 
	`RTL_W8
(
MISC_1
, 
	`RTL_R8
(MISC_1Ë& ~
PFM_D3COLD_EN
);

6178 
	`RTL_W8
(
DLLPR
, 
	`RTL_R8
(DLLPRË& ~
TX_10M_PS_EN
);

6180 
	`πl_w0w1_îi
(
ç
, 0x1b0, 
ERIAR_MASK_0011
, 0x0000, 0x1000, 
ERIAR_EXGMAC
);

6182 
	`πl_pcõ_°©e_l2l3_íabÀ
(
ç
, 
Ál£
);

6184 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0c42);

6185 
rg_ßw_˙t
 = (
	`πl_ªadphy
(
ç
, 0x13) & 0x3fff);

6186 
	`πl_wrôïhy
(
ç
, 0x1f, 0x0000);

6187 i‡(
rg_ßw_˙t
 > 0) {

6188 
u16
 
sw_˙t_1ms_öi
;

6190 
sw_˙t_1ms_öi
 = 16000000/
rg_ßw_˙t
;

6191 
sw_˙t_1ms_öi
 &= 0x0fff;

6192 
d©a
 = 
	`r8168_mac_o˝_ªad
(
ç
, 0xd412);

6193 
d©a
 &= ~0x0fff;

6194 
d©a
 |
sw_˙t_1ms_öi
;

6195 
	`r8168_mac_o˝_wrôe
(
ç
, 0xd412, 
d©a
);

6198 
d©a
 = 
	`r8168_mac_o˝_ªad
(
ç
, 0xe056);

6199 
d©a
 &= ~0xf0;

6200 
d©a
 |= 0x70;

6201 
	`r8168_mac_o˝_wrôe
(
ç
, 0xe056, 
d©a
);

6203 
d©a
 = 
	`r8168_mac_o˝_ªad
(
ç
, 0xe052);

6204 
d©a
 &= ~0x6000;

6205 
d©a
 |= 0x8008;

6206 
	`r8168_mac_o˝_wrôe
(
ç
, 0xe052, 
d©a
);

6208 
d©a
 = 
	`r8168_mac_o˝_ªad
(
ç
, 0xe0d6);

6209 
d©a
 &= ~0x01ff;

6210 
d©a
 |= 0x017f;

6211 
	`r8168_mac_o˝_wrôe
(
ç
, 0xe0d6, 
d©a
);

6213 
d©a
 = 
	`r8168_mac_o˝_ªad
(
ç
, 0xd420);

6214 
d©a
 &= ~0x0fff;

6215 
d©a
 |= 0x047f;

6216 
	`r8168_mac_o˝_wrôe
(
ç
, 0xd420, 
d©a
);

6218 
	`r8168_mac_o˝_wrôe
(
ç
, 0xe63e, 0x0001);

6219 
	`r8168_mac_o˝_wrôe
(
ç
, 0xe63e, 0x0000);

6220 
	`r8168_mac_o˝_wrôe
(
ç
, 0xc094, 0x0000);

6221 
	`r8168_mac_o˝_wrôe
(
ç
, 0xc09e, 0x0000);

6222 
	}
}

6224 
	$πl_hw_°¨t_8168ï
(
πl8169_¥iv©e
 *
ç
)

6226 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

6227 
pci_dev
 *
pdev
 = 
ç
->pci_dev;

6229 
	`πl8168ï_°›_cmac
(
ç
);

6231 
	`RTL_W32
(
TxC⁄fig
, 
	`RTL_R32
(TxC⁄figË| 
TXCFG_AUTO_FIFO
);

6233 
	`πl_îi_wrôe
(
ç
, 0xc8, 
ERIAR_MASK_0101
, 0x00080002, 
ERIAR_EXGMAC
);

6234 
	`πl_îi_wrôe
(
ç
, 0xcc, 
ERIAR_MASK_0001
, 0x2f, 
ERIAR_EXGMAC
);

6235 
	`πl_îi_wrôe
(
ç
, 0xd0, 
ERIAR_MASK_0001
, 0x5f, 
ERIAR_EXGMAC
);

6236 
	`πl_îi_wrôe
(
ç
, 0xe8, 
ERIAR_MASK_1111
, 0x00100006, 
ERIAR_EXGMAC
);

6238 
	`πl_csi_ac˚ss_íabÀ_1
(
ç
);

6240 
	`πl_tx_≥rf‹m™˚_twók
(
pdev
, 0x5 << 
MAX_READ_REQUEST_SHIFT
);

6242 
	`πl_w0w1_îi
(
ç
, 0xdc, 
ERIAR_MASK_0001
, 0x00, 0x01, 
ERIAR_EXGMAC
);

6243 
	`πl_w0w1_îi
(
ç
, 0xdc, 
ERIAR_MASK_0001
, 0x01, 0x00, 
ERIAR_EXGMAC
);

6245 
	`πl_w0w1_îi
(
ç
, 0xd4, 
ERIAR_MASK_1111
, 0x1f80, 0x00, 
ERIAR_EXGMAC
);

6247 
	`πl_îi_wrôe
(
ç
, 0x5f0, 
ERIAR_MASK_0011
, 0x4f87, 
ERIAR_EXGMAC
);

6249 
	`RTL_W32
(
MISC
, 
	`RTL_R32
(MISCË& ~
RXDV_GATED_EN
);

6250 
	`RTL_W8
(
MaxTxPackëSize
, 
E¨lySize
);

6252 
	`πl_îi_wrôe
(
ç
, 0xc0, 
ERIAR_MASK_0011
, 0x0000, 
ERIAR_EXGMAC
);

6253 
	`πl_îi_wrôe
(
ç
, 0xb8, 
ERIAR_MASK_0011
, 0x0000, 
ERIAR_EXGMAC
);

6256 
	`RTL_W8
(
EEE_LED
, 
	`RTL_R8
(EEE_LED) & ~0x07);

6258 
	`πl_w0w1_îi
(
ç
, 0x2fc, 
ERIAR_MASK_0001
, 0x01, 0x06, 
ERIAR_EXGMAC
);

6260 
	`RTL_W8
(
DLLPR
, 
	`RTL_R8
(DLLPRË& ~
TX_10M_PS_EN
);

6262 
	`πl_pcõ_°©e_l2l3_íabÀ
(
ç
, 
Ál£
);

6263 
	}
}

6265 
	$πl_hw_°¨t_8168ï_1
(
πl8169_¥iv©e
 *
ç
)

6267 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

6268 c⁄° 
ïhy_öfo
 
e_öfo_8168ï_1
[] = {

6277 
	`RTL_W8
(
C⁄fig2
, 
	`RTL_R8
(C⁄fig2Ë& ~
ClkReqEn
);

6278 
	`RTL_W8
(
C⁄fig5
, 
	`RTL_R8
(C⁄fig5Ë& ~
ASPM_í
);

6279 
	`πl_ïhy_öô
(
ç
, 
e_öfo_8168ï_1
, 
	`ARRAY_SIZE
(e_info_8168ep_1));

6281 
	`πl_hw_°¨t_8168ï
(
ç
);

6282 
	}
}

6284 
	$πl_hw_°¨t_8168ï_2
(
πl8169_¥iv©e
 *
ç
)

6286 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

6287 c⁄° 
ïhy_öfo
 
e_öfo_8168ï_2
[] = {

6294 
	`RTL_W8
(
C⁄fig2
, 
	`RTL_R8
(C⁄fig2Ë& ~
ClkReqEn
);

6295 
	`RTL_W8
(
C⁄fig5
, 
	`RTL_R8
(C⁄fig5Ë& ~
ASPM_í
);

6296 
	`πl_ïhy_öô
(
ç
, 
e_öfo_8168ï_2
, 
	`ARRAY_SIZE
(e_info_8168ep_2));

6298 
	`πl_hw_°¨t_8168ï
(
ç
);

6300 
	`RTL_W8
(
DLLPR
, 
	`RTL_R8
(DLLPRË& ~
PFM_EN
);

6301 
	`RTL_W8
(
MISC_1
, 
	`RTL_R8
(MISC_1Ë& ~
PFM_D3COLD_EN
);

6302 
	}
}

6304 
	$πl_hw_°¨t_8168ï_3
(
πl8169_¥iv©e
 *
ç
)

6306 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

6307 
u32
 
d©a
;

6308 c⁄° 
ïhy_öfo
 
e_öfo_8168ï_3
[] = {

6316 
	`RTL_W8
(
C⁄fig2
, 
	`RTL_R8
(C⁄fig2Ë& ~
ClkReqEn
);

6317 
	`RTL_W8
(
C⁄fig5
, 
	`RTL_R8
(C⁄fig5Ë& ~
ASPM_í
);

6318 
	`πl_ïhy_öô
(
ç
, 
e_öfo_8168ï_3
, 
	`ARRAY_SIZE
(e_info_8168ep_3));

6320 
	`πl_hw_°¨t_8168ï
(
ç
);

6322 
	`RTL_W8
(
DLLPR
, 
	`RTL_R8
(DLLPRË& ~
PFM_EN
);

6323 
	`RTL_W8
(
MISC_1
, 
	`RTL_R8
(MISC_1Ë& ~
PFM_D3COLD_EN
);

6325 
d©a
 = 
	`r8168_mac_o˝_ªad
(
ç
, 0xd3e2);

6326 
d©a
 &= 0xf000;

6327 
d©a
 |= 0x0271;

6328 
	`r8168_mac_o˝_wrôe
(
ç
, 0xd3e2, 
d©a
);

6330 
d©a
 = 
	`r8168_mac_o˝_ªad
(
ç
, 0xd3e4);

6331 
d©a
 &= 0xff00;

6332 
	`r8168_mac_o˝_wrôe
(
ç
, 0xd3e4, 
d©a
);

6334 
d©a
 = 
	`r8168_mac_o˝_ªad
(
ç
, 0xe860);

6335 
d©a
 |= 0x0080;

6336 
	`r8168_mac_o˝_wrôe
(
ç
, 0xe860, 
d©a
);

6337 
	}
}

6339 
	$πl_hw_°¨t_8168
(
√t_devi˚
 *
dev
)

6341 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

6342 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

6344 
	`RTL_W8
(
Cfg9346
, 
Cfg9346_U∆ock
);

6346 
	`RTL_W8
(
MaxTxPackëSize
, 
TxPackëMax
);

6348 
	`πl_£t_rx_max_size
(
iﬂddr
, 
rx_buf_sz
);

6350 
ç
->
˝_cmd
 |
	`RTL_R16
(
CPlusCmd
Ë| 
PktC¡rDißbÀ
 | 
INTT_1
;

6352 
	`RTL_W16
(
CPlusCmd
, 
ç
->
˝_cmd
);

6354 
	`RTL_W16
(
I¡rMôig©e
, 0x5151);

6357 i‡(
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_11
) {

6358 
ç
->
evít_¶ow
 |
RxFIFOOvî
 | 
PCSTimeout
;

6359 
ç
->
evít_¶ow
 &~
RxOvîÊow
;

6362 
	`πl_£t_rx_tx_desc_ªgi°îs
(
ç
, 
iﬂddr
);

6364 
	`πl_£t_rx_tx_c⁄fig_ªgi°îs
(
ç
);

6366 
	`RTL_R8
(
I¡rMask
);

6368 
ç
->
mac_vîsi⁄
) {

6369 
RTL_GIGA_MAC_VER_11
:

6370 
	`πl_hw_°¨t_8168bb
(
ç
);

6373 
RTL_GIGA_MAC_VER_12
:

6374 
RTL_GIGA_MAC_VER_17
:

6375 
	`πl_hw_°¨t_8168bef
(
ç
);

6378 
RTL_GIGA_MAC_VER_18
:

6379 
	`πl_hw_°¨t_8168˝_1
(
ç
);

6382 
RTL_GIGA_MAC_VER_19
:

6383 
	`πl_hw_°¨t_8168c_1
(
ç
);

6386 
RTL_GIGA_MAC_VER_20
:

6387 
	`πl_hw_°¨t_8168c_2
(
ç
);

6390 
RTL_GIGA_MAC_VER_21
:

6391 
	`πl_hw_°¨t_8168c_3
(
ç
);

6394 
RTL_GIGA_MAC_VER_22
:

6395 
	`πl_hw_°¨t_8168c_4
(
ç
);

6398 
RTL_GIGA_MAC_VER_23
:

6399 
	`πl_hw_°¨t_8168˝_2
(
ç
);

6402 
RTL_GIGA_MAC_VER_24
:

6403 
	`πl_hw_°¨t_8168˝_3
(
ç
);

6406 
RTL_GIGA_MAC_VER_25
:

6407 
RTL_GIGA_MAC_VER_26
:

6408 
RTL_GIGA_MAC_VER_27
:

6409 
	`πl_hw_°¨t_8168d
(
ç
);

6412 
RTL_GIGA_MAC_VER_28
:

6413 
	`πl_hw_°¨t_8168d_4
(
ç
);

6416 
RTL_GIGA_MAC_VER_31
:

6417 
	`πl_hw_°¨t_8168dp
(
ç
);

6420 
RTL_GIGA_MAC_VER_32
:

6421 
RTL_GIGA_MAC_VER_33
:

6422 
	`πl_hw_°¨t_8168e_1
(
ç
);

6424 
RTL_GIGA_MAC_VER_34
:

6425 
	`πl_hw_°¨t_8168e_2
(
ç
);

6428 
RTL_GIGA_MAC_VER_35
:

6429 
RTL_GIGA_MAC_VER_36
:

6430 
	`πl_hw_°¨t_8168f_1
(
ç
);

6433 
RTL_GIGA_MAC_VER_38
:

6434 
	`πl_hw_°¨t_8411
(
ç
);

6437 
RTL_GIGA_MAC_VER_40
:

6438 
RTL_GIGA_MAC_VER_41
:

6439 
	`πl_hw_°¨t_8168g_1
(
ç
);

6441 
RTL_GIGA_MAC_VER_42
:

6442 
	`πl_hw_°¨t_8168g_2
(
ç
);

6445 
RTL_GIGA_MAC_VER_44
:

6446 
	`πl_hw_°¨t_8411_2
(
ç
);

6449 
RTL_GIGA_MAC_VER_45
:

6450 
RTL_GIGA_MAC_VER_46
:

6451 
	`πl_hw_°¨t_8168h_1
(
ç
);

6454 
RTL_GIGA_MAC_VER_49
:

6455 
	`πl_hw_°¨t_8168ï_1
(
ç
);

6458 
RTL_GIGA_MAC_VER_50
:

6459 
	`πl_hw_°¨t_8168ï_2
(
ç
);

6462 
RTL_GIGA_MAC_VER_51
:

6463 
	`πl_hw_°¨t_8168ï_3
(
ç
);

6467 
	`¥ötk
(
KERN_ERR
 
PFX
 "%s: unknown chipset (mac_version = %d).\n",

6468 
dev
->
«me
, 
ç
->
mac_vîsi⁄
);

6472 
	`RTL_W8
(
Cfg9346
, 
Cfg9346_Lock
);

6474 
	`RTL_W8
(
ChùCmd
, 
CmdTxEnb
 | 
CmdRxEnb
);

6476 
	`πl_£t_rx_mode
(
dev
);

6478 
	`RTL_W16
(
Mu…iI¡r
, 
	`RTL_R16
(MultiIntr) & 0xf000);

6479 
	}
}

6481 
	#R810X_CPCMD_QUIRK_MASK
 (\

6482 
E«bÀBi°
 | \

6483 
Mac_dbgo_€
 | \

6484 
F‹˚_hÆf_dup
 | \

6485 
F‹˚_rxÊow_í
 | \

6486 
F‹˚_txÊow_í
 | \

6487 
Cx∂_dbg_£l
 | \

6488 
ASF
 | \

6489 
PktC¡rDißbÀ
 | \

6490 
Mac_dbgo_£l
)

	)

6492 
	$πl_hw_°¨t_8102e_1
(
πl8169_¥iv©e
 *
ç
)

6494 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

6495 
pci_dev
 *
pdev
 = 
ç
->pci_dev;

6496 c⁄° 
ïhy_öfo
 
e_öfo_8102e_1
[] = {

6506 
u8
 
cfg1
;

6508 
	`πl_csi_ac˚ss_íabÀ_2
(
ç
);

6510 
	`RTL_W8
(
DBG_REG
, 
FIX_NAK_1
);

6512 
	`πl_tx_≥rf‹m™˚_twók
(
pdev
, 0x5 << 
MAX_READ_REQUEST_SHIFT
);

6514 
	`RTL_W8
(
C⁄fig1
,

6515 
LEDS1
 | 
LEDS0
 | 
S≥ed_down
 | 
MEMMAP
 | 
IOMAP
 | 
VPD
 | 
PME«bÀ
);

6516 
	`RTL_W8
(
C⁄fig3
, 
	`RTL_R8
(C⁄fig3Ë& ~
Bóc⁄_í
);

6518 
cfg1
 = 
	`RTL_R8
(
C⁄fig1
);

6519 i‡((
cfg1
 & 
LEDS0
Ë&& (cfg1 & 
LEDS1
))

6520 
	`RTL_W8
(
C⁄fig1
, 
cfg1
 & ~
LEDS0
);

6522 
	`πl_ïhy_öô
(
ç
, 
e_öfo_8102e_1
, 
	`ARRAY_SIZE
(e_info_8102e_1));

6523 
	}
}

6525 
	$πl_hw_°¨t_8102e_2
(
πl8169_¥iv©e
 *
ç
)

6527 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

6528 
pci_dev
 *
pdev
 = 
ç
->pci_dev;

6530 
	`πl_csi_ac˚ss_íabÀ_2
(
ç
);

6532 
	`πl_tx_≥rf‹m™˚_twók
(
pdev
, 0x5 << 
MAX_READ_REQUEST_SHIFT
);

6534 
	`RTL_W8
(
C⁄fig1
, 
MEMMAP
 | 
IOMAP
 | 
VPD
 | 
PME«bÀ
);

6535 
	`RTL_W8
(
C⁄fig3
, 
	`RTL_R8
(C⁄fig3Ë& ~
Bóc⁄_í
);

6536 
	}
}

6538 
	$πl_hw_°¨t_8102e_3
(
πl8169_¥iv©e
 *
ç
)

6540 
	`πl_hw_°¨t_8102e_2
(
ç
);

6542 
	`πl_ïhy_wrôe
(
ç
, 0x03, 0xc2f9);

6543 
	}
}

6545 
	$πl_hw_°¨t_8105e_1
(
πl8169_¥iv©e
 *
ç
)

6547 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

6548 c⁄° 
ïhy_öfo
 
e_öfo_8105e_1
[] = {

6560 
	`RTL_W32
(
FuncEvít
, 
	`RTL_R32
(FuncEvent) | 0x002800);

6563 
	`RTL_W32
(
FuncEvít
, 
	`RTL_R32
(FuncEvent) & ~0x010000);

6565 
	`RTL_W8
(
MCU
, 
	`RTL_R8
(MCUË| 
EN_NDP
 | 
EN_OOB_RESET
);

6566 
	`RTL_W8
(
DLLPR
, 
	`RTL_R8
(DLLPRË| 
PFM_EN
);

6568 
	`πl_ïhy_öô
(
ç
, 
e_öfo_8105e_1
, 
	`ARRAY_SIZE
(e_info_8105e_1));

6570 
	`πl_pcõ_°©e_l2l3_íabÀ
(
ç
, 
Ál£
);

6571 
	}
}

6573 
	$πl_hw_°¨t_8105e_2
(
πl8169_¥iv©e
 *
ç
)

6575 
	`πl_hw_°¨t_8105e_1
(
ç
);

6576 
	`πl_ïhy_wrôe
(
ç
, 0x1e, 
	`πl_ïhy_ªad
(tp, 0x1e) | 0x8000);

6577 
	}
}

6579 
	$πl_hw_°¨t_8402
(
πl8169_¥iv©e
 *
ç
)

6581 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

6582 c⁄° 
ïhy_öfo
 
e_öfo_8402
[] = {

6587 
	`πl_csi_ac˚ss_íabÀ_2
(
ç
);

6590 
	`RTL_W32
(
FuncEvít
, 
	`RTL_R32
(FuncEvent) | 0x002800);

6592 
	`RTL_W32
(
TxC⁄fig
, 
	`RTL_R32
(TxC⁄figË| 
TXCFG_AUTO_FIFO
);

6593 
	`RTL_W8
(
MCU
, 
	`RTL_R8
(MCUË& ~
NOW_IS_OOB
);

6595 
	`πl_ïhy_öô
(
ç
, 
e_öfo_8402
, 
	`ARRAY_SIZE
(e_info_8402));

6597 
	`πl_tx_≥rf‹m™˚_twók
(
ç
->
pci_dev
, 0x5 << 
MAX_READ_REQUEST_SHIFT
);

6599 
	`πl_îi_wrôe
(
ç
, 0xc8, 
ERIAR_MASK_1111
, 0x00000002, 
ERIAR_EXGMAC
);

6600 
	`πl_îi_wrôe
(
ç
, 0xe8, 
ERIAR_MASK_1111
, 0x00000006, 
ERIAR_EXGMAC
);

6601 
	`πl_w0w1_îi
(
ç
, 0xdc, 
ERIAR_MASK_0001
, 0x00, 0x01, 
ERIAR_EXGMAC
);

6602 
	`πl_w0w1_îi
(
ç
, 0xdc, 
ERIAR_MASK_0001
, 0x01, 0x00, 
ERIAR_EXGMAC
);

6603 
	`πl_îi_wrôe
(
ç
, 0xc0, 
ERIAR_MASK_0011
, 0x0000, 
ERIAR_EXGMAC
);

6604 
	`πl_îi_wrôe
(
ç
, 0xb8, 
ERIAR_MASK_0011
, 0x0000, 
ERIAR_EXGMAC
);

6605 
	`πl_w0w1_îi
(
ç
, 0x0d4, 
ERIAR_MASK_0011
, 0x0e00, 0xff00, 
ERIAR_EXGMAC
);

6607 
	`πl_pcõ_°©e_l2l3_íabÀ
(
ç
, 
Ál£
);

6608 
	}
}

6610 
	$πl_hw_°¨t_8106
(
πl8169_¥iv©e
 *
ç
)

6612 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

6615 
	`RTL_W32
(
FuncEvít
, 
	`RTL_R32
(FuncEvent) | 0x002800);

6617 
	`RTL_W32
(
MISC
, (
	`RTL_R32
(MISCË| 
DISABLE_LAN_EN
Ë& ~
EARLY_TALLY_EN
);

6618 
	`RTL_W8
(
MCU
, 
	`RTL_R8
(MCUË| 
EN_NDP
 | 
EN_OOB_RESET
);

6619 
	`RTL_W8
(
DLLPR
, 
	`RTL_R8
(DLLPRË& ~
PFM_EN
);

6621 
	`πl_pcõ_°©e_l2l3_íabÀ
(
ç
, 
Ál£
);

6622 
	}
}

6624 
	$πl_hw_°¨t_8101
(
√t_devi˚
 *
dev
)

6626 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

6627 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

6628 
pci_dev
 *
pdev
 = 
ç
->pci_dev;

6630 i‡(
ç
->
mac_vîsi⁄
 >
RTL_GIGA_MAC_VER_30
)

6631 
ç
->
evít_¶ow
 &~
RxFIFOOvî
;

6633 i‡(
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_13
 ||

6634 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_16
)

6635 
	`pcõ_ˇ∑bûôy_£t_w‹d
(
pdev
, 
PCI_EXP_DEVCTL
,

6636 
PCI_EXP_DEVCTL_NOSNOOP_EN
);

6638 
	`RTL_W8
(
Cfg9346
, 
Cfg9346_U∆ock
);

6640 
	`RTL_W8
(
MaxTxPackëSize
, 
TxPackëMax
);

6642 
	`πl_£t_rx_max_size
(
iﬂddr
, 
rx_buf_sz
);

6644 
ç
->
˝_cmd
 &~
R810X_CPCMD_QUIRK_MASK
;

6645 
	`RTL_W16
(
CPlusCmd
, 
ç
->
˝_cmd
);

6647 
	`πl_£t_rx_tx_desc_ªgi°îs
(
ç
, 
iﬂddr
);

6649 
	`πl_£t_rx_tx_c⁄fig_ªgi°îs
(
ç
);

6651 
ç
->
mac_vîsi⁄
) {

6652 
RTL_GIGA_MAC_VER_07
:

6653 
	`πl_hw_°¨t_8102e_1
(
ç
);

6656 
RTL_GIGA_MAC_VER_08
:

6657 
	`πl_hw_°¨t_8102e_3
(
ç
);

6660 
RTL_GIGA_MAC_VER_09
:

6661 
	`πl_hw_°¨t_8102e_2
(
ç
);

6664 
RTL_GIGA_MAC_VER_29
:

6665 
	`πl_hw_°¨t_8105e_1
(
ç
);

6667 
RTL_GIGA_MAC_VER_30
:

6668 
	`πl_hw_°¨t_8105e_2
(
ç
);

6671 
RTL_GIGA_MAC_VER_37
:

6672 
	`πl_hw_°¨t_8402
(
ç
);

6675 
RTL_GIGA_MAC_VER_39
:

6676 
	`πl_hw_°¨t_8106
(
ç
);

6678 
RTL_GIGA_MAC_VER_43
:

6679 
	`πl_hw_°¨t_8168g_2
(
ç
);

6681 
RTL_GIGA_MAC_VER_47
:

6682 
RTL_GIGA_MAC_VER_48
:

6683 
	`πl_hw_°¨t_8168h_1
(
ç
);

6687 
	`RTL_W8
(
Cfg9346
, 
Cfg9346_Lock
);

6689 
	`RTL_W16
(
I¡rMôig©e
, 0x0000);

6691 
	`RTL_W8
(
ChùCmd
, 
CmdTxEnb
 | 
CmdRxEnb
);

6693 
	`πl_£t_rx_mode
(
dev
);

6695 
	`RTL_R8
(
I¡rMask
);

6697 
	`RTL_W16
(
Mu…iI¡r
, 
	`RTL_R16
(MultiIntr) & 0xf000);

6698 
	}
}

6700 
	$πl8169_ch™ge_mtu
(
√t_devi˚
 *
dev
, 
√w_mtu
)

6702 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

6704 i‡(
√w_mtu
 < 
ETH_ZLEN
 ||

6705 
√w_mtu
 > 
πl_chù_öfos
[
ç
->
mac_vîsi⁄
].
jumbo_max
)

6706  -
EINVAL
;

6708 i‡(
√w_mtu
 > 
ETH_DATA_LEN
)

6709 
	`πl_hw_jumbo_íabÀ
(
ç
);

6711 
	`πl_hw_jumbo_dißbÀ
(
ç
);

6713 
dev
->
mtu
 = 
√w_mtu
;

6714 
	`√tdev_upd©e_„©uªs
(
dev
);

6717 
	}
}

6719 
ölöe
 
	$πl8169_make_unußbÀ_by_asic
(
RxDesc
 *
desc
)

6721 
desc
->
addr
 = 
	`˝u_to_À64
(0x0badbadbadbadbadull);

6722 
desc
->
›ts1
 &~
	`˝u_to_À32
(
DescOwn
 | 
RsvdMask
);

6723 
	}
}

6725 
	$πl8169_‰ì_rx_d©abuff
(
πl8169_¥iv©e
 *
ç
,

6726 **
d©a_buff
, 
RxDesc
 *
desc
)

6728 
	`dma_unm≠_sögÀ
(&
ç
->
pci_dev
->
dev
, 
	`À64_to_˝u
(
desc
->
addr
), 
rx_buf_sz
,

6729 
DMA_FROM_DEVICE
);

6731 
	`k‰ì
(*
d©a_buff
);

6732 *
d©a_buff
 = 
NULL
;

6733 
	`πl8169_make_unußbÀ_by_asic
(
desc
);

6734 
	}
}

6736 
ölöe
 
	$πl8169_m¨k_to_asic
(
RxDesc
 *
desc
, 
u32
 
rx_buf_sz
)

6738 
u32
 
e‹
 = 
	`À32_to_˝u
(
desc
->
›ts1
Ë& 
RögEnd
;

6741 
	`dma_wmb
();

6743 
desc
->
›ts1
 = 
	`˝u_to_À32
(
DescOwn
 | 
e‹
 | 
rx_buf_sz
);

6744 
	}
}

6746 
ölöe
 
	$πl8169_m≠_to_asic
(
RxDesc
 *
desc
, 
dma_addr_t
 
m≠pög
,

6747 
u32
 
rx_buf_sz
)

6749 
desc
->
addr
 = 
	`˝u_to_À64
(
m≠pög
);

6750 
	`πl8169_m¨k_to_asic
(
desc
, 
rx_buf_sz
);

6751 
	}
}

6753 
ölöe
 *
	$πl8169_Æign
(*
d©a
)

6755  (*)
	`ALIGN
(()
d©a
, 16);

6756 
	}
}

6758 
sk_buff
 *
	$πl8169_Æloc_rx_d©a
(
πl8169_¥iv©e
 *
ç
,

6759 
RxDesc
 *
desc
)

6761 *
d©a
;

6762 
dma_addr_t
 
m≠pög
;

6763 
devi˚
 *
d
 = &
ç
->
pci_dev
->
dev
;

6764 
√t_devi˚
 *
dev
 = 
ç
->dev;

6765 
node
 = 
dev
->dev.
∑ª¡
 ? 
	`dev_to_node
(dev->dev.parent) : -1;

6767 
d©a
 = 
	`kmÆloc_node
(
rx_buf_sz
, 
GFP_KERNEL
, 
node
);

6768 i‡(!
d©a
)

6769  
NULL
;

6771 i‡(
	`πl8169_Æign
(
d©a
) != data) {

6772 
	`k‰ì
(
d©a
);

6773 
d©a
 = 
	`kmÆloc_node
(
rx_buf_sz
 + 15, 
GFP_KERNEL
, 
node
);

6774 i‡(!
d©a
)

6775  
NULL
;

6778 
m≠pög
 = 
	`dma_m≠_sögÀ
(
d
, 
	`πl8169_Æign
(
d©a
), 
rx_buf_sz
,

6779 
DMA_FROM_DEVICE
);

6780 i‡(
	`u∆ikñy
(
	`dma_m≠pög_îr‹
(
d
, 
m≠pög
))) {

6781 i‡(
	`√t_øãlimô
())

6782 
	`√tif_îr
(
ç
, 
drv
,Åp->
dev
, "FailedÅo map RX DMA!\n");

6783 
îr_out
;

6786 
	`πl8169_m≠_to_asic
(
desc
, 
m≠pög
, 
rx_buf_sz
);

6787  
d©a
;

6789 
îr_out
:

6790 
	`k‰ì
(
d©a
);

6791  
NULL
;

6792 
	}
}

6794 
	$πl8169_rx_˛ór
(
πl8169_¥iv©e
 *
ç
)

6796 
i
;

6798 
i
 = 0; i < 
NUM_RX_DESC
; i++) {

6799 i‡(
ç
->
Rx_d©abuff
[
i
]) {

6800 
	`πl8169_‰ì_rx_d©abuff
(
ç
,Åp->
Rx_d©abuff
 + 
i
,

6801 
ç
->
RxDescAºay
 + 
i
);

6804 
	}
}

6806 
ölöe
 
	$πl8169_m¨k_as_œ°_des¸ùt‹
(
RxDesc
 *
desc
)

6808 
desc
->
›ts1
 |
	`˝u_to_À32
(
RögEnd
);

6809 
	}
}

6811 
	$πl8169_rx_fûl
(
πl8169_¥iv©e
 *
ç
)

6813 
i
;

6815 
i
 = 0; i < 
NUM_RX_DESC
; i++) {

6816 *
d©a
;

6818 i‡(
ç
->
Rx_d©abuff
[
i
])

6821 
d©a
 = 
	`πl8169_Æloc_rx_d©a
(
ç
,Åp->
RxDescAºay
 + 
i
);

6822 i‡(!
d©a
) {

6823 
	`πl8169_make_unußbÀ_by_asic
(
ç
->
RxDescAºay
 + 
i
);

6824 
îr_out
;

6826 
ç
->
Rx_d©abuff
[
i
] = 
d©a
;

6829 
	`πl8169_m¨k_as_œ°_des¸ùt‹
(
ç
->
RxDescAºay
 + 
NUM_RX_DESC
 - 1);

6832 
îr_out
:

6833 
	`πl8169_rx_˛ór
(
ç
);

6834  -
ENOMEM
;

6835 
	}
}

6837 
	$πl8169_öô_rög
(
√t_devi˚
 *
dev
)

6839 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

6841 
	`πl8169_öô_rög_ödexes
(
ç
);

6843 
	`mem£t
(
ç
->
tx_skb
, 0x0, 
NUM_TX_DESC
 * (
rög_öfo
));

6844 
	`mem£t
(
ç
->
Rx_d©abuff
, 0x0, 
NUM_RX_DESC
 * (*));

6846  
	`πl8169_rx_fûl
(
ç
);

6847 
	}
}

6849 
	$πl8169_unm≠_tx_skb
(
devi˚
 *
d
, 
rög_öfo
 *
tx_skb
,

6850 
TxDesc
 *
desc
)

6852 
Àn
 = 
tx_skb
->len;

6854 
	`dma_unm≠_sögÀ
(
d
, 
	`À64_to_˝u
(
desc
->
addr
), 
Àn
, 
DMA_TO_DEVICE
);

6856 
desc
->
›ts1
 = 0x00;

6857 
desc
->
›ts2
 = 0x00;

6858 
desc
->
addr
 = 0x00;

6859 
tx_skb
->
Àn
 = 0;

6860 
	}
}

6862 
	$πl8169_tx_˛ór_ønge
(
πl8169_¥iv©e
 *
ç
, 
u32
 
°¨t
,

6863 
n
)

6865 
i
;

6867 
i
 = 0; i < 
n
; i++) {

6868 
íåy
 = (
°¨t
 + 
i
Ë% 
NUM_TX_DESC
;

6869 
rög_öfo
 *
tx_skb
 = 
ç
->tx_skb + 
íåy
;

6870 
Àn
 = 
tx_skb
->len;

6872 i‡(
Àn
) {

6873 
sk_buff
 *
skb
 = 
tx_skb
->skb;

6875 
	`πl8169_unm≠_tx_skb
(&
ç
->
pci_dev
->
dev
, 
tx_skb
,

6876 
ç
->
TxDescAºay
 + 
íåy
);

6877 i‡(
skb
) {

6878 
ç
->
dev
->
°©s
.
tx_dr›≥d
++;

6879 
	`dev_k‰ì_skb_™y
(
skb
);

6880 
tx_skb
->
skb
 = 
NULL
;

6884 
	}
}

6886 
	$πl8169_tx_˛ór
(
πl8169_¥iv©e
 *
ç
)

6888 
	`πl8169_tx_˛ór_ønge
(
ç
,Åp->
dúty_tx
, 
NUM_TX_DESC
);

6889 
ç
->
cur_tx
 =Åp->
dúty_tx
 = 0;

6890 
	}
}

6892 
	$πl_ª£t_w‹k
(
πl8169_¥iv©e
 *
ç
)

6894 
√t_devi˚
 *
dev
 = 
ç
->dev;

6895 
i
;

6897 
	`«pi_dißbÀ
(&
ç
->
«pi
);

6898 
	`√tif_°›_queue
(
dev
);

6899 
	`synchr⁄ize_sched
();

6901 
	`πl8169_hw_ª£t
(
ç
);

6903 
i
 = 0; i < 
NUM_RX_DESC
; i++)

6904 
	`πl8169_m¨k_to_asic
(
ç
->
RxDescAºay
 + 
i
, 
rx_buf_sz
);

6906 
	`πl8169_tx_˛ór
(
ç
);

6907 
	`πl8169_öô_rög_ödexes
(
ç
);

6909 
	`«pi_íabÀ
(&
ç
->
«pi
);

6910 
	`πl_hw_°¨t
(
dev
);

6911 
	`√tif_wake_queue
(
dev
);

6912 
	`πl8169_check_lök_°©us
(
dev
, 
ç
,Åp->
mmio_addr
);

6913 
	}
}

6915 
	$πl8169_tx_timeout
(
√t_devi˚
 *
dev
)

6917 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

6919 
	`πl_scheduÀ_èsk
(
ç
, 
RTL_FLAG_TASK_RESET_PENDING
);

6920 
	}
}

6922 
	$πl8169_xmô_‰ags
(
πl8169_¥iv©e
 *
ç
, 
sk_buff
 *
skb
,

6923 
u32
 *
›ts
)

6925 
skb_sh¨ed_öfo
 *
öfo
 = 
	`skb_shöfo
(
skb
);

6926 
cur_‰ag
, 
íåy
;

6927 
TxDesc
 *
	`unöôülized_v¨
(
txd
);

6928 
devi˚
 *
d
 = &
ç
->
pci_dev
->
dev
;

6930 
íåy
 = 
ç
->
cur_tx
;

6931 
cur_‰ag
 = 0; cur_‰ag < 
öfo
->
ƒ_‰ags
; cur_frag++) {

6932 c⁄° 
skb_‰ag_t
 *
‰ag
 = 
öfo
->
‰ags
 + 
cur_‰ag
;

6933 
dma_addr_t
 
m≠pög
;

6934 
u32
 
°©us
, 
Àn
;

6935 *
addr
;

6937 
íåy
 = (íåy + 1Ë% 
NUM_TX_DESC
;

6939 
txd
 = 
ç
->
TxDescAºay
 + 
íåy
;

6940 
Àn
 = 
	`skb_‰ag_size
(
‰ag
);

6941 
addr
 = 
	`skb_‰ag_addªss
(
‰ag
);

6942 
m≠pög
 = 
	`dma_m≠_sögÀ
(
d
, 
addr
, 
Àn
, 
DMA_TO_DEVICE
);

6943 i‡(
	`u∆ikñy
(
	`dma_m≠pög_îr‹
(
d
, 
m≠pög
))) {

6944 i‡(
	`√t_øãlimô
())

6945 
	`√tif_îr
(
ç
, 
drv
,Åp->
dev
,

6947 
îr_out
;

6951 
°©us
 = 
›ts
[0] | 
Àn
 |

6952 (
RögEnd
 * !((
íåy
 + 1Ë% 
NUM_TX_DESC
));

6954 
txd
->
›ts1
 = 
	`˝u_to_À32
(
°©us
);

6955 
txd
->
›ts2
 = 
	`˝u_to_À32
(
›ts
[1]);

6956 
txd
->
addr
 = 
	`˝u_to_À64
(
m≠pög
);

6958 
ç
->
tx_skb
[
íåy
].
Àn
 =Üen;

6961 i‡(
cur_‰ag
) {

6962 
ç
->
tx_skb
[
íåy
].
skb
 = skb;

6963 
txd
->
›ts1
 |
	`˝u_to_À32
(
La°Føg
);

6966  
cur_‰ag
;

6968 
îr_out
:

6969 
	`πl8169_tx_˛ór_ønge
(
ç
,Åp->
cur_tx
 + 1, 
cur_‰ag
);

6970  -
EIO
;

6971 
	}
}

6973 
boﬁ
 
	$πl_ã°_hw_∑d_bug
(
πl8169_¥iv©e
 *
ç
, 
sk_buff
 *
skb
)

6975  
skb
->
Àn
 < 
ETH_ZLEN
 && 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_34
;

6976 
	}
}

6978 
√tdev_tx_t
 
πl8169_°¨t_xmô
(
sk_buff
 *
skb
,

6979 
√t_devi˚
 *
dev
);

6984 
	$r8169_csum_w‹k¨ound
(
πl8169_¥iv©e
 *
ç
,

6985 
sk_buff
 *
skb
)

6987 i‡(
	`skb_shöfo
(
skb
)->
gso_size
) {

6988 
√tdev_„©uªs_t
 
„©uªs
 = 
ç
->
dev
->features;

6989 
sk_buff
 *
£gs
, *
nskb
;

6991 
„©uªs
 &~(
NETIF_F_SG
 | 
NETIF_F_IPV6_CSUM
 | 
NETIF_F_TSO6
);

6992 
£gs
 = 
	`skb_gso_£gmít
(
skb
, 
„©uªs
);

6993 i‡(
	`IS_ERR
(
£gs
) || !segs)

6994 
dr›
;

6997 
nskb
 = 
£gs
;

6998 
£gs
 = segs->
√xt
;

6999 
nskb
->
√xt
 = 
NULL
;

7000 
	`πl8169_°¨t_xmô
(
nskb
, 
ç
->
dev
);

7001 } 
£gs
);

7003 
	`dev_c⁄sume_skb_™y
(
skb
);

7004 } i‡(
skb
->
ù_summed
 =
CHECKSUM_PARTIAL
) {

7005 i‡(
	`skb_checksum_hñp
(
skb
) < 0)

7006 
dr›
;

7008 
	`πl8169_°¨t_xmô
(
skb
, 
ç
->
dev
);

7010 
√t_devi˚_°©s
 *
°©s
;

7012 
dr›
:

7013 
°©s
 = &
ç
->
dev
->stats;

7014 
°©s
->
tx_dr›≥d
++;

7015 
	`dev_k‰ì_skb_™y
(
skb
);

7017 
	}
}

7023 
	$msdn_gü¡_£nd_check
(
sk_buff
 *
skb
)

7025 c⁄° 
ùv6hdr
 *
ùv6h
;

7026 
t˝hdr
 *
th
;

7027 
ªt
;

7029 
ªt
 = 
	`skb_cow_hód
(
skb
, 0);

7030 i‡(
ªt
)

7031  
ªt
;

7033 
ùv6h
 = 
	`ùv6_hdr
(
skb
);

7034 
th
 = 
	`t˝_hdr
(
skb
);

7036 
th
->
check
 = 0;

7037 
th
->
check
 = ~
	`t˝_v6_check
(0, &
ùv6h
->
ßddr
, &ùv6h->
daddr
, 0);

7039  
ªt
;

7040 
	}
}

7042 
ölöe
 
__be16
 
	$gë_¥Ÿocﬁ
(
sk_buff
 *
skb
)

7044 
__be16
 
¥Ÿocﬁ
;

7046 i‡(
skb
->
¥Ÿocﬁ
 =
	`ht⁄s
(
ETH_P_8021Q
))

7047 
¥Ÿocﬁ
 = 
	`vœn_ëh_hdr
(
skb
)->
h_vœn_íˇpsuœãd_¥Ÿo
;

7049 
¥Ÿocﬁ
 = 
skb
->protocol;

7051  
¥Ÿocﬁ
;

7052 
	}
}

7054 
boﬁ
 
	$πl8169_tso_csum_v1
(
πl8169_¥iv©e
 *
ç
,

7055 
sk_buff
 *
skb
, 
u32
 *
›ts
)

7057 
u32
 
mss
 = 
	`skb_shöfo
(
skb
)->
gso_size
;

7059 i‡(
mss
) {

7060 
›ts
[0] |
TD_LSO
;

7061 
›ts
[0] |
	`mö
(
mss
, 
TD_MSS_MAX
Ë<< 
TD0_MSS_SHIFT
;

7062 } i‡(
skb
->
ù_summed
 =
CHECKSUM_PARTIAL
) {

7063 c⁄° 
ùhdr
 *
ù
 = 
	`ù_hdr
(
skb
);

7065 i‡(
ù
->
¥Ÿocﬁ
 =
IPPROTO_TCP
)

7066 
›ts
[0] |
TD0_IP_CS
 | 
TD0_TCP_CS
;

7067 i‡(
ù
->
¥Ÿocﬁ
 =
IPPROTO_UDP
)

7068 
›ts
[0] |
TD0_IP_CS
 | 
TD0_UDP_CS
;

7070 
	`WARN_ON_ONCE
(1);

7073  
åue
;

7074 
	}
}

7076 
boﬁ
 
	$πl8169_tso_csum_v2
(
πl8169_¥iv©e
 *
ç
,

7077 
sk_buff
 *
skb
, 
u32
 *
›ts
)

7079 
u32
 
å™•‹t_off£t
 = (u32)
	`skb_å™•‹t_off£t
(
skb
);

7080 
u32
 
mss
 = 
	`skb_shöfo
(
skb
)->
gso_size
;

7082 i‡(
mss
) {

7083 i‡(
å™•‹t_off£t
 > 
GTTCPHO_MAX
) {

7084 
	`√tif_w¨n
(
ç
, 
tx_îr
,Åp->
dev
,

7086 
å™•‹t_off£t
);

7087  
Ál£
;

7090 
	`gë_¥Ÿocﬁ
(
skb
)) {

7091 
	`ht⁄s
(
ETH_P_IP
):

7092 
›ts
[0] |
TD1_GTSENV4
;

7095 
	`ht⁄s
(
ETH_P_IPV6
):

7096 i‡(
	`msdn_gü¡_£nd_check
(
skb
))

7097  
Ál£
;

7099 
›ts
[0] |
TD1_GTSENV6
;

7103 
	`WARN_ON_ONCE
(1);

7107 
›ts
[0] |
å™•‹t_off£t
 << 
GTTCPHO_SHIFT
;

7108 
›ts
[1] |
	`mö
(
mss
, 
TD_MSS_MAX
Ë<< 
TD1_MSS_SHIFT
;

7109 } i‡(
skb
->
ù_summed
 =
CHECKSUM_PARTIAL
) {

7110 
u8
 
ù_¥Ÿocﬁ
;

7112 i‡(
	`u∆ikñy
(
	`πl_ã°_hw_∑d_bug
(
ç
, 
skb
)))

7113  !(
	`skb_checksum_hñp
(
skb
Ë|| 
	`ëh_skb_∑d
(skb));

7115 i‡(
å™•‹t_off£t
 > 
TCPHO_MAX
) {

7116 
	`√tif_w¨n
(
ç
, 
tx_îr
,Åp->
dev
,

7118 
å™•‹t_off£t
);

7119  
Ál£
;

7122 
	`gë_¥Ÿocﬁ
(
skb
)) {

7123 
	`ht⁄s
(
ETH_P_IP
):

7124 
›ts
[1] |
TD1_IPv4_CS
;

7125 
ù_¥Ÿocﬁ
 = 
	`ù_hdr
(
skb
)->
¥Ÿocﬁ
;

7128 
	`ht⁄s
(
ETH_P_IPV6
):

7129 
›ts
[1] |
TD1_IPv6_CS
;

7130 
ù_¥Ÿocﬁ
 = 
	`ùv6_hdr
(
skb
)->
√xthdr
;

7134 
ù_¥Ÿocﬁ
 = 
IPPROTO_RAW
;

7138 i‡(
ù_¥Ÿocﬁ
 =
IPPROTO_TCP
)

7139 
›ts
[1] |
TD1_TCP_CS
;

7140 i‡(
ù_¥Ÿocﬁ
 =
IPPROTO_UDP
)

7141 
›ts
[1] |
TD1_UDP_CS
;

7143 
	`WARN_ON_ONCE
(1);

7145 
›ts
[1] |
å™•‹t_off£t
 << 
TCPHO_SHIFT
;

7147 i‡(
	`u∆ikñy
(
	`πl_ã°_hw_∑d_bug
(
ç
, 
skb
)))

7148  !
	`ëh_skb_∑d
(
skb
);

7151  
åue
;

7152 
	}
}

7154 
√tdev_tx_t
 
	$πl8169_°¨t_xmô
(
sk_buff
 *
skb
,

7155 
√t_devi˚
 *
dev
)

7157 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

7158 
íåy
 = 
ç
->
cur_tx
 % 
NUM_TX_DESC
;

7159 
TxDesc
 *
txd
 = 
ç
->
TxDescAºay
 + 
íåy
;

7160 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

7161 
devi˚
 *
d
 = &
ç
->
pci_dev
->
dev
;

7162 
dma_addr_t
 
m≠pög
;

7163 
u32
 
°©us
, 
Àn
;

7164 
u32
 
›ts
[2];

7165 
‰ags
;

7167 i‡(
	`u∆ikñy
(!
	`TX_FRAGS_READY_FOR
(
ç
, 
	`skb_shöfo
(
skb
)->
ƒ_‰ags
))) {

7168 
	`√tif_îr
(
ç
, 
drv
, 
dev
, "BUG! Tx Ring full when queueáwake!\n");

7169 
îr_°›_0
;

7172 i‡(
	`u∆ikñy
(
	`À32_to_˝u
(
txd
->
›ts1
Ë& 
DescOwn
))

7173 
îr_°›_0
;

7175 
›ts
[1] = 
	`˝u_to_À32
(
	`πl8169_tx_vœn_èg
(
skb
));

7176 
›ts
[0] = 
DescOwn
;

7178 i‡(!
ç
->
	`tso_csum
—p, 
skb
, 
›ts
)) {

7179 
	`r8169_csum_w‹k¨ound
(
ç
, 
skb
);

7180  
NETDEV_TX_OK
;

7183 
Àn
 = 
	`skb_hódÀn
(
skb
);

7184 
m≠pög
 = 
	`dma_m≠_sögÀ
(
d
, 
skb
->
d©a
, 
Àn
, 
DMA_TO_DEVICE
);

7185 i‡(
	`u∆ikñy
(
	`dma_m≠pög_îr‹
(
d
, 
m≠pög
))) {

7186 i‡(
	`√t_øãlimô
())

7187 
	`√tif_îr
(
ç
, 
drv
, 
dev
, "FailedÅo map TX DMA!\n");

7188 
îr_dma_0
;

7191 
ç
->
tx_skb
[
íåy
].
Àn
 =Üen;

7192 
txd
->
addr
 = 
	`˝u_to_À64
(
m≠pög
);

7194 
‰ags
 = 
	`πl8169_xmô_‰ags
(
ç
, 
skb
, 
›ts
);

7195 i‡(
‰ags
 < 0)

7196 
îr_dma_1
;

7197 i‡(
‰ags
)

7198 
›ts
[0] |
Fú°Føg
;

7200 
›ts
[0] |
Fú°Føg
 | 
La°Føg
;

7201 
ç
->
tx_skb
[
íåy
].
skb
 = skb;

7204 
txd
->
›ts2
 = 
	`˝u_to_À32
(
›ts
[1]);

7206 
	`skb_tx_time°amp
(
skb
);

7209 
	`dma_wmb
();

7212 
°©us
 = 
›ts
[0] | 
Àn
 | (
RögEnd
 * !((
íåy
 + 1Ë% 
NUM_TX_DESC
));

7213 
txd
->
›ts1
 = 
	`˝u_to_À32
(
°©us
);

7216 
	`wmb
();

7218 
ç
->
cur_tx
 +
‰ags
 + 1;

7220 
	`RTL_W8
(
TxPﬁl
, 
NPQ
);

7222 
	`mmiowb
();

7224 i‡(!
	`TX_FRAGS_READY_FOR
(
ç
, 
MAX_SKB_FRAGS
)) {

7228 
	`smp_wmb
();

7229 
	`√tif_°›_queue
(
dev
);

7237 
	`smp_mb
();

7238 i‡(
	`TX_FRAGS_READY_FOR
(
ç
, 
MAX_SKB_FRAGS
))

7239 
	`√tif_wake_queue
(
dev
);

7242  
NETDEV_TX_OK
;

7244 
îr_dma_1
:

7245 
	`πl8169_unm≠_tx_skb
(
d
, 
ç
->
tx_skb
 + 
íåy
, 
txd
);

7246 
îr_dma_0
:

7247 
	`dev_k‰ì_skb_™y
(
skb
);

7248 
dev
->
°©s
.
tx_dr›≥d
++;

7249  
NETDEV_TX_OK
;

7251 
îr_°›_0
:

7252 
	`√tif_°›_queue
(
dev
);

7253 
dev
->
°©s
.
tx_dr›≥d
++;

7254  
NETDEV_TX_BUSY
;

7255 
	}
}

7257 
	$πl8169_pcõº_öãºu±
(
√t_devi˚
 *
dev
)

7259 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

7260 
pci_dev
 *
pdev
 = 
ç
->pci_dev;

7261 
u16
 
pci_°©us
, 
pci_cmd
;

7263 
	`pci_ªad_c⁄fig_w‹d
(
pdev
, 
PCI_COMMAND
, &
pci_cmd
);

7264 
	`pci_ªad_c⁄fig_w‹d
(
pdev
, 
PCI_STATUS
, &
pci_°©us
);

7266 
	`√tif_îr
(
ç
, 
öå
, 
dev
, "PCIÉrror (cmd = 0x%04x, status = 0x%04x)\n",

7267 
pci_cmd
, 
pci_°©us
);

7277 i‡(
pdev
->
brokí_∑rôy_°©us
)

7278 
pci_cmd
 &~
PCI_COMMAND_PARITY
;

7280 
pci_cmd
 |
PCI_COMMAND_SERR
 | 
PCI_COMMAND_PARITY
;

7282 
	`pci_wrôe_c⁄fig_w‹d
(
pdev
, 
PCI_COMMAND
, 
pci_cmd
);

7284 
	`pci_wrôe_c⁄fig_w‹d
(
pdev
, 
PCI_STATUS
,

7285 
pci_°©us
 & (
PCI_STATUS_DETECTED_PARITY
 |

7286 
PCI_STATUS_SIG_SYSTEM_ERROR
 | 
PCI_STATUS_REC_MASTER_ABORT
 |

7287 
PCI_STATUS_REC_TARGET_ABORT
 | 
PCI_STATUS_SIG_TARGET_ABORT
));

7290 i‡((
ç
->
˝_cmd
 & 
PCIDAC
Ë&& !ç->
cur_rx
) {

7291 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

7293 
	`√tif_öfo
(
ç
, 
öå
, 
dev
, "disabling PCI DAC\n");

7294 
ç
->
˝_cmd
 &~
PCIDAC
;

7295 
	`RTL_W16
(
CPlusCmd
, 
ç
->
˝_cmd
);

7296 
dev
->
„©uªs
 &~
NETIF_F_HIGHDMA
;

7299 
	`πl8169_hw_ª£t
(
ç
);

7301 
	`πl_scheduÀ_èsk
(
ç
, 
RTL_FLAG_TASK_RESET_PENDING
);

7302 
	}
}

7304 
	$πl_tx
(
√t_devi˚
 *
dev
, 
πl8169_¥iv©e
 *
ç
)

7306 
dúty_tx
, 
tx_À·
;

7308 
dúty_tx
 = 
ç
->dirty_tx;

7309 
	`smp_rmb
();

7310 
tx_À·
 = 
ç
->
cur_tx
 - 
dúty_tx
;

7312 
tx_À·
 > 0) {

7313 
íåy
 = 
dúty_tx
 % 
NUM_TX_DESC
;

7314 
rög_öfo
 *
tx_skb
 = 
ç
->tx_skb + 
íåy
;

7315 
u32
 
°©us
;

7317 
°©us
 = 
	`À32_to_˝u
(
ç
->
TxDescAºay
[
íåy
].
›ts1
);

7318 i‡(
°©us
 & 
DescOwn
)

7325 
	`dma_rmb
();

7327 
	`πl8169_unm≠_tx_skb
(&
ç
->
pci_dev
->
dev
, 
tx_skb
,

7328 
ç
->
TxDescAºay
 + 
íåy
);

7329 i‡(
°©us
 & 
La°Føg
) {

7330 
	`u64_°©s_upd©e_begö
(&
ç
->
tx_°©s
.
syn˝
);

7331 
ç
->
tx_°©s
.
∑ckës
++;

7332 
ç
->
tx_°©s
.
byãs
 +
tx_skb
->
skb
->
Àn
;

7333 
	`u64_°©s_upd©e_íd
(&
ç
->
tx_°©s
.
syn˝
);

7334 
	`dev_k‰ì_skb_™y
(
tx_skb
->
skb
);

7335 
tx_skb
->
skb
 = 
NULL
;

7337 
dúty_tx
++;

7338 
tx_À·
--;

7341 i‡(
ç
->
dúty_tx
 != dirty_tx) {

7342 
ç
->
dúty_tx
 = dirty_tx;

7350 
	`smp_mb
();

7351 i‡(
	`√tif_queue_°›≥d
(
dev
) &&

7352 
	`TX_FRAGS_READY_FOR
(
ç
, 
MAX_SKB_FRAGS
)) {

7353 
	`√tif_wake_queue
(
dev
);

7361 i‡(
ç
->
cur_tx
 !
dúty_tx
) {

7362 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

7364 
	`RTL_W8
(
TxPﬁl
, 
NPQ
);

7367 
	}
}

7369 
ölöe
 
	$πl8169_‰agmíãd_‰ame
(
u32
 
°©us
)

7371  (
°©us
 & (
Fú°Føg
 | 
La°Føg
)) != (FirstFrag | LastFrag);

7372 
	}
}

7374 
ölöe
 
	$πl8169_rx_csum
(
sk_buff
 *
skb
, 
u32
 
›ts1
)

7376 
u32
 
°©us
 = 
›ts1
 & 
RxPrŸoMask
;

7378 i‡(((
°©us
 =
RxPrŸoTCP
Ë&& !(
›ts1
 & 
TCPFaû
)) ||

7379 ((
°©us
 =
RxPrŸoUDP
Ë&& !(
›ts1
 & 
UDPFaû
)))

7380 
skb
->
ù_summed
 = 
CHECKSUM_UNNECESSARY
;

7382 
	`skb_checksum_n⁄e_as£π
(
skb
);

7383 
	}
}

7385 
sk_buff
 *
	$πl8169_åy_rx_c›y
(*
d©a
,

7386 
πl8169_¥iv©e
 *
ç
,

7387 
pkt_size
,

7388 
dma_addr_t
 
addr
)

7390 
sk_buff
 *
skb
 = 
NULL
;

7391 
devi˚
 *
d
 = &
ç
->
pci_dev
->
dev
;

7392 
bpf_¥og
 *
xdp_¥og
;

7394 
d©a
 = 
	`πl8169_Æign
(data);

7395 
	`dma_sync_sögÀ_f‹_˝u
(
d
, 
addr
, 
pkt_size
, 
DMA_FROM_DEVICE
);

7396 
	`¥e„tch
(
d©a
);

7397 
	`rcu_ªad_lock
();

7398 
xdp_¥og
 = 
	`rcu_dîe„ªn˚
(
ç
->xdp_prog);

7399 i‡(
xdp_¥og
) {

7400 
xdp_buff
 
xdp
;

7401 
u32
 
a˘i⁄
;

7402 
xdp
.
d©a
 = data;

7403 
xdp
.
d©a_íd
 = 
d©a
 + 
pkt_size
;

7404 
a˘i⁄
 = 
	`bpf_¥og_run_xdp
(
xdp_¥og
, &
xdp
);

7405 
a˘i⁄
) {

7406 
XDP_PASS
:

7407 
ç
->
xdp_cou¡îs
.
∑ss
++;

7409 
XDP_DROP
:

7410 
ç
->
xdp_cou¡îs
.
dr›
++;

7411 
xdp_dr›
;

7412 
XDP_TX
:

7415 
ç
->
xdp_cou¡îs
.
tx
++;

7416 
xdp_dr›
;

7417 
XDP_ABORTED
:

7418 
ç
->
xdp_cou¡îs
.
ab‹ãd
++;

7419 
xdp_dr›
;

7421 
	`bpf_w¨n_övÆid_xdp_a˘i⁄
(
a˘i⁄
);

7422 
ç
->
xdp_cou¡îs
.
unknown
++;

7423 
xdp_dr›
;

7426 
	`rcu_ªad_u∆ock
();

7427 
skb
 = 
	`«pi_Æloc_skb
(&
ç
->
«pi
, 
pkt_size
);

7428 i‡(
skb
)

7429 
	`mem˝y
(
skb
->
d©a
, d©a, 
pkt_size
);

7430 
xdp_dr›
:

7431 
	`dma_sync_sögÀ_f‹_devi˚
(
d
, 
addr
, 
pkt_size
, 
DMA_FROM_DEVICE
);

7433  
skb
;

7434 
	}
}

7436 
	$πl_rx
(
√t_devi˚
 *
dev
, 
πl8169_¥iv©e
 *
ç
, 
u32
 
budgë
)

7438 
cur_rx
, 
rx_À·
;

7439 
cou¡
;

7441 
cur_rx
 = 
ç
->cur_rx;

7443 
rx_À·
 = 
	`mö
(
budgë
, 
NUM_RX_DESC
);Ñx_À· > 0;Ñx_À·--, 
cur_rx
++) {

7444 
íåy
 = 
cur_rx
 % 
NUM_RX_DESC
;

7445 
RxDesc
 *
desc
 = 
ç
->
RxDescAºay
 + 
íåy
;

7446 
u32
 
°©us
;

7448 
°©us
 = 
	`À32_to_˝u
(
desc
->
›ts1
Ë& 
ç
->
›ts1_mask
;

7449 i‡(
°©us
 & 
DescOwn
)

7456 
	`dma_rmb
();

7458 i‡(
	`u∆ikñy
(
°©us
 & 
RxRES
)) {

7459 
	`√tif_öfo
(
ç
, 
rx_îr
, 
dev
, "Rx ERROR. status = %08x\n",

7460 
°©us
);

7461 
dev
->
°©s
.
rx_îr‹s
++;

7462 i‡(
°©us
 & (
RxRWT
 | 
RxRUNT
))

7463 
dev
->
°©s
.
rx_Àngth_îr‹s
++;

7464 i‡(
°©us
 & 
RxCRC
)

7465 
dev
->
°©s
.
rx_¸c_îr‹s
++;

7466 i‡(
°©us
 & 
RxFOVF
) {

7467 
	`πl_scheduÀ_èsk
(
ç
, 
RTL_FLAG_TASK_RESET_PENDING
);

7468 
dev
->
°©s
.
rx_fifo_îr‹s
++;

7470 i‡((
°©us
 & (
RxRUNT
 | 
RxCRC
)) &&

7471 !(
°©us
 & (
RxRWT
 | 
RxFOVF
)) &&

7472 (
dev
->
„©uªs
 & 
NETIF_F_RXALL
))

7473 
¥o˚ss_pkt
;

7475 
sk_buff
 *
skb
;

7476 
dma_addr_t
 
addr
;

7477 
pkt_size
;

7479 
¥o˚ss_pkt
:

7480 
addr
 = 
	`À64_to_˝u
(
desc
->addr);

7481 i‡(
	`likñy
(!(
dev
->
„©uªs
 & 
NETIF_F_RXFCS
)))

7482 
pkt_size
 = (
°©us
 & 0x00003fff) - 4;

7484 
pkt_size
 = 
°©us
 & 0x00003fff;

7491 i‡(
	`u∆ikñy
(
	`πl8169_‰agmíãd_‰ame
(
°©us
))) {

7492 
dev
->
°©s
.
rx_dr›≥d
++;

7493 
dev
->
°©s
.
rx_Àngth_îr‹s
++;

7494 
ªÀa£_des¸ùt‹
;

7497 
skb
 = 
	`πl8169_åy_rx_c›y
(
ç
->
Rx_d©abuff
[
íåy
],

7498 
ç
, 
pkt_size
, 
addr
);

7499 i‡(!
skb
) {

7500 
dev
->
°©s
.
rx_dr›≥d
++;

7501 
ªÀa£_des¸ùt‹
;

7504 
	`πl8169_rx_csum
(
skb
, 
°©us
);

7505 
	`skb_put
(
skb
, 
pkt_size
);

7506 
skb
->
¥Ÿocﬁ
 = 
	`ëh_ty≥_å™s
(skb, 
dev
);

7508 
	`πl8169_rx_vœn_èg
(
desc
, 
skb
);

7510 i‡(
skb
->
pkt_ty≥
 =
PACKET_MULTICAST
)

7511 
dev
->
°©s
.
mu…iˇ°
++;

7513 
	`«pi_gro_ª˚ive
(&
ç
->
«pi
, 
skb
);

7515 
	`u64_°©s_upd©e_begö
(&
ç
->
rx_°©s
.
syn˝
);

7516 
ç
->
rx_°©s
.
∑ckës
++;

7517 
ç
->
rx_°©s
.
byãs
 +
pkt_size
;

7518 
	`u64_°©s_upd©e_íd
(&
ç
->
rx_°©s
.
syn˝
);

7520 
ªÀa£_des¸ùt‹
:

7521 
desc
->
›ts2
 = 0;

7522 
	`πl8169_m¨k_to_asic
(
desc
, 
rx_buf_sz
);

7525 
cou¡
 = 
cur_rx
 - 
ç
->cur_rx;

7526 
ç
->
cur_rx
 = cur_rx;

7528  
cou¡
;

7529 
	}
}

7531 
úqªtu∫_t
 
	$πl8169_öãºu±
(
úq
, *
dev_ö°™˚
)

7533 
√t_devi˚
 *
dev
 = 
dev_ö°™˚
;

7534 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

7535 
h™dÀd
 = 0;

7536 
u16
 
°©us
;

7538 
°©us
 = 
	`πl_gë_evíts
(
ç
);

7539 i‡(
°©us
 && status != 0xffff) {

7540 
°©us
 &
RTL_EVENT_NAPI
 | 
ç
->
evít_¶ow
;

7541 i‡(
°©us
) {

7542 
h™dÀd
 = 1;

7544 
	`πl_úq_dißbÀ
(
ç
);

7545 
	`«pi_scheduÀ
(&
ç
->
«pi
);

7548  
	`IRQ_RETVAL
(
h™dÀd
);

7549 
	}
}

7554 
	$πl_¶ow_evít_w‹k
(
πl8169_¥iv©e
 *
ç
)

7556 
√t_devi˚
 *
dev
 = 
ç
->dev;

7557 
u16
 
°©us
;

7559 
°©us
 = 
	`πl_gë_evíts
(
ç
Ë&Åp->
evít_¶ow
;

7560 
	`πl_ack_evíts
(
ç
, 
°©us
);

7562 i‡(
	`u∆ikñy
(
°©us
 & 
RxFIFOOvî
)) {

7563 
ç
->
mac_vîsi⁄
) {

7565 
RTL_GIGA_MAC_VER_11
:

7566 
	`√tif_°›_queue
(
dev
);

7568 
	`£t_bô
(
RTL_FLAG_TASK_RESET_PENDING
, 
ç
->
wk
.
Êags
);

7574 i‡(
	`u∆ikñy
(
°©us
 & 
SYSEº
))

7575 
	`πl8169_pcõº_öãºu±
(
dev
);

7577 i‡(
°©us
 & 
LökChg
)

7578 
	`__πl8169_check_lök_°©us
(
dev
, 
ç
,Åp->
mmio_addr
, 
åue
);

7580 
	`πl_úq_íabÀ_Æl
(
ç
);

7581 
	}
}

7583 
	$πl_èsk
(
w‹k_°ru˘
 *
w‹k
)

7586 
bôƒ
;

7587 (*
a˘i⁄
)(
πl8169_¥iv©e
 *);

7588 } 
πl_w‹k
[] = {

7590 { 
RTL_FLAG_TASK_SLOW_PENDING
, 
πl_¶ow_evít_w‹k
 },

7591 { 
RTL_FLAG_TASK_RESET_PENDING
, 
πl_ª£t_w‹k
 },

7592 { 
RTL_FLAG_TASK_PHY_PENDING
, 
πl_phy_w‹k
 }

7594 
πl8169_¥iv©e
 *
ç
 =

7595 
	`c⁄èöî_of
(
w‹k
, 
πl8169_¥iv©e
, 
wk
.work);

7596 
√t_devi˚
 *
dev
 = 
ç
->dev;

7597 
i
;

7599 
	`πl_lock_w‹k
(
ç
);

7601 i‡(!
	`√tif_ru¬ög
(
dev
) ||

7602 !
	`ã°_bô
(
RTL_FLAG_TASK_ENABLED
, 
ç
->
wk
.
Êags
))

7603 
out_u∆ock
;

7605 
i
 = 0; i < 
	`ARRAY_SIZE
(
πl_w‹k
); i++) {

7606 
boﬁ
 
≥ndög
;

7608 
≥ndög
 = 
	`ã°_™d_˛ór_bô
(
πl_w‹k
[
i
].
bôƒ
, 
ç
->
wk
.
Êags
);

7609 i‡(
≥ndög
)

7610 
πl_w‹k
[
i
].
	`a˘i⁄
(
ç
);

7613 
out_u∆ock
:

7614 
	`πl_u∆ock_w‹k
(
ç
);

7615 
	}
}

7617 
	$πl8169_pﬁl
(
«pi_°ru˘
 *
«pi
, 
budgë
)

7619 
πl8169_¥iv©e
 *
ç
 = 
	`c⁄èöî_of
(
«pi
, rtl8169_private,Çapi);

7620 
√t_devi˚
 *
dev
 = 
ç
->dev;

7621 
u16
 
íabÀ_mask
 = 
RTL_EVENT_NAPI
 | 
ç
->
evít_¶ow
;

7622 
w‹k_d⁄e
= 0;

7623 
u16
 
°©us
;

7625 
°©us
 = 
	`πl_gë_evíts
(
ç
);

7626 
	`πl_ack_evíts
(
ç
, 
°©us
 & ~ç->
evít_¶ow
);

7628 i‡(
°©us
 & 
RTL_EVENT_NAPI_RX
)

7629 
w‹k_d⁄e
 = 
	`πl_rx
(
dev
, 
ç
, (
u32
Ë
budgë
);

7631 i‡(
°©us
 & 
RTL_EVENT_NAPI_TX
)

7632 
	`πl_tx
(
dev
, 
ç
);

7634 i‡(
°©us
 & 
ç
->
evít_¶ow
) {

7635 
íabÀ_mask
 &~
ç
->
evít_¶ow
;

7637 
	`πl_scheduÀ_èsk
(
ç
, 
RTL_FLAG_TASK_SLOW_PENDING
);

7640 i‡(
w‹k_d⁄e
 < 
budgë
) {

7641 
	`«pi_com∂ëe
(
«pi
);

7643 
	`πl_úq_íabÀ
(
ç
, 
íabÀ_mask
);

7644 
	`mmiowb
();

7647  
w‹k_d⁄e
;

7648 
	}
}

7650 
	$πl8169_rx_mis£d
(
√t_devi˚
 *
dev
, 
__iomem
 *
iﬂddr
)

7652 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

7654 i‡(
ç
->
mac_vîsi⁄
 > 
RTL_GIGA_MAC_VER_06
)

7657 
dev
->
°©s
.
rx_mis£d_îr‹s
 +(
	`RTL_R32
(
RxMis£d
) & 0xffffff);

7658 
	`RTL_W32
(
RxMis£d
, 0);

7659 
	}
}

7661 
	$πl8169_down
(
√t_devi˚
 *
dev
)

7663 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

7664 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

7666 
	`dñ_timî_sync
(&
ç
->
timî
);

7668 
	`«pi_dißbÀ
(&
ç
->
«pi
);

7669 
	`√tif_°›_queue
(
dev
);

7671 
	`πl8169_hw_ª£t
(
ç
);

7677 
	`πl8169_rx_mis£d
(
dev
, 
iﬂddr
);

7680 
	`synchr⁄ize_sched
();

7682 
	`πl8169_tx_˛ór
(
ç
);

7684 
	`πl8169_rx_˛ór
(
ç
);

7686 
	`πl_∂l_powî_down
(
ç
);

7687 
	}
}

7689 
	$πl8169_˛o£
(
√t_devi˚
 *
dev
)

7691 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

7692 
pci_dev
 *
pdev
 = 
ç
->pci_dev;

7694 
	`pm_ru¡ime_gë_sync
(&
pdev
->
dev
);

7697 
	`πl8169_upd©e_cou¡îs
(
dev
);

7699 
	`πl_lock_w‹k
(
ç
);

7700 
	`˛ór_bô
(
RTL_FLAG_TASK_ENABLED
, 
ç
->
wk
.
Êags
);

7702 
	`πl8169_down
(
dev
);

7703 
	`πl_u∆ock_w‹k
(
ç
);

7705 
	`ˇn˚l_w‹k_sync
(&
ç
->
wk
.
w‹k
);

7707 
	`‰ì_úq
(
pdev
->
úq
, 
dev
);

7709 
	`dma_‰ì_cohîít
(&
pdev
->
dev
, 
R8169_RX_RING_BYTES
, 
ç
->
RxDescAºay
,

7710 
ç
->
RxPhyAddr
);

7711 
	`dma_‰ì_cohîít
(&
pdev
->
dev
, 
R8169_TX_RING_BYTES
, 
ç
->
TxDescAºay
,

7712 
ç
->
TxPhyAddr
);

7713 
ç
->
TxDescAºay
 = 
NULL
;

7714 
ç
->
RxDescAºay
 = 
NULL
;

7716 
	`pm_ru¡ime_put_sync
(&
pdev
->
dev
);

7719 
	}
}

7721 #ifde‡
CONFIG_NET_POLL_CONTROLLER


7722 
	$πl8169_√çﬁl
(
√t_devi˚
 *
dev
)

7724 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

7726 
	`πl8169_öãºu±
(
ç
->
pci_dev
->
úq
, 
dev
);

7727 
	}
}

7730 
	$πl8169_xdp_£t
(
√t_devi˚
 *
dev
, 
bpf_¥og
 *
¥og
)

7732 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

7733 
bpf_¥og
 *
ﬁd_¥og
;

7735 
	`πl_lock_w‹k
(
ç
);

7738 
ﬁd_¥og
 = 
	`rcu_dîe„ªn˚_¥Ÿe˘ed
(
ç
->
xdp_¥og
, 
	`πl_w‹k_lock_hñd
(tp));

7739 
	`rcu_assign_poöãr
(
ç
->
xdp_¥og
, 
¥og
);

7740 i‡(
¥og
) {

7741 
	`bpf_¥og_add
(
¥og
, 1);

7743 
	`synchr⁄ize_rcu
();

7744 i‡(
ﬁd_¥og
) {

7745 
	`bpf_¥og_put
(
ﬁd_¥og
);

7747 
ç
->
xdp_cou¡îs
.
£t
++;

7748 
	`πl_u∆ock_w‹k
(
ç
);

7750 
	}
}

7752 
boﬁ
 
	$πl8169_xdp_©èched
(
√t_devi˚
 *
dev
)

7754 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

7755  !!
ç
->
xdp_¥og
;

7756 
	}
}

7758 
	$πl8169_xdp
(
√t_devi˚
 *
dev
, 
√tdev_bpf
 *
xdp
)

7760 
xdp
->
comm™d
) {

7761 
XDP_SETUP_PROG
:

7762  
	`πl8169_xdp_£t
(
dev
, 
xdp
->
¥og
);

7763 
XDP_QUERY_PROG
:

7764 
xdp
->
¥og_©èched
 = 
	`πl8169_xdp_©èched
(
dev
);

7767  -
EINVAL
;

7769 
	}
}

7771 
	$πl_›í
(
√t_devi˚
 *
dev
)

7773 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

7774 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

7775 
pci_dev
 *
pdev
 = 
ç
->pci_dev;

7776 
ªtvÆ
 = -
ENOMEM
;

7778 
	`pm_ru¡ime_gë_sync
(&
pdev
->
dev
);

7784 
ç
->
TxDescAºay
 = 
	`dma_Æloc_cohîít
(&
pdev
->
dev
, 
R8169_TX_RING_BYTES
,

7785 &
ç
->
TxPhyAddr
, 
GFP_KERNEL
);

7786 i‡(!
ç
->
TxDescAºay
)

7787 
îr_pm_ru¡ime_put
;

7789 
ç
->
RxDescAºay
 = 
	`dma_Æloc_cohîít
(&
pdev
->
dev
, 
R8169_RX_RING_BYTES
,

7790 &
ç
->
RxPhyAddr
, 
GFP_KERNEL
);

7791 i‡(!
ç
->
RxDescAºay
)

7792 
îr_‰ì_tx_0
;

7794 
ªtvÆ
 = 
	`πl8169_öô_rög
(
dev
);

7795 i‡(
ªtvÆ
 < 0)

7796 
îr_‰ì_rx_1
;

7798 
	`INIT_WORK
(&
ç
->
wk
.
w‹k
, 
πl_èsk
);

7800 
	`smp_mb
();

7802 
	`πl_ªque°_fúmw¨e
(
ç
);

7804 
ªtvÆ
 = 
	`ªque°_úq
(
pdev
->
úq
, 
πl8169_öãºu±
,

7805 (
ç
->
„©uªs
 & 
RTL_FEATURE_MSI
Ë? 0 : 
IRQF_SHARED
,

7806 
dev
->
«me
, dev);

7807 i‡(
ªtvÆ
 < 0)

7808 
îr_ªÀa£_fw_2
;

7810 
	`πl_lock_w‹k
(
ç
);

7812 
	`£t_bô
(
RTL_FLAG_TASK_ENABLED
, 
ç
->
wk
.
Êags
);

7814 
	`«pi_íabÀ
(&
ç
->
«pi
);

7816 
	`πl8169_öô_phy
(
dev
, 
ç
);

7818 
	`__πl8169_£t_„©uªs
(
dev
, dev->
„©uªs
);

7820 
	`πl_∂l_powî_up
(
ç
);

7822 
	`πl_hw_°¨t
(
dev
);

7824 i‡(!
	`πl8169_öô_cou¡î_off£ts
(
dev
))

7825 
	`√tif_w¨n
(
ç
, 
hw
, 
dev
, "counterÑeset/update failed\n");

7827 
	`√tif_°¨t_queue
(
dev
);

7829 
	`πl_u∆ock_w‹k
(
ç
);

7831 
ç
->
ßved_wﬁ›ts
 = 0;

7832 
	`pm_ru¡ime_put_noidÀ
(&
pdev
->
dev
);

7834 
	`πl8169_check_lök_°©us
(
dev
, 
ç
, 
iﬂddr
);

7835 
out
:

7836  
ªtvÆ
;

7838 
îr_ªÀa£_fw_2
:

7839 
	`πl_ªÀa£_fúmw¨e
(
ç
);

7840 
	`πl8169_rx_˛ór
(
ç
);

7841 
îr_‰ì_rx_1
:

7842 
	`dma_‰ì_cohîít
(&
pdev
->
dev
, 
R8169_RX_RING_BYTES
, 
ç
->
RxDescAºay
,

7843 
ç
->
RxPhyAddr
);

7844 
ç
->
RxDescAºay
 = 
NULL
;

7845 
îr_‰ì_tx_0
:

7846 
	`dma_‰ì_cohîít
(&
pdev
->
dev
, 
R8169_TX_RING_BYTES
, 
ç
->
TxDescAºay
,

7847 
ç
->
TxPhyAddr
);

7848 
ç
->
TxDescAºay
 = 
NULL
;

7849 
îr_pm_ru¡ime_put
:

7850 
	`pm_ru¡ime_put_noidÀ
(&
pdev
->
dev
);

7851 
out
;

7852 
	}
}

7855 
	$πl8169_gë_°©s64
(
√t_devi˚
 *
dev
, 
π∆_lök_°©s64
 *
°©s
)

7857 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

7858 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

7859 
pci_dev
 *
pdev
 = 
ç
->pci_dev;

7860 
πl8169_cou¡îs
 *
cou¡îs
 = 
ç
->counters;

7861 
°¨t
;

7863 
	`pm_ru¡ime_gë_n‹esume
(&
pdev
->
dev
);

7865 i‡(
	`√tif_ru¬ög
(
dev
Ë&& 
	`pm_ru¡ime_a˘ive
(&
pdev
->dev))

7866 
	`πl8169_rx_mis£d
(
dev
, 
iﬂddr
);

7869 
°¨t
 = 
	`u64_°©s_„tch_begö_úq
(&
ç
->
rx_°©s
.
syn˝
);

7870 
°©s
->
rx_∑ckës
 = 
ç
->
rx_°©s
.
∑ckës
;

7871 
°©s
->
rx_byãs
 = 
ç
->
rx_°©s
.
byãs
;

7872 } 
	`u64_°©s_„tch_ªåy_úq
(&
ç
->
rx_°©s
.
syn˝
, 
°¨t
));

7875 
°¨t
 = 
	`u64_°©s_„tch_begö_úq
(&
ç
->
tx_°©s
.
syn˝
);

7876 
°©s
->
tx_∑ckës
 = 
ç
->
tx_°©s
.
∑ckës
;

7877 
°©s
->
tx_byãs
 = 
ç
->
tx_°©s
.
byãs
;

7878 } 
	`u64_°©s_„tch_ªåy_úq
(&
ç
->
tx_°©s
.
syn˝
, 
°¨t
));

7880 
°©s
->
rx_dr›≥d
 = 
dev
->stats.rx_dropped;

7881 
°©s
->
tx_dr›≥d
 = 
dev
->stats.tx_dropped;

7882 
°©s
->
rx_Àngth_îr‹s
 = 
dev
->stats.rx_length_errors;

7883 
°©s
->
rx_îr‹s
 = 
dev
->stats.rx_errors;

7884 
°©s
->
rx_¸c_îr‹s
 = 
dev
->stats.rx_crc_errors;

7885 
°©s
->
rx_fifo_îr‹s
 = 
dev
->stats.rx_fifo_errors;

7886 
°©s
->
rx_mis£d_îr‹s
 = 
dev
->stats.rx_missed_errors;

7887 
°©s
->
mu…iˇ°
 = 
dev
->stats.multicast;

7893 i‡(
	`pm_ru¡ime_a˘ive
(&
pdev
->
dev
))

7894 
	`πl8169_upd©e_cou¡îs
(
dev
);

7900 
°©s
->
tx_îr‹s
 = 
	`À64_to_˝u
(
cou¡îs
->tx_errors) -

7901 
	`À64_to_˝u
(
ç
->
tc_off£t
.
tx_îr‹s
);

7902 
°©s
->
cﬁlisi⁄s
 = 
	`À32_to_˝u
(
cou¡îs
->
tx_mu…i_cﬁlisi⁄
) -

7903 
	`À32_to_˝u
(
ç
->
tc_off£t
.
tx_mu…i_cﬁlisi⁄
);

7904 
°©s
->
tx_ab‹ãd_îr‹s
 = 
	`À16_to_˝u
(
cou¡îs
->
tx_ab‹ãd
) -

7905 
	`À16_to_˝u
(
ç
->
tc_off£t
.
tx_ab‹ãd
);

7907 
	`pm_ru¡ime_put_noidÀ
(&
pdev
->
dev
);

7910 
	}
}

7912 
	$πl8169_√t_su•íd
(
√t_devi˚
 *
dev
)

7914 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

7916 i‡(!
	`√tif_ru¬ög
(
dev
))

7919 
	`√tif_devi˚_dëach
(
dev
);

7920 
	`√tif_°›_queue
(
dev
);

7922 
	`πl_lock_w‹k
(
ç
);

7923 
	`«pi_dißbÀ
(&
ç
->
«pi
);

7924 
	`˛ór_bô
(
RTL_FLAG_TASK_ENABLED
, 
ç
->
wk
.
Êags
);

7925 
	`πl_u∆ock_w‹k
(
ç
);

7927 
	`πl_∂l_powî_down
(
ç
);

7928 
	}
}

7930 #ifde‡
CONFIG_PM


7932 
	$πl8169_su•íd
(
devi˚
 *device)

7934 
pci_dev
 *
pdev
 = 
	`to_pci_dev
(
devi˚
);

7935 
√t_devi˚
 *
dev
 = 
	`pci_gë_drvd©a
(
pdev
);

7937 
	`πl8169_√t_su•íd
(
dev
);

7940 
	}
}

7942 
	$__πl8169_ªsume
(
√t_devi˚
 *
dev
)

7944 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

7946 
	`√tif_devi˚_©èch
(
dev
);

7948 
	`πl_∂l_powî_up
(
ç
);

7950 
	`πl_lock_w‹k
(
ç
);

7951 
	`«pi_íabÀ
(&
ç
->
«pi
);

7952 
	`£t_bô
(
RTL_FLAG_TASK_ENABLED
, 
ç
->
wk
.
Êags
);

7953 
	`πl_u∆ock_w‹k
(
ç
);

7955 
	`πl_scheduÀ_èsk
(
ç
, 
RTL_FLAG_TASK_RESET_PENDING
);

7956 
	}
}

7958 
	$πl8169_ªsume
(
devi˚
 *device)

7960 
pci_dev
 *
pdev
 = 
	`to_pci_dev
(
devi˚
);

7961 
√t_devi˚
 *
dev
 = 
	`pci_gë_drvd©a
(
pdev
);

7962 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

7964 
	`πl8169_öô_phy
(
dev
, 
ç
);

7966 i‡(
	`√tif_ru¬ög
(
dev
))

7967 
	`__πl8169_ªsume
(
dev
);

7970 
	}
}

7972 
	$πl8169_ru¡ime_su•íd
(
devi˚
 *device)

7974 
pci_dev
 *
pdev
 = 
	`to_pci_dev
(
devi˚
);

7975 
√t_devi˚
 *
dev
 = 
	`pci_gë_drvd©a
(
pdev
);

7976 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

7978 i‡(!
ç
->
TxDescAºay
)

7981 
	`πl_lock_w‹k
(
ç
);

7982 
ç
->
ßved_wﬁ›ts
 = 
	`__πl8169_gë_wﬁ
(tp);

7983 
	`__πl8169_£t_wﬁ
(
ç
, 
WAKE_ANY
);

7984 
	`πl_u∆ock_w‹k
(
ç
);

7986 
	`πl8169_√t_su•íd
(
dev
);

7989 
	`πl8169_rx_mis£d
(
dev
, 
ç
->
mmio_addr
);

7990 
	`πl8169_upd©e_cou¡îs
(
dev
);

7993 
	}
}

7995 
	$πl8169_ru¡ime_ªsume
(
devi˚
 *device)

7997 
pci_dev
 *
pdev
 = 
	`to_pci_dev
(
devi˚
);

7998 
√t_devi˚
 *
dev
 = 
	`pci_gë_drvd©a
(
pdev
);

7999 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

8000 
	`πl_ør_£t
(
ç
, 
dev
->
dev_addr
);

8002 i‡(!
ç
->
TxDescAºay
)

8005 
	`πl_lock_w‹k
(
ç
);

8006 
	`__πl8169_£t_wﬁ
(
ç
,Åp->
ßved_wﬁ›ts
);

8007 
ç
->
ßved_wﬁ›ts
 = 0;

8008 
	`πl_u∆ock_w‹k
(
ç
);

8010 
	`πl8169_öô_phy
(
dev
, 
ç
);

8012 
	`__πl8169_ªsume
(
dev
);

8015 
	}
}

8017 
	$πl8169_ru¡ime_idÀ
(
devi˚
 *device)

8019 
pci_dev
 *
pdev
 = 
	`to_pci_dev
(
devi˚
);

8020 
√t_devi˚
 *
dev
 = 
	`pci_gë_drvd©a
(
pdev
);

8021 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

8023  
ç
->
TxDescAºay
 ? -
EBUSY
 : 0;

8024 
	}
}

8026 c⁄° 
dev_pm_›s
 
	gπl8169_pm_›s
 = {

8027 .
su•íd
 = 
πl8169_su•íd
,

8028 .
	gªsume
 = 
πl8169_ªsume
,

8029 .
	g‰ìze
 = 
πl8169_su•íd
,

8030 .
	gthaw
 = 
πl8169_ªsume
,

8031 .
	gpowîoff
 = 
πl8169_su•íd
,

8032 .
	gª°‹e
 = 
πl8169_ªsume
,

8033 .
	gru¡ime_su•íd
 = 
πl8169_ru¡ime_su•íd
,

8034 .
	gru¡ime_ªsume
 = 
πl8169_ru¡ime_ªsume
,

8035 .
	gru¡ime_idÀ
 = 
πl8169_ru¡ime_idÀ
,

8038 
	#RTL8169_PM_OPS
 (&
πl8169_pm_›s
)

	)

8042 
	#RTL8169_PM_OPS
 
NULL


	)

8046 
	$πl_wﬁ_shutdown_quúk
(
πl8169_¥iv©e
 *
ç
)

8048 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

8051 
ç
->
mac_vîsi⁄
) {

8052 
RTL_GIGA_MAC_VER_11
:

8053 
RTL_GIGA_MAC_VER_12
:

8054 
RTL_GIGA_MAC_VER_17
:

8055 
	`pci_˛ór_ma°î
(
ç
->
pci_dev
);

8057 
	`RTL_W8
(
ChùCmd
, 
CmdRxEnb
);

8059 
	`RTL_R8
(
ChùCmd
);

8064 
	}
}

8066 
	$πl_shutdown
(
pci_dev
 *
pdev
)

8068 
√t_devi˚
 *
dev
 = 
	`pci_gë_drvd©a
(
pdev
);

8069 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

8070 
devi˚
 *
d
 = &
pdev
->
dev
;

8072 
	`pm_ru¡ime_gë_sync
(
d
);

8074 
	`πl8169_√t_su•íd
(
dev
);

8077 
	`πl_ør_£t
(
ç
, 
dev
->
≥rm_addr
);

8079 
	`πl8169_hw_ª£t
(
ç
);

8081 i‡(
sy°em_°©e
 =
SYSTEM_POWER_OFF
) {

8082 i‡(
	`__πl8169_gë_wﬁ
(
ç
Ë& 
WAKE_ANY
) {

8083 
	`πl_wﬁ_su•íd_quúk
(
ç
);

8084 
	`πl_wﬁ_shutdown_quúk
(
ç
);

8087 
	`pci_wake_‰om_d3
(
pdev
, 
åue
);

8088 
	`pci_£t_powî_°©e
(
pdev
, 
PCI_D3hŸ
);

8091 
	`pm_ru¡ime_put_noidÀ
(
d
);

8092 
	}
}

8094 
	$πl_ªmove_⁄e
(
pci_dev
 *
pdev
)

8096 
√t_devi˚
 *
dev
 = 
	`pci_gë_drvd©a
(
pdev
);

8097 
πl8169_¥iv©e
 *
ç
 = 
	`√tdev_¥iv
(
dev
);

8099 i‡((
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_27
 ||

8100 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_28
 ||

8101 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_31
 ||

8102 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_49
 ||

8103 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_50
 ||

8104 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_51
) &&

8105 
	`r8168_check_dash
(
ç
)) {

8106 
	`πl8168_drivî_°›
(
ç
);

8109 
	`√tif_«pi_dñ
(&
ç
->
«pi
);

8111 
	`uƒegi°î_√tdev
(
dev
);

8113 
	`dma_‰ì_cohîít
(&
ç
->
pci_dev
->
dev
, (*ç->
cou¡îs
),

8114 
ç
->
cou¡îs
,Åp->
cou¡îs_phys_addr
);

8116 
	`πl_ªÀa£_fúmw¨e
(
ç
);

8118 i‡(
	`pci_dev_run_wake
(
pdev
))

8119 
	`pm_ru¡ime_gë_n‹esume
(&
pdev
->
dev
);

8122 
	`πl_ør_£t
(
ç
, 
dev
->
≥rm_addr
);

8124 
	`πl_dißbÀ_msi
(
pdev
, 
ç
);

8125 
	`πl8169_ªÀa£_bﬂrd
(
pdev
, 
dev
, 
ç
->
mmio_addr
);

8126 
	}
}

8128 c⁄° 
√t_devi˚_›s
 
	gπl_√tdev_›s
 = {

8129 .
ndo_›í
 = 
πl_›í
,

8130 .
	gndo_°›
 = 
πl8169_˛o£
,

8131 .
	gndo_gë_°©s64
 = 
πl8169_gë_°©s64
,

8132 .
	gndo_°¨t_xmô
 = 
πl8169_°¨t_xmô
,

8133 .
	gndo_tx_timeout
 = 
πl8169_tx_timeout
,

8134 .
	gndo_vÆid©e_addr
 = 
ëh_vÆid©e_addr
,

8135 .
	gndo_ch™ge_mtu
 = 
πl8169_ch™ge_mtu
,

8136 .
	gndo_fix_„©uªs
 = 
πl8169_fix_„©uªs
,

8137 .
	gndo_£t_„©uªs
 = 
πl8169_£t_„©uªs
,

8138 .
	gndo_£t_mac_addªss
 = 
πl_£t_mac_addªss
,

8139 .
	gndo_do_io˘l
 = 
πl8169_io˘l
,

8140 .
	gndo_£t_rx_mode
 = 
πl_£t_rx_mode
,

8141 #ifde‡
CONFIG_NET_POLL_CONTROLLER


8142 .
	gndo_pﬁl_c⁄åﬁÀr
 = 
πl8169_√çﬁl
,

8144 .
	gndo_bpf
 = 
πl8169_xdp
,

8148 c⁄° 
	sπl_cfg_öfo
 {

8149 (*
	mhw_°¨t
)(
	m√t_devi˚
 *);

8150 
	mªgi⁄
;

8151 
	mÆign
;

8152 
u16
 
	mevít_¶ow
;

8153 
	m„©uªs
;

8154 
u8
 
	mdeÁu…_vî
;

8155 } 
	gπl_cfg_öfos
 [] = {

8156 [
RTL_CFG_0
] = {

8157 .
hw_°¨t
 = 
πl_hw_°¨t_8169
,

8158 .
	gªgi⁄
 = 1,

8159 .
	gÆign
 = 0,

8160 .
	gevít_¶ow
 = 
SYSEº
 | 
LökChg
 | 
RxOvîÊow
 | 
RxFIFOOvî
,

8161 .
	g„©uªs
 = 
RTL_FEATURE_GMII
,

8162 .
	gdeÁu…_vî
 = 
RTL_GIGA_MAC_VER_01
,

8164 [
RTL_CFG_1
] = {

8165 .
hw_°¨t
 = 
πl_hw_°¨t_8168
,

8166 .
	gªgi⁄
 = 2,

8167 .
	gÆign
 = 8,

8168 .
	gevít_¶ow
 = 
SYSEº
 | 
LökChg
 | 
RxOvîÊow
,

8169 .
	g„©uªs
 = 
RTL_FEATURE_GMII
 | 
RTL_FEATURE_MSI
,

8170 .
	gdeÁu…_vî
 = 
RTL_GIGA_MAC_VER_11
,

8172 [
RTL_CFG_2
] = {

8173 .
hw_°¨t
 = 
πl_hw_°¨t_8101
,

8174 .
	gªgi⁄
 = 2,

8175 .
	gÆign
 = 8,

8176 .
	gevít_¶ow
 = 
SYSEº
 | 
LökChg
 | 
RxOvîÊow
 | 
RxFIFOOvî
 |

8177 
PCSTimeout
,

8178 .
	g„©uªs
 = 
RTL_FEATURE_MSI
,

8179 .
	gdeÁu…_vî
 = 
RTL_GIGA_MAC_VER_13
,

8184 
	$πl_åy_msi
(
πl8169_¥iv©e
 *
ç
,

8185 c⁄° 
πl_cfg_öfo
 *
cfg
)

8187 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

8188 
msi
 = 0;

8189 
u8
 
cfg2
;

8191 
cfg2
 = 
	`RTL_R8
(
C⁄fig2
Ë& ~
MSIE«bÀ
;

8192 i‡(
cfg
->
„©uªs
 & 
RTL_FEATURE_MSI
) {

8193 i‡(
	`pci_íabÀ_msi
(
ç
->
pci_dev
)) {

8194 
	`√tif_öfo
(
ç
, 
hw
,Åp->
dev
, "no MSI. BackÅo INTx.\n");

8196 
cfg2
 |
MSIE«bÀ
;

8197 
msi
 = 
RTL_FEATURE_MSI
;

8200 i‡(
ç
->
mac_vîsi⁄
 <
RTL_GIGA_MAC_VER_06
)

8201 
	`RTL_W8
(
C⁄fig2
, 
cfg2
);

8202  
msi
;

8203 
	}
}

8205 
	$DECLARE_RTL_COND
(
πl_lök_li°_ªady_c⁄d
)

8207 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

8209  
	`RTL_R8
(
MCU
Ë& 
LINK_LIST_RDY
;

8210 
	}
}

8212 
	$DECLARE_RTL_COND
(
πl_rxtx_em±y_c⁄d
)

8214 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

8216  (
	`RTL_R8
(
MCU
Ë& 
RXTX_EMPTY
) == RXTX_EMPTY;

8217 
	}
}

8219 
	$πl_hw_öô_8168g
(
πl8169_¥iv©e
 *
ç
)

8221 
__iomem
 *
iﬂddr
 = 
ç
->
mmio_addr
;

8222 
u32
 
d©a
;

8224 
ç
->
o˝_ba£
 = 
OCP_STD_PHY_BASE
;

8226 
	`RTL_W32
(
MISC
, 
	`RTL_R32
(MISCË| 
RXDV_GATED_EN
);

8228 i‡(!
	`πl_udñay_lo›_waô_high
(
ç
, &
πl_txcfg_em±y_c⁄d
, 100, 42))

8231 i‡(!
	`πl_udñay_lo›_waô_high
(
ç
, &
πl_rxtx_em±y_c⁄d
, 100, 42))

8234 
	`RTL_W8
(
ChùCmd
, 
	`RTL_R8
(ChùCmdË& ~(
CmdTxEnb
 | 
CmdRxEnb
));

8235 
	`m¶ìp
(1);

8236 
	`RTL_W8
(
MCU
, 
	`RTL_R8
(MCUË& ~
NOW_IS_OOB
);

8238 
d©a
 = 
	`r8168_mac_o˝_ªad
(
ç
, 0xe8de);

8239 
d©a
 &= ~(1 << 14);

8240 
	`r8168_mac_o˝_wrôe
(
ç
, 0xe8de, 
d©a
);

8242 i‡(!
	`πl_udñay_lo›_waô_high
(
ç
, &
πl_lök_li°_ªady_c⁄d
, 100, 42))

8245 
d©a
 = 
	`r8168_mac_o˝_ªad
(
ç
, 0xe8de);

8246 
d©a
 |= (1 << 15);

8247 
	`r8168_mac_o˝_wrôe
(
ç
, 0xe8de, 
d©a
);

8249 i‡(!
	`πl_udñay_lo›_waô_high
(
ç
, &
πl_lök_li°_ªady_c⁄d
, 100, 42))

8251 
	}
}

8253 
	$πl_hw_öô_8168ï
(
πl8169_¥iv©e
 *
ç
)

8255 
	`πl8168ï_°›_cmac
(
ç
);

8256 
	`πl_hw_öô_8168g
(
ç
);

8257 
	}
}

8259 
	$πl_hw_öôülize
(
πl8169_¥iv©e
 *
ç
)

8261 
ç
->
mac_vîsi⁄
) {

8262 
RTL_GIGA_MAC_VER_40
:

8263 
RTL_GIGA_MAC_VER_41
:

8264 
RTL_GIGA_MAC_VER_42
:

8265 
RTL_GIGA_MAC_VER_43
:

8266 
RTL_GIGA_MAC_VER_44
:

8267 
RTL_GIGA_MAC_VER_45
:

8268 
RTL_GIGA_MAC_VER_46
:

8269 
RTL_GIGA_MAC_VER_47
:

8270 
RTL_GIGA_MAC_VER_48
:

8271 
	`πl_hw_öô_8168g
(
ç
);

8273 
RTL_GIGA_MAC_VER_49
:

8274 
RTL_GIGA_MAC_VER_50
:

8275 
RTL_GIGA_MAC_VER_51
:

8276 
	`πl_hw_öô_8168ï
(
ç
);

8281 
	}
}

8283 
	$πl_öô_⁄e
(
pci_dev
 *
pdev
, c⁄° 
pci_devi˚_id
 *
ít
)

8285 c⁄° 
πl_cfg_öfo
 *
cfg
 = 
πl_cfg_öfos
 + 
ít
->
drivî_d©a
;

8286 c⁄° 
ªgi⁄
 = 
cfg
->region;

8287 
πl8169_¥iv©e
 *
ç
;

8288 
mii_if_öfo
 *
mii
;

8289 
√t_devi˚
 *
dev
;

8290 
__iomem
 *
iﬂddr
;

8291 
chù£t
, 
i
;

8292 
rc
;

8294 i‡(
	`√tif_msg_drv
(&
debug
)) {

8295 
	`¥ötk
(
KERN_INFO
 "%s Gigabit Ethernet driver %sÜoaded\n",

8296 
MODULENAME
, 
RTL8169_VERSION
);

8299 
dev
 = 
	`Æloc_ëhîdev
( (*
ç
));

8300 i‡(!
dev
) {

8301 
rc
 = -
ENOMEM
;

8302 
out
;

8305 
	`SET_NETDEV_DEV
(
dev
, &
pdev
->dev);

8306 
dev
->
√tdev_›s
 = &
πl_√tdev_›s
;

8307 
ç
 = 
	`√tdev_¥iv
(
dev
);

8308 
ç
->
dev
 = dev;

8309 
ç
->
pci_dev
 = 
pdev
;

8310 
ç
->
msg_íabÀ
 = 
	`√tif_msg_öô
(
debug
.msg_íabÀ, 
R8169_MSG_DEFAULT
);

8312 
mii
 = &
ç
->mii;

8313 
mii
->
dev
 = dev;

8314 
mii
->
mdio_ªad
 = 
πl_mdio_ªad
;

8315 
mii
->
mdio_wrôe
 = 
πl_mdio_wrôe
;

8316 
mii
->
phy_id_mask
 = 0x1f;

8317 
mii
->
ªg_num_mask
 = 0x1f;

8318 
mii
->
suµ‹ts_gmii
 = !!(
cfg
->
„©uªs
 & 
RTL_FEATURE_GMII
);

8322 
	`pci_dißbÀ_lök_°©e
(
pdev
, 
PCIE_LINK_STATE_L0S
 | 
PCIE_LINK_STATE_L1
 |

8323 
PCIE_LINK_STATE_CLKPM
);

8326 
rc
 = 
	`pci_íabÀ_devi˚
(
pdev
);

8327 i‡(
rc
 < 0) {

8328 
	`√tif_îr
(
ç
, 
¥obe
, 
dev
, "enable failure\n");

8329 
îr_out_‰ì_dev_1
;

8332 i‡(
	`pci_£t_mwi
(
pdev
) < 0)

8333 
	`√tif_öfo
(
ç
, 
¥obe
, 
dev
, "Mem-Wr-Inval unavailable\n");

8336 i‡(!(
	`pci_ªsour˚_Êags
(
pdev
, 
ªgi⁄
Ë& 
IORESOURCE_MEM
)) {

8337 
	`√tif_îr
(
ç
, 
¥obe
, 
dev
,

8339 
ªgi⁄
);

8340 
rc
 = -
ENODEV
;

8341 
îr_out_mwi_2
;

8345 i‡(
	`pci_ªsour˚_Àn
(
pdev
, 
ªgi⁄
Ë< 
R8169_REGS_SIZE
) {

8346 
	`√tif_îr
(
ç
, 
¥obe
, 
dev
,

8348 
rc
 = -
ENODEV
;

8349 
îr_out_mwi_2
;

8352 
rc
 = 
	`pci_ªque°_ªgi⁄s
(
pdev
, 
MODULENAME
);

8353 i‡(
rc
 < 0) {

8354 
	`√tif_îr
(
ç
, 
¥obe
, 
dev
, "couldÇotÑequestÑegions\n");

8355 
îr_out_mwi_2
;

8359 
iﬂddr
 = 
	`i‹em≠
(
	`pci_ªsour˚_°¨t
(
pdev
, 
ªgi⁄
), 
R8169_REGS_SIZE
);

8360 i‡(!
iﬂddr
) {

8361 
	`√tif_îr
(
ç
, 
¥obe
, 
dev
, "cannotÑemap MMIO,áborting\n");

8362 
rc
 = -
EIO
;

8363 
îr_out_‰ì_ªs_3
;

8365 
ç
->
mmio_addr
 = 
iﬂddr
;

8367 i‡(!
	`pci_is_pcõ
(
pdev
))

8368 
	`√tif_öfo
(
ç
, 
¥obe
, 
dev
, "not PCI Express\n");

8371 
	`πl8169_gë_mac_vîsi⁄
(
ç
, 
dev
, 
cfg
->
deÁu…_vî
);

8373 
ç
->
˝_cmd
 = 0;

8375 i‡(((
dma_addr_t
) > 4) &&

8376 (
u£_dac
 =1 || (u£_da¯=-1 && 
	`pci_is_pcõ
(
pdev
) &&

8377 
ç
->
mac_vîsi⁄
 >
RTL_GIGA_MAC_VER_18
)) &&

8378 !
	`pci_£t_dma_mask
(
pdev
, 
	`DMA_BIT_MASK
(64)) &&

8379 !
	`pci_£t_c⁄si°ít_dma_mask
(
pdev
, 
	`DMA_BIT_MASK
(64))) {

8382 i‡(!
	`pci_is_pcõ
(
pdev
))

8383 
ç
->
˝_cmd
 |
PCIDAC
;

8384 
dev
->
„©uªs
 |
NETIF_F_HIGHDMA
;

8386 
rc
 = 
	`pci_£t_dma_mask
(
pdev
, 
	`DMA_BIT_MASK
(32));

8387 i‡(
rc
 < 0) {

8388 
	`√tif_îr
(
ç
, 
¥obe
, 
dev
, "DMA configuration failed\n");

8389 
îr_out_unm≠_4
;

8393 
	`πl_öô_rxcfg
(
ç
);

8395 
	`πl_úq_dißbÀ
(
ç
);

8397 
	`πl_hw_öôülize
(
ç
);

8399 
	`πl_hw_ª£t
(
ç
);

8401 
	`πl_ack_evíts
(
ç
, 0xffff);

8403 
	`pci_£t_ma°î
(
pdev
);

8405 
	`πl_öô_mdio_›s
(
ç
);

8406 
	`πl_öô_∂l_powî_›s
(
ç
);

8407 
	`πl_öô_jumbo_›s
(
ç
);

8408 
	`πl_öô_csi_›s
(
ç
);

8410 
	`πl8169_¥öt_mac_vîsi⁄
(
ç
);

8412 
chù£t
 = 
ç
->
mac_vîsi⁄
;

8413 
ç
->
txd_vîsi⁄
 = 
πl_chù_öfos
[
chù£t
].txd_version;

8415 
	`RTL_W8
(
Cfg9346
, 
Cfg9346_U∆ock
);

8416 
	`RTL_W8
(
C⁄fig1
, 
	`RTL_R8
(C⁄fig1Ë| 
PME«bÀ
);

8417 
	`RTL_W8
(
C⁄fig5
, 
	`RTL_R8
(C⁄fig5Ë& (
BWF
 | 
MWF
 | 
UWF
 | 
L™Wake
 | 
PMESètus
));

8418 
ç
->
mac_vîsi⁄
) {

8419 
RTL_GIGA_MAC_VER_34
:

8420 
RTL_GIGA_MAC_VER_35
:

8421 
RTL_GIGA_MAC_VER_36
:

8422 
RTL_GIGA_MAC_VER_37
:

8423 
RTL_GIGA_MAC_VER_38
:

8424 
RTL_GIGA_MAC_VER_40
:

8425 
RTL_GIGA_MAC_VER_41
:

8426 
RTL_GIGA_MAC_VER_42
:

8427 
RTL_GIGA_MAC_VER_43
:

8428 
RTL_GIGA_MAC_VER_44
:

8429 
RTL_GIGA_MAC_VER_45
:

8430 
RTL_GIGA_MAC_VER_46
:

8431 
RTL_GIGA_MAC_VER_47
:

8432 
RTL_GIGA_MAC_VER_48
:

8433 
RTL_GIGA_MAC_VER_49
:

8434 
RTL_GIGA_MAC_VER_50
:

8435 
RTL_GIGA_MAC_VER_51
:

8436 i‡(
	`πl_îi_ªad
(
ç
, 0xdc, 
ERIAR_EXGMAC
Ë& 
MagicPackë_v2
)

8437 
ç
->
„©uªs
 |
RTL_FEATURE_WOL
;

8438 i‡((
	`RTL_R8
(
C⁄fig3
Ë& 
LökUp
) != 0)

8439 
ç
->
„©uªs
 |
RTL_FEATURE_WOL
;

8442 i‡((
	`RTL_R8
(
C⁄fig3
Ë& (
LökUp
 | 
MagicPackë
)) != 0)

8443 
ç
->
„©uªs
 |
RTL_FEATURE_WOL
;

8446 i‡((
	`RTL_R8
(
C⁄fig5
Ë& (
UWF
 | 
BWF
 | 
MWF
)) != 0)

8447 
ç
->
„©uªs
 |
RTL_FEATURE_WOL
;

8448 
ç
->
„©uªs
 |
	`πl_åy_msi
—p, 
cfg
);

8449 
	`RTL_W8
(
Cfg9346
, 
Cfg9346_Lock
);

8451 i‡(
	`πl_tbi_íabÀd
(
ç
)) {

8452 
ç
->
£t_•ìd
 = 
πl8169_£t_•ìd_tbi
;

8453 
ç
->
gë_£âögs
 = 
πl8169_g£t_tbi
;

8454 
ç
->
phy_ª£t_íabÀ
 = 
πl8169_tbi_ª£t_íabÀ
;

8455 
ç
->
phy_ª£t_≥ndög
 = 
πl8169_tbi_ª£t_≥ndög
;

8456 
ç
->
lök_ok
 = 
πl8169_tbi_lök_ok
;

8457 
ç
->
do_io˘l
 = 
πl_tbi_io˘l
;

8459 
ç
->
£t_•ìd
 = 
πl8169_£t_•ìd_xmii
;

8460 
ç
->
gë_£âögs
 = 
πl8169_g£t_xmii
;

8461 
ç
->
phy_ª£t_íabÀ
 = 
πl8169_xmii_ª£t_íabÀ
;

8462 
ç
->
phy_ª£t_≥ndög
 = 
πl8169_xmii_ª£t_≥ndög
;

8463 
ç
->
lök_ok
 = 
πl8169_xmii_lök_ok
;

8464 
ç
->
do_io˘l
 = 
πl_xmii_io˘l
;

8467 
	`muãx_öô
(&
ç
->
wk
.
muãx
);

8468 
	`u64_°©s_öô
(&
ç
->
rx_°©s
.
syn˝
);

8469 
	`u64_°©s_öô
(&
ç
->
tx_°©s
.
syn˝
);

8472 i‡(
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_35
 ||

8473 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_36
 ||

8474 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_37
 ||

8475 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_38
 ||

8476 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_40
 ||

8477 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_41
 ||

8478 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_42
 ||

8479 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_43
 ||

8480 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_44
 ||

8481 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_45
 ||

8482 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_46
 ||

8483 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_47
 ||

8484 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_48
 ||

8485 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_49
 ||

8486 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_50
 ||

8487 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_51
) {

8488 
u16
 
mac_addr
[3];

8490 *(
u32
 *)&
mac_addr
[0] = 
	`πl_îi_ªad
(
ç
, 0xe0, 
ERIAR_EXGMAC
);

8491 *(
u16
 *)&
mac_addr
[2] = 
	`πl_îi_ªad
(
ç
, 0xe4, 
ERIAR_EXGMAC
);

8493 i‡(
	`is_vÆid_ëhî_addr
((
u8
 *)
mac_addr
))

8494 
	`πl_ør_£t
(
ç
, (
u8
 *)
mac_addr
);

8496 
i
 = 0; i < 
ETH_ALEN
; i++)

8497 
dev
->
dev_addr
[
i
] = 
	`RTL_R8
(
MAC0
 + i);

8499 
dev
->
ëhtoﬁ_›s
 = &
πl8169_ëhtoﬁ_›s
;

8500 
dev
->
w©chdog_timeo
 = 
RTL8169_TX_TIMEOUT
;

8502 
	`√tif_«pi_add
(
dev
, &
ç
->
«pi
, 
πl8169_pﬁl
, 
R8169_NAPI_WEIGHT
);

8506 
dev
->
„©uªs
 |
NETIF_F_RXCSUM
 |

8507 
NETIF_F_HW_VLAN_CTAG_TX
 | 
NETIF_F_HW_VLAN_CTAG_RX
;

8509 
dev
->
hw_„©uªs
 = 
NETIF_F_SG
 | 
NETIF_F_IP_CSUM
 | 
NETIF_F_TSO
 |

8510 
NETIF_F_RXCSUM
 | 
NETIF_F_HW_VLAN_CTAG_TX
 |

8511 
NETIF_F_HW_VLAN_CTAG_RX
;

8512 
dev
->
vœn_„©uªs
 = 
NETIF_F_SG
 | 
NETIF_F_IP_CSUM
 | 
NETIF_F_TSO
 |

8513 
NETIF_F_HIGHDMA
;

8515 
ç
->
˝_cmd
 |
RxChkSum
 | 
RxVœn
;

8521 i‡(
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_05
)

8523 
dev
->
hw_„©uªs
 &~
NETIF_F_HW_VLAN_CTAG_RX
;

8525 i‡(
ç
->
txd_vîsi⁄
 =
RTL_TD_0
)

8526 
ç
->
tso_csum
 = 
πl8169_tso_csum_v1
;

8527 i‡(
ç
->
txd_vîsi⁄
 =
RTL_TD_1
) {

8528 
ç
->
tso_csum
 = 
πl8169_tso_csum_v2
;

8529 
dev
->
hw_„©uªs
 |
NETIF_F_IPV6_CSUM
 | 
NETIF_F_TSO6
;

8531 
	`WARN_ON_ONCE
(1);

8533 
dev
->
hw_„©uªs
 |
NETIF_F_RXALL
;

8534 
dev
->
hw_„©uªs
 |
NETIF_F_RXFCS
;

8536 
ç
->
hw_°¨t
 = 
cfg
->hw_start;

8537 
ç
->
evít_¶ow
 = 
cfg
->event_slow;

8539 
ç
->
›ts1_mask
 = (ç->
mac_vîsi⁄
 !
RTL_GIGA_MAC_VER_01
) ?

8540 ~(
RxBOVF
 | 
RxFOVF
) : ~0;

8542 
	`timî_£tup
(&
ç
->
timî
, 
πl8169_phy_timî
, 0);

8544 
ç
->
πl_fw
 = 
RTL_FIRMWARE_UNKNOWN
;

8546 
ç
->
cou¡îs
 = 
	`dma_Æloc_cohîít
 (&
pdev
->
dev
, (*tp->counters),

8547 &
ç
->
cou¡îs_phys_addr
, 
GFP_KERNEL
);

8548 i‡(!
ç
->
cou¡îs
) {

8549 
rc
 = -
ENOMEM
;

8550 
îr_out_msi_5
;

8553 
rc
 = 
	`ªgi°î_√tdev
(
dev
);

8554 i‡(
rc
 < 0)

8555 
îr_out_˙t_6
;

8557 
	`pci_£t_drvd©a
(
pdev
, 
dev
);

8559 
	`√tif_öfo
(
ç
, 
¥obe
, 
dev
, "%sát 0x%p, %pM, XID %08x IRQ %d\n",

8560 
πl_chù_öfos
[
chù£t
].
«me
, 
iﬂddr
, 
dev
->
dev_addr
,

8561 (
u32
)(
	`RTL_R32
(
TxC⁄fig
Ë& 0x9cf0f8ff), 
pdev
->
úq
);

8562 i‡(
πl_chù_öfos
[
chù£t
].
jumbo_max
 !
JUMBO_1K
) {

8563 
	`√tif_öfo
(
ç
, 
¥obe
, 
dev
, "jumbo features [frames: %d bytes, "

8565 
πl_chù_öfos
[
chù£t
].
jumbo_max
,

8566 
πl_chù_öfos
[
chù£t
].
jumbo_tx_csum
 ? "ok" : "ko");

8569 i‡((
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_27
 ||

8570 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_28
 ||

8571 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_31
 ||

8572 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_49
 ||

8573 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_50
 ||

8574 
ç
->
mac_vîsi⁄
 =
RTL_GIGA_MAC_VER_51
) &&

8575 
	`r8168_check_dash
(
ç
)) {

8576 
	`πl8168_drivî_°¨t
(
ç
);

8579 
	`devi˚_£t_wakeup_íabÀ
(&
pdev
->
dev
, 
ç
->
„©uªs
 & 
RTL_FEATURE_WOL
);

8581 i‡(
	`pci_dev_run_wake
(
pdev
))

8582 
	`pm_ru¡ime_put_noidÀ
(&
pdev
->
dev
);

8584 
	`√tif_ˇºõr_off
(
dev
);

8586 
	`¥ötk
("Glenn\n");

8588 
out
:

8589  
rc
;

8591 
îr_out_˙t_6
:

8592 
	`dma_‰ì_cohîít
(&
pdev
->
dev
, (*
ç
->
cou¡îs
),Åp->counters,

8593 
ç
->
cou¡îs_phys_addr
);

8594 
îr_out_msi_5
:

8595 
	`√tif_«pi_dñ
(&
ç
->
«pi
);

8596 
	`πl_dißbÀ_msi
(
pdev
, 
ç
);

8597 
îr_out_unm≠_4
:

8598 
	`iounm≠
(
iﬂddr
);

8599 
îr_out_‰ì_ªs_3
:

8600 
	`pci_ªÀa£_ªgi⁄s
(
pdev
);

8601 
îr_out_mwi_2
:

8602 
	`pci_˛ór_mwi
(
pdev
);

8603 
	`pci_dißbÀ_devi˚
(
pdev
);

8604 
îr_out_‰ì_dev_1
:

8605 
	`‰ì_√tdev
(
dev
);

8606 
out
;

8607 
	}
}

8609 
pci_drivî
 
	gπl8169_pci_drivî
 = {

8610 .
«me
 = 
MODULENAME
,

8611 .
	gid_èbÀ
 = 
πl8169_pci_tbl
,

8612 .
	g¥obe
 = 
πl_öô_⁄e
,

8613 .
	gªmove
 = 
πl_ªmove_⁄e
,

8614 .
	gshutdown
 = 
πl_shutdown
,

8615 .
	gdrivî
.
	gpm
 = 
RTL8169_PM_OPS
,

8618 
moduÀ_pci_drivî
(
πl8169_pci_drivî
);

	@r8169.mod.c

1 
	~<löux/moduÀ.h
>

2 
	~<löux/vîmagic.h
>

3 
	~<löux/compûî.h
>

5 
MODULE_INFO
(
vîmagic
, 
VERMAGIC_STRING
);

6 
MODULE_INFO
(
«me
, 
KBUILD_MODNAME
);

8 
__visibÀ
 
moduÀ
 
__this_moduÀ


9 
__©åibuã__
((
£˘i⁄
(".gnu.linkonce.this_module"))) = {

10 .
«me
 = 
KBUILD_MODNAME
,

11 .
	göô
 = 
öô_moduÀ
,

12 #ifde‡
CONFIG_MODULE_UNLOAD


13 .
	gexô
 = 
˛ónup_moduÀ
,

15 .
	g¨ch
 = 
MODULE_ARCH_INIT
,

18 #ifde‡
RETPOLINE


19 
MODULE_INFO
(
ªçﬁöe
, "Y");

22 c⁄° 
	g__moduÀ_dïíds
[]

23 
__u£d


24 
__©åibuã__
((
£˘i⁄
(".modinfo"))) =

27 
MODULE_ALIAS
("pci:v000010ECd00008129sv*sd*bc*sc*i*");

28 
MODULE_ALIAS
("pci:v000010ECd00008136sv*sd*bc*sc*i*");

29 
MODULE_ALIAS
("pci:v000010ECd00008161sv*sd*bc*sc*i*");

30 
MODULE_ALIAS
("pci:v000010ECd00008167sv*sd*bc*sc*i*");

31 
MODULE_ALIAS
("pci:v000010ECd00008168sv*sd*bc*sc*i*");

32 
MODULE_ALIAS
("pci:v000010ECd00008169sv*sd*bc*sc*i*");

33 
MODULE_ALIAS
("pci:v00001186d00004300sv00001186sd00004B10bc*sc*i*");

34 
MODULE_ALIAS
("pci:v00001186d00004300sv*sd*bc*sc*i*");

35 
MODULE_ALIAS
("pci:v00001186d00004302sv*sd*bc*sc*i*");

36 
MODULE_ALIAS
("pci:v00001259d0000C107sv*sd*bc*sc*i*");

37 
MODULE_ALIAS
("pci:v000016ECd00000116sv*sd*bc*sc*i*");

38 
MODULE_ALIAS
("pci:v00001737d00001032sv*sd00000024bc*sc*i*");

39 
MODULE_ALIAS
("pci:v00000001d00008168sv*sd00002410bc*sc*i*");

41 
MODULE_INFO
(
§cvîsi⁄
, "F05CE6F678A2E0DF4F18BD3");

	@
1
.
0
7
63
8139cp.c
8139too.c
atp.c
atp.h
r8169-old.c
r8169.c
r8169.mod.c
